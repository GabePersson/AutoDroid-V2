{"task": "Tap on the 'Search' button and then input the text 'meeting notes' in the search field", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')"}
{"task": "Search for the term 'project deadline' within the current note and then find the previous instance of the word 'budget' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'project deadline')\ntap($prev_matched_text).match('budget')"}
{"task": "Tap on the 'Search' button, input 'project deadline' in the search field, then find the previous instance of the word 'budget' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'project deadline')\ntap($prev_matched_text).match('budget')"}
{"task": "Tap on the 'Search' button, search for 'meeting notes', and then search for the term 'budget' within the found note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')\ntap($next_matched_text)\nset_text($search_text, 'budget')"}
{"task": "Input 'meeting notes' in the search field, then tap on the 'Search' button, and finally search for 'project deadline' within the top result", "solution": "set_text($search_text, 'meeting notes')\ntap($search_within_note)\nset_text($search_text, 'project deadline')"}
{"task": "Open the font size settings and then change the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '150%'})[0])"}
{"task": "Show the current font size setting and then change the font size to 50%", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_size = get_text($current_font_size)\nfont_size_50_button = $font_size_types.match({'text': '50%'})[0]\ntap(font_size_50_button)\ncurrent_size"}
{"task": "Open the app settings and then open more options for the current note", "solution": "tap($settings)\nback()\ntap($more_options_note)"}
{"task": "Open the font size settings and then show the current font size setting", "solution": "tap($settings)\ntap($set_font_size)\ncurrent_size = get_text($current_font_size)\ncurrent_size"}
{"task": "Change the font size to 50% and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '50%'})[0])\nback()\ntap($more_options_checklist)"}
{"task": "Move the checklist item 'Buy groceries' to the bottom and rename the checklist item 'Call mom' to 'Call family'", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($move_selected_item_to_the_buttom)\nlong_tap($checklist_item_list.match('Call mom')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Call family')\ntap($rename_ok)"}
{"task": "Rename the checklist item 'Call mom' to 'Call family' and move the checklist item 'Finish project report' to the bottom", "solution": "long_tap($checklist_item_list.match('Call mom')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Call family')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Finish project report')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Rename the checklist item 'Walk the dog' to 'Evening walk with dog' and move the checklist item 'Finish project report' to the bottom", "solution": "long_tap($checklist_item_list.match('Walk the dog')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Evening walk with dog')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Finish project report')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Move the checklist item 'Read a book' to the bottom and rename the checklist item 'Walk the dog' to 'Evening walk with dog'", "solution": "long_tap($checklist_item_list.match('Read a book')[0])\ntap($move_selected_item_to_the_buttom)\nlong_tap($checklist_item_list.match('Walk the dog')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Evening walk with dog')\ntap($rename_ok)"}
{"task": "Rename the checklist item 'Call mom' to 'Call family' and rename the checklist item 'Walk the dog' to 'Evening walk with dog'", "solution": "long_tap($checklist_item_list.match('Call mom')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Call family')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Walk the dog')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Evening walk with dog')\ntap($rename_ok)"}
{"task": "Open more options for the current note, go to settings from the note options, customize the app colors, set the background color to red, set the text color to white.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($theme_color_custom, 'red')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($theme_color_custom, 'white')\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist, go to settings from the checklist options, customize the app colors, set the background color to orange, set the text color to black.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($theme_color_custom, 'orange')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($theme_color_custom, 'black')\ntap($save_set_colors)"}
{"task": "Search within the current note for the text 'meeting agenda', then close the search box in the current note.", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting agenda')\ntap($close_search_box)"}
{"task": "Open the note titled 'Meeting Notes', then search within it for the text 'meeting agenda'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])\ntap($search_within_note)\nset_text($search_text, 'meeting agenda')"}
{"task": "Create a new note titled 'Grocery List', then open the note titled 'Meeting Notes'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)\ntap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])"}
{"task": "Open the more options menu of the current checklist, access the Settings of the Notes APP, and then set the font size to 150%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Set the font size to 150%, open the more options menu of the current note, and then check the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($more_options_note)\ntap($current_font_size)"}
{"task": "Access the Settings of the Notes APP, open the more options menu of the current note, and then set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()\ntap($more_options_note)"}
{"task": "Check the current font size of the Notes APP, set the font size to 150%, and then open the more options menu of the current checklist.", "solution": "tap($settings)\ntap($current_font_size)\nback()\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($more_options_checklist)"}
{"task": "Rename the current note to 'Grocery List' and create a shortcut for the note titled 'Travel Itinerary'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($open_note)\nnotes = $open_note_title_list.match('Travel Itinerary')\ntap(notes[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the notes font size settings, change the font size to 50%, then change it again to 60%, and finally display the current font size", "solution": "\n# Open the notes font size settings\n\ntap($settings)\n# Scroll settings page to find font size setting\nscroll($scroll_settings_page, \"down\")\ntap($set_font_size)\n# Change the font size to 50%\ntap($font_size_50%)\ntap($set_font_size)  # Make sure the font size was really set\n# Change the font size to 60%\ntap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_font_size)\ntap($font_size_60%)\n# Display the current font size\nfont_size = get_text($current_font_size)\nprint(font_size)"}
{"task": "Change the font size to 60%, go to the app settings, and then open the notes font size settings", "solution": "\n# Change the font size to 60%\ntap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_font_size)\ntap($font_size_60%)\n# Go to app settings and open notes font size settings\nscroll($scroll_settings_page, \"down\")\ntap($set_font_size)\n"}
{"task": "Lock the current note, then export it as a file", "solution": "\n# Lock the current note\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\n# Export the current note as a file\ntap($more_options_note)\ntap($export_as_file)\n"}
{"task": "Open the file of the current checklist, then print it", "solution": "\n# Open file of the current checklist\ntap($more_options_checklist)\ntap($open_file)\n# Print the file of the current checklist\ntap($more_options_checklist)\ntap($print_note)\n"}
{"task": "Export the current note as a file, then print the exported file", "solution": "\n# Export the current note as a file\ntap($more_options_note)\ntap($export_as_file)\n# Print the exported file\ntap($more_options_note)\ntap($print_note)\n"}
{"task": "Open more options for the current note about travel plans and open more options for the current checklist for the weekend chores", "solution": "tap($open_note)\ntap($open_note_title_list.match('travel plans')[0])\ntap($more_options_note)\ntap($switch_to_next_item)\ntap($open_note_title_list.match('weekend chores')[0])\ntap($more_options_checklist)"}
{"task": "Print the current note that contains recipe for pasta and delete the current note containing the address of the new apartment", "solution": "tap($open_note)\ntap($open_note_title_list.match('recipe for pasta')[0])\ntap($more_options_note)\ntap($print_note)\ntap($switch_to_next_item)\ntap($open_note_title_list.match('address of the new apartment')[0])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Print the current note about grocery list, open more options for the current checklist for the weekend chores, and then print the current checklist for office supplies", "solution": "tap($open_note)\ntap($open_note_title_list.match('grocery list')[0])\ntap($more_options_note)\ntap($print_note)\ntap($switch_to_next_item)\ntap($open_note_title_list.match('weekend chores')[0])\ntap($more_options_checklist)\ntap($switch_to_next_item)\ntap($open_note_title_list.match('office supplies')[0])\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Delete the current note containing the address of the new apartment and open more options for the current checklist for project tasks", "solution": "tap($open_note)\ntap($open_note_title_list.match('address of the new apartment')[0])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($switch_to_next_item)\ntap($open_note_title_list.match('project tasks')[0])\ntap($more_options_checklist)"}
{"task": "Open more options for the current note about travel plans, delete the current note titled 'Meeting Minutes', and print the current note about upcoming birthdays", "solution": "tap($open_note)\ntap($open_note_title_list.match('travel plans')[0])\ntap($more_options_note)\ntap($switch_to_next_item)\ntap($open_note_title_list.match('Meeting Minutes')[0])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($switch_to_next_item)\ntap($open_note_title_list.match('upcoming birthdays')[0])\ntap($more_options_note)\ntap($print_note)"}
{"task": "Edit the checklist item 'Complete homework' to 'Submit homework' and then uncheck the checklist item 'Submit homework'", "solution": "long_tap($checklist_item_list.match('Complete homework')[0])\nset_text($rename_input, 'Submit homework')\ntap($rename_ok)\ntap($checklist_item_list.match('Submit homework')[0])"}
{"task": "Mark all checklist items as checked and then scroll through the checklist to view all items", "solution": "checklist_items = $checklist_item_list\nfor item in checklist_items:\n    attributes = get_attributes(item)\n    if not attributes['checked']:\n        tap(item)\nscroll($checklist_item_list, 'down')"}
{"task": "Add a new checklist item with the text 'Buy groceries', duplicate the checklist item 'Buy groceries' and rename the duplicate to 'Grocery shopping'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)\nlong_tap($checklist_item_list.match('Buy groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Grocery shopping')\ntap($rename_ok)"}
{"task": "Search for the checklist item with the text 'Doctor appointment' and check it if it exists, otherwise add it to the checklist", "solution": "checklist_items = $checklist_item_list.match('Doctor appointment')\nif len(checklist_items) > 0:\n    tap(checklist_items[0])\nelse:\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'Doctor appointment')\n    tap($add_checklist_item_ok)"}
{"task": "Increase the font size to 250% and then view the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\nfont_size_text = get_text($current_font_size)\nprint(font_size_text)"}
{"task": "Find the previous instance of the word 'budget' within the current note and then tap on the 'Search' button to input 'project deadline'", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($prev_matched_text)\nset_text($search_text, 'project deadline')\n"}
{"task": "Tap on the 'Search' button, search for 'meeting notes', find the previous instance of the word 'budget', and then search for 'project deadline'", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')\nset_text($search_text, 'budget')\ntap($prev_matched_text)\nset_text($search_text, 'project deadline')\n"}
{"task": "Input 'meeting notes' in the search field and tap on the 'Search' button, find the previous instance of 'budget' within the found note and then search for 'project deadline' in the same note", "solution": "set_text($search_text, 'meeting notes')\ntap($search_within_note)\nset_text($search_text, 'budget')\ntap($prev_matched_text)\nset_text($search_text, 'project deadline')\n"}
{"task": "Create a text note with the title 'Meeting Agenda' and add bullets for 'Discuss quarterly results', 'Plan next marketing campaign', 'Team feedback'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Agenda')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '- Discuss quarterly results\\n- Plan next marketing campaign\\n- Team feedback')\ntap($save_note)\n"}
{"task": "Open an existing note titled 'Project Plan' and convert it to a checklist with items 'Finalize budget', 'Assign tasks', 'Set deadlines'", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nfor i in range(len(open_note_title_list)):\n    if get_text(open_note_title_list[i]) == 'Project Plan':\n        tap(open_note_title_list[i])\n        break\ntap($more_options_note)\ntap($rename_note)\ntap($checklist_type)\ntap($add_note_ok)\nset_text($checklist_item_list[0], 'Finalize budget')\nset_text($checklist_item_list[1], 'Assign tasks')\nset_text($checklist_item_list[2], 'Set deadlines')\nsave_note()\n"}
{"task": "Change the font size to 150% and then open more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($sort_checklist_items_ok)\ntap($more_options_note)"}
{"task": "Open more options for the current checklist and then show the current font size setting", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\nprint(get_text($current_font_size))\nback()"}
{"task": "Open the font size settings, change the font size to 150%, and then show the current font size setting", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($sort_checklist_items_ok)\ntap($settings)\ntap($current_font_size)\nprint(get_text($current_font_size))\nback()"}
{"task": "Turn on the 'Make links and emails clickable' option, then open more options for the current note and access the settings from the more options menu of a note.", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\nback()\ntap($more_options_note)\ntap($settings)"}
{"task": "Turn off the 'Make links and emails clickable' option, then turn on the 'use monospaced font' option.", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)"}
{"task": "Move the checklist item 'Buy groceries' to the bottom and rename the checklist item 'Walk the dog' to 'Evening walk with dog'", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($move_selected_item_to_the_buttom)\nlong_tap($checklist_item_list.match('Walk the dog')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Evening walk with dog')\ntap($rename_ok)"}
{"task": "Open settings from note's more options and enable use monospaced font in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_use_monospaced_font)\nback()"}
{"task": "Open more options for the current note and enable Use Incognito mode of keyboards in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Open more options for the current checklist and enable Use Incognito mode of keyboards in settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Open settings from checklist's more options and enable use monospaced font in settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_use_monospaced_font)\nback()"}
{"task": "Lock the current checklist, then export it as a file", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'lock note'})[0])\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'export as file'})[0])"}
{"task": "Open the file of the current note, then lock it", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match({'text': 'open file'})[0])\ntap($more_options_note)\ntap($more_option_note_buttons.match({'text': 'lock note'})[0])\ntap($lock_note_ok)"}
{"task": "Export the current checklist as a file, then open the file of the current checklist", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'export as file'})[0])\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'open file'})[0])"}
{"task": "Print the current note, then lock it", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match({'text': 'print'})[0])\ntap($more_options_note)\ntap($more_option_note_buttons.match({'text': 'lock note'})[0])\ntap($lock_note_ok)"}
{"task": "Open the file of the current checklist, print it, then export it as a file", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'open file'})[0])\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'print'})[0])\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'export as file'})[0])"}
{"task": "Print the current checklist for office supplies, print the current note that contains recipe for pasta, and then open more options for the current checklist for the weekend chores.", "solution": "print(get_text($checklist_item_list))\nprint(get_text($note_content))\ntap($more_options_checklist)"}
{"task": "Enable line wrap in the settings and then set the alignment to center after opening more options of the note", "solution": "tap($settings)\nif not get_attributes($set_enable_line_wrap)[\"checked\"]:\n    tap($set_enable_line_wrap)\nscroll($scroll_settings_page, \"down\")\ntap($exit_settings)\ntap($more_options_note)\ntap($set_alignment)\nset_text($alignment, \"Center\")\ntap($alignment_ok)"}
{"task": "Enable line wrap in the settings and then set the alignment to left after opening more options of the checklist", "solution": "tap($settings)\nif not get_attributes($set_enable_line_wrap)[\"checked\"]:\n    tap($set_enable_line_wrap)\nscroll($scroll_settings_page, \"down\")\ntap($exit_settings)\ntap($more_options_checklist)\ntap($set_alignment)\nset_text($alignment, \"Left\")\ntap($alignment_ok)"}
{"task": "Set the alignment to justify in the settings after opening more options of the note and then enable line wrap", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($exit_settings)\ntap($more_options_note)\ntap($set_alignment)\nset_text($alignment, \"Justify\")\ntap($alignment_ok)\ntap($settings)\nif not get_attributes($set_enable_line_wrap)[\"checked\"]:\n    tap($set_enable_line_wrap)"}
{"task": "Set the alignment to right in the settings after opening more options of the checklist and then enable line wrap", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($exit_settings)\ntap($more_options_checklist)\ntap($set_alignment)\nset_text($alignment, \"Right\")\ntap($alignment_ok)\ntap($settings)\nif not get_attributes($set_enable_line_wrap)[\"checked\"]:\n    tap($set_enable_line_wrap)"}
{"task": "Open more options for the current checklist, access the settings from the more options menu of a checklist, and then turn on the 'Make links and emails clickable' option.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Turn off the 'use monospaced font' option, then open more options for the current note and access the settings from the more options menu of a note.", "solution": "tap($set_use_monospaced_font)\ntap($more_options_note)\ntap($settings)"}
{"task": "Turn on the 'use monospaced font' option, then open more options for the current checklist and access the settings from the more options menu of a checklist.", "solution": "tap($set_use_monospaced_font)\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Turn on the 'Make links and emails clickable' option, then turn off the 'use monospaced font' option.", "solution": "tap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)"}
{"task": "Open more options for the current note, access the settings from the more options menu of a note, and then turn off the 'Make links and emails clickable' option.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Open the settings of the app, change the font size to 300% via the font size option, and then open more options for the current note", "solution": "tap($more_options_note)\nset_text($font_size, '300%')\ntap($ok_button)"}
{"task": "Open more options for the current checklist, increase the font size to 250%, and then increase the font size to 300%", "solution": "tap($more_options_checklist)\ntap($font_size)\ntap($font_size_250%)\ntap($ok_button)\ntap($font_size)\ntap($font_size_300%)\ntap($ok_button)"}
{"task": "Open the settings of the app, increase the font size to 300%, and then view the current font size of the app", "solution": "tap($settings)\ntap($font_size)\ntap($font_size_300%)\ntap($ok_button)\ntap($settings)\ntap($current_font_size)"}
{"task": "Change the font size to 250% via the current font size option and then open more options for the current note", "solution": "tap($font_size)\ntap($font_size_250%)\ntap($ok_button)\ntap($more_options_note)"}
{"task": "Open more options for the current checklist, change the font size to 250% via the current font size option, and then open the settings of the app", "solution": "tap($more_options_checklist)\ntap($current_font_size)\ntap($font_size_250%)\ntap($ok_button)\ntap($settings)"}
{"task": "Open more options for the current note, then open settings and enable use monospaced font and Use Incognito mode of keyboards in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_use_monospaced_font)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open settings from note's more options and enable both use monospaced font and Use Incognito mode of keyboards", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_use_monospaced_font)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open more options for the current checklist, then open settings and enable use monospaced font and Use Incognito mode", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_use_monospaced_font)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open more options for the current note and open more options for the current checklist, then open settings from each and enable use monospaced font.", "solution": "tap($more_options_note)\nback()\ntap($more_options_checklist)\ntap($settings)\ntap($set_use_monospaced_font)"}
{"task": "Open the settings page in the Notes app and scroll down to find the notification settings", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Rename the current checklist to 'Morning Routine' and create a shortcut for the checklist titled 'Workout Plan'", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('rename note')[0])\nset_text($rename_input, 'Morning Routine')\ntap($rename_ok)\ntap($open_note)\ntap($open_note_title_list.match('Workout Plan')[0])\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('create shortcut')[0])"}
{"task": "Rename the current note to 'Meeting Minutes 10-10-2023' and create a shortcut for the note titled 'Project Ideas'", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('rename note')[0])\nset_text($rename_input, 'Meeting Minutes 10-10-2023')\ntap($rename_ok)\ntap($open_note)\ntap($open_note_title_list.match('Project Ideas')[0])\ntap($more_options_note)\ntap($more_option_note_buttons.match('create shortcut')[0])"}
{"task": "Rename the current note to 'Grocery List' and create a shortcut for the note titled 'Project Ideas'", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('rename note')[0])\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($open_note)\ntap($open_note_title_list.match('Project Ideas')[0])\ntap($more_options_note)\ntap($more_option_note_buttons.match('create shortcut')[0])"}
{"task": "Rename the current checklist to 'Morning Routine' and create a shortcut for the checklist titled 'Workout Plan' then rename the current note to 'Meeting Minutes 10-10-2023'", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('rename note')[0])\nset_text($rename_input, 'Morning Routine')\ntap($rename_ok)\ntap($open_note)\ntap($open_note_title_list.match('Workout Plan')[0])\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('create shortcut')[0])\ntap($more_options_note)\ntap($more_option_note_buttons.match('rename note')[0])\nset_text($rename_input, 'Meeting Minutes 10-10-2023')\ntap($rename_ok)"}
{"task": "Create a shortcut for the note titled 'Project Ideas' and rename the current note to 'Travel Itinerary'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Ideas')[0])\ntap($more_options_note)\ntap($more_option_note_buttons.match('create shortcut')[0])\ntap($more_options_note)\ntap($more_option_note_buttons.match('rename note')[0])\nset_text($rename_input, 'Travel Itinerary')\ntap($rename_ok)"}
{"task": "Turn on both the 'Make links and emails clickable' option and the 'use monospaced font' option from the settings accessed via more options of a checklist.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)"}
{"task": "Open settings of the app, customize the colors to a dark theme, and save the customized colors of the app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open more options for the current note, duplicate the note, and then open settings of the app", "solution": "tap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)\ntap($settings)"}
{"task": "Open more options for the current checklist, delete the checklist, and then create a new checklist", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Customize the colors of the app to a light theme, and then close the color customization popup", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($close_set_colors)"}
{"task": "Open more options for the current note and choose to duplicate the note", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match(\"duplicate note\")[0])"}
{"task": "Scroll down the settings page in the Notes app, then scroll back up to the top", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\nscroll($scroll_settings_page, \"up\")\nback()"}
{"task": "Open more options for the current checklist and choose to delete the checklist", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match(\"delete note\")[0])\ntap($delete_note_ok)"}
{"task": "Open the settings page in the Notes app and then exit the settings page after making changes", "solution": "tap($settings)\n# Assuming changes are made here\ntap($exit_settings)"}
{"task": "Open more options for the current note and choose to share the note with John via email", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match(\"share\")[0])\n# Assuming the share via email to John involves another element(s) selection and some text setting"}
{"task": "Increase the font size to 250%, view the current font size of the app, and then increase the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\nback()\ntap($current_font_size)\ncurrent_font_size = get_text($current_font_size)\ntap($font_size_300%)\nback()"}
{"task": "Open the settings of the app, open more options for the current checklist, and then change the font size to 300% via the font size option", "solution": "tap($settings)\nback()\ntap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_300%)\nback()"}
{"task": "Open settings to set the show keyboard on startup, then enable the option to show keyboard on startup, and disable the option to show a note picker on startup", "solution": "tap($settings)\nif not get_attributes($set_show_keyboard_on_startup)[\"checked\"]:\n\ttap($set_show_keyboard_on_startup)\nif get_attributes($set_show_a_note_picker_on_startup)[\"checked\"]:\n\ttap($set_show_a_note_picker_on_startup)\nback()"}
{"task": "Open settings to set the show note picker on startup, then enable the option to show a note picker on startup, and disable the option to show keyboard on startup", "solution": "tap($settings)\nif not get_attributes($set_show_a_note_picker_on_startup)[\"checked\"]:\n\ttap($set_show_a_note_picker_on_startup)\nif get_attributes($set_show_keyboard_on_startup)[\"checked\"]:\n\ttap($set_show_keyboard_on_startup)\nback()"}
{"task": "Open more options for the current note, and then enable the option to show keyboard on startup", "solution": "tap($more_options_note)\ntap($settings)\nif not get_attributes($set_show_keyboard_on_startup)[\"checked\"]:\n\ttap($set_show_keyboard_on_startup)\nback()"}
{"task": "Enable line wrap in the settings for both note and checklist after opening more options", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_enable_line_wrap)\nback()\ntap($more_options_checklist)\ntap($settings)\ntap($set_enable_line_wrap)\nback()"}
{"task": "Set the alignment to center in the settings after opening more options of both the note and the checklist", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_alignment)\ntap($alignment_center)\nback()\ntap($more_options_checklist)\ntap($settings)\ntap($set_alignment)\ntap($alignment_center)\nback()"}
{"task": "Enable line wrap in the settings after opening more options of the note, and then set the alignment to left for the checklist", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_enable_line_wrap)\nback()\ntap($more_options_checklist)\ntap($settings)\ntap($set_alignment)\ntap($alignment_left)\nback()"}
{"task": "Enable line wrap in the settings for both the note and checklist, and then set the alignment to justify for both", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($alignment_justify)\nback()\ntap($more_options_checklist)\ntap($settings)\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($alignment_justify)\nback()"}
{"task": "Show the title of the current note, then move to the next note entry and reveal its title", "solution": "print(get_text($item_title))\ntap($switch_to_next_item)\nprint(get_text($item_title))"}
{"task": "Edit the note to add the text 'Meeting at 3 PM tomorrow' at the beginning, then search for the word 'important' within the note and highlight it if found", "solution": "tap($note_content)\ncurrent_content = get_text($note_content)\nset_text($note_content, 'Meeting at 3 PM tomorrow\\n' + current_content)\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'important')\ntap($next_matchhed_text)"}
{"task": "Modify the note content to include 'Grocery list: milk, eggs, bread' at the end, then add 'Call mom' in the middle of the list", "solution": "tap($note_content)\ncurrent_content = get_text($note_content)\nnew_content = current_content + '\\nGrocery list: milk, eggs, bread'\nset_text($note_content, new_content)\n# Adding 'Call mom' in the middle of the list\nlines = new_content.split('\\n')\nmiddle_index = len(lines) // 2\nlines.insert(middle_index, 'Call mom')\nnew_content_with_call_mom = '\\n'.join(lines)\nset_text($note_content, new_content_with_call_mom)\ntap($save_note)"}
{"task": "Search for 'deadline' in the existing note, and if found, edit the note to include 'Project deadline is next Monday' at the beginning", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\nmatched = get_attributes($next_matchhed_text)['selected']\nif matched:\n    tap($note_content)\n    current_content = get_text($note_content)\n    set_text($note_content, 'Project deadline is next Monday\\n' + current_content)\n    tap($save_note)"}
{"task": "Add 'Call mom' in the middle of the note content, then search for the word 'important' within the note and highlight it if found", "solution": "tap($note_content)\ncurrent_content = get_text($note_content)\nlines = current_content.split('\\n')\nmiddle_index = len(lines) // 2\nlines.insert(middle_index, 'Call mom')\nnew_content = '\\n'.join(lines)\nset_text($note_content, new_content)\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'important')\ntap($next_matchhed_text)"}
{"task": "Edit the note to add the text 'Meeting at 3 PM tomorrow' at the beginning, then modify the note content to include 'Grocery list: milk, eggs, bread' at the end", "solution": "tap($note_content)\ncurrent_content = get_text($note_content)\nset_text($note_content, 'Meeting at 3 PM tomorrow\\n' + current_content)\ncurrent_content = get_text($note_content)\nnew_content = current_content + '\\nGrocery list: milk, eggs, bread'\nset_text($note_content, new_content)\ntap($save_note)"}
{"task": "Create a new note titled 'Recipe Ideas' and list items 'Spaghetti Bolognese', 'Chicken Tikka Masala', 'Vegetarian Tacos' as text", "solution": "tap($create_note)\nset_text($add_note_title, 'Recipe Ideas')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Spaghetti Bolognese\\nChicken Tikka Masala\\nVegetarian Tacos')\ntap($save_note)"}
{"task": "Open the note 'Daily Workout' and change its type to checklist including 'Warm-up exercises', 'Strength training', 'Cool down stretches'", "solution": "tap($open_note)\n$open_note_title_list.match('Daily Workout')[0].tap()\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Daily Workout')\ntap($checklist_type)\ntap($add_note_ok)\nlong_tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Warm-up exercises')\ntap($add_checklist_item_ok)\nlong_tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Strength training')\ntap($add_checklist_item_ok)\nlong_tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Cool down stretches')\ntap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Create a note titled 'Weekend Chores' and add a checklist type with items 'Laundry', 'Grocery Shopping', 'Clean the house'", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Chores')\ntap($checklist_type)\ntap($add_note_ok)\nlong_tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Laundry')\ntap($add_checklist_item_ok)\nlong_tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Grocery Shopping')\ntap($add_checklist_item_ok)\nlong_tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Clean the house')\ntap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Create a new text note titled 'Books to Read' and add 'The Great Gatsby', '1984', 'To Kill a Mockingbird' as text items", "solution": "tap($create_note)\nset_text($add_note_title, 'Books to Read')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'The Great Gatsby\\n1984\\nTo Kill a Mockingbird')\ntap($save_note)"}
{"task": "Open the note 'Packing List' and convert it to a checklist with items 'Toothbrush', 'Passport', 'Snacks'", "solution": "tap($open_note)\n$open_note_title_list.match('Packing List')[0].tap()\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Packing List')\ntap($checklist_type)\ntap($add_note_ok)\nlong_tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Toothbrush')\ntap($add_checklist_item_ok)\nlong_tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Passport')\ntap($add_checklist_item_ok)\nlong_tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Snacks')\ntap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Open the settings page in the Notes app, scroll down to the privacy settings, and adjust the settings as needed", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Open more options for the current note and move the note to a different folder", "solution": "tap($more_options_note)\n# Assuming 'move note to different folder' is an option, but not listed in dependencies\ntap($more_option_note_buttons.match({'text': 'Move to folder'})[0])"}
{"task": "Open more options in the current note, go to settings, and set the theme color of the app to dark red", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Open more options in the current checklist, go to settings, and set the theme color of the app to white", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Open more options in the current note, navigate to settings, then customize the colors to set the theme color of the app to dark red, and finally open more options in the current checklist", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\nback()\ntap($more_options_checklist)"}
{"task": "Create a shortcut for the checklist titled 'Workout Plan' and rename the current checklist to 'Morning Routine' then create a shortcut for the note titled 'Project Ideas'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nworkout_plan_note = open_note_titles.match('Workout Plan')[0]\ncurrent_note = open_note_titles.match({'selected': True})[0]\ntap(workout_plan_note)\ntap($more_options_checklist)\ntap($create_shortcut)\ntap(current_note)\ntap($rename_note)\nset_text($rename_input, 'Morning Routine')\ntap($rename_ok)\ntap($open_note)\nproject_ideas_note = open_note_titles.match('Project Ideas')[0]\ntap(project_ideas_note)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Rename the current note to 'Meeting Minutes 10-10-2023' and create a shortcut for the note titled 'Travel Itinerary' then rename the current checklist to 'Morning Routine'", "solution": "tap($rename_note)\nset_text($rename_input, 'Meeting Minutes 10-10-2023')\ntap($rename_ok)\ntap($open_note)\ntravel_itinerary_note = $open_note_title_list.match('Travel Itinerary')[0]\ntap(travel_itinerary_note)\ntap($more_options_note)\ntap($create_shortcut)\ntap($open_note)\nmorning_routine_checklist = $open_note_title_list.match('Morning Routine')[0]\ntap(morning_routine_checklist)\ntap($rename_note)\nset_text($rename_input, 'Morning Routine')\ntap($rename_ok)"}
{"task": "Search for the text 'meeting notes' within the current note and then find the next occurrence of the word 'deadline'", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')\ntap($next_matchhed_text)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)"}
{"task": "Search for the keyword 'invoice' within the current note and then close the search box", "solution": "tap($search_within_note)\nset_text($search_text, 'invoice')\ntap($close_search_box)"}
{"task": "Search for the phrase 'client feedback' and then navigate to the next matching text after searching for 'budget' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'client feedback')\ntap($next_matchhed_text)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)"}
{"task": "Open more options for the current note, move the note to a new folder named 'Work'", "solution": "tap($more_options_note)\ntap($create_shortcut)\nset_text($rename_input, 'Work')\ntap($rename_ok)"}
{"task": "Open settings of the app, change the app language to Spanish, and save the settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_high_contrast)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open more options for the current checklist, rename the checklist to 'Weekend Tasks'", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Weekend Tasks')\ntap($rename_ok)"}
{"task": "Open settings of the app, customize the colors to a high contrast theme, save the customized colors, and then close the color customization popup", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_high_contrast)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the 'more options' in the current checklist and sort the items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Display the title of the current checklist and switch to the next checklist item, then go to the next item in the list", "solution": "print(get_text($item_title))\ntap($switch_to_next_item)\ntap($switch_to_next_item)"}
{"task": "Reveal the title of the active note, move to the next note entry, and then show the title of the current note", "solution": "print(get_text($item_title))\ntap($switch_to_next_item)\nprint(get_text($item_title))"}
{"task": "Switch to the next checklist item, display the title of the current checklist, and then go to the next item in the list", "solution": "tap($switch_to_next_item)\nprint(get_text($item_title))\ntap($switch_to_next_item)"}
{"task": "Show the title of the current note, go to the next item in the list, and then reveal the title of the active note", "solution": "print(get_text($item_title))\ntap($switch_to_next_item)\nprint(get_text($item_title))"}
{"task": "Move to the next note entry, display the title of the current checklist, and then switch to the next checklist item", "solution": "tap($switch_to_next_item)\nprint(get_text($item_title))\ntap($switch_to_next_item)"}
{"task": "Create a note titled 'Holiday Plans' and add items 'Book flights', 'Reserve hotel', 'Plan itinerary' as text", "solution": "tap($create_note)\nset_text($add_note_title, 'Holiday Plans')\ntap($text_note_type)\ntap($add_note_ok)\ntap($note_content)\nset_text($note_content, 'Book flights\\nReserve hotel\\nPlan itinerary')\ntap($save_note)"}
{"task": "Open settings in the app and enable setting to place cursor at the end of the note", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\nback()"}
{"task": "Disable setting to show keyboard on startup and press more options in the current note", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\nback()\ntap($more_options_note)"}
{"task": "Enable setting to show keyboard on startup and open settings in the app", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\nback()\ntap($settings)"}
{"task": "Press more options in the current checklist and then disable setting to place cursor at the end of the note", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_place_cursor_to_the_end_of_note)\nback()"}
{"task": "Find and highlight the term 'schedule' in the note, then search for 'deadline' in the existing note, and if found, add 'Client meeting at noon' in the middle of the note content", "solution": "tap($search_within_note)\nset_text($search_text, 'schedule')\ntap($next_matchhed_text)\nset_text($search_text, 'deadline')\nif get_text($prev_matched_text) == 'deadline':\n    set_text($note_content, get_text($note_content)[:len(get_text($note_content))//2] + 'Client meeting at noon' + get_text($note_content)[len(get_text($note_content))//2:])\ntap($close_search_box)"}
{"task": "Search for the word 'important' within the note and highlight it if found, then edit the note to include 'Grocery list: milk, eggs, bread' at the end", "solution": "tap($search_within_note)\nset_text($search_text, 'important')\ntap($next_matchhed_text)\nset_text($note_content, get_text($note_content) + 'Grocery list: milk, eggs, bread')\ntap($close_search_box)"}
{"task": "Edit the note to add the text 'Meeting at 3 PM tomorrow' at the beginning, then search for 'deadline' in the existing note and highlight it if found", "solution": "set_text($note_content, 'Meeting at 3 PM tomorrow' + get_text($note_content))\ntap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Open more options for the current checklist and then open the settings of the app", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Confirm the sort type of the current checklist, then sort the items of the current checklist by date", "solution": "tap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by custom and then open the 'more options' in the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Open the 'more options' in the current checklist, then sort the items by custom and finally sort them by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by date created, then open the 'more options' and sort the items by custom", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the 'more options' in the current checklist, sort the items by date created, then sort the items by custom", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by custom, then open the 'more options' and finally sort the items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the 'more options' in the current checklist, then sort the items by date created and finally by custom", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by date created, then sort by custom and finally open the 'more options' in the current checklist.", "solution": "tap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Open more options for the current note and change the app font size to 200%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'selected': false})[9])\ntap($exit_settings)"}
{"task": "Open app settings and show the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_font_size = get_text($font_size_types.match({'selected': true})[0])\nback()"}
{"task": "Open more options for the current checklist and change the app font size to 175%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'selected': false})[7])\ntap($exit_settings)"}
{"task": "Open app settings and open more options for the current note", "solution": "tap($settings)\ntap($more_options_note)"}
{"task": "Show the current font size of the app and then change the app font size to 200%", "solution": "tap($settings)\ntap($current_font_size)\t\ncurrent_font_size = get_text($font_size_types.match({'selected':True}))\nprint('Current font size:', current_font_size)\ntap($font_size_200%)"}
{"task": "Open more options for the current note, then open app settings, and finally change the app font size to 175%", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\ntap($font_size_175%)"}
{"task": "Open more options for the current checklist and show the current font size of the app, then change the font size to 200%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($current_font_size)\t\ncurrent_font_size = get_text($font_size_types.match({'selected':True}))\nprint('Current font size:', current_font_size)\ntap($font_size_200%)"}
{"task": "Show the current font size of the app and change it to 175%, then open more options for the current note", "solution": "tap($settings)\ntap($current_font_size)\t\ncurrent_font_size = get_text($font_size_types.match({'selected':True}))\nprint('Current font size:', current_font_size)\ntap($font_size_175%)\ntap($more_options_note)"}
{"task": "Open more options in the current note and go to app settings to adjust the font size to 125%", "solution": "# Task 0: Open more options in the current note and go to app settings to adjust the font size to 125%\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Check the current font size of the app and then adjust the font size to 100%", "solution": "# Task 1: Check the current font size of the app and then adjust the font size to 100%\ntap($settings)\nfont_size = get_attributes($current_font_size)['selected']\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Go to app settings from the note options to adjust the font size to 100% and then check the current font size of the app", "solution": "# Task 2: Go to app settings from the note options to adjust the font size to 100% and then check the current font size of the app\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nfont_size = get_attributes($current_font_size)['selected']"}
{"task": "Open more options in the current note and adjust the font size to 125% after checking the current font size", "solution": "# Task 3: Open more options in the current note and adjust the font size to 125% after checking the current font size\ntap($more_options_note)\ntap($settings)\nfont_size = get_attributes($current_font_size)['selected']\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Go to app settings from the checklist options, check the current font size of the app, and then adjust it to 100%", "solution": "# Task 4: Go to app settings from the checklist options, check the current font size of the app, and then adjust it to 100%\ntap($more_options_checklist)\ntap($settings)\nfont_size = get_attributes($current_font_size)['selected']\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Search within the current note for the text 'meeting agenda', then create a new note titled 'Grocery List'.", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting agenda')\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)"}
{"task": "Create a new note titled 'Grocery List', then search within the current note for the text 'meeting agenda'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'meeting agenda')"}
{"task": "Open the note titled 'Meeting Notes', search within it for the text 'meeting agenda', then close the search box in the current note.", "solution": "tap($open_note)\n$open_note_title_list.match('Meeting Notes')[0].tap()\ntap($search_within_note)\nset_text($search_text, 'meeting agenda')\ntap($close_search_box)"}
{"task": "Create a new note titled 'Grocery List', then search within the current note for the text 'meeting agenda' and close the search box.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'meeting agenda')\ntap($close_search_box)"}
{"task": "Open the note titled 'Meeting Notes', then create a new note titled 'Grocery List' and search within it for the text 'meeting agenda'.", "solution": "tap($open_note)\n$open_note_title_list.match('Meeting Notes')[0].tap()\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'meeting agenda')"}
{"task": "Change the background color of the app to blue and then customize the colors of the app", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)\ntap($set_background_color)\ntap($set_background_color.blue)\ntap($close_set_colors)"}
{"task": "Go to app settings and set the primary color of the app to red", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)\ntap($set_primary_color)\ntap($set_primary_color.red)"}
{"task": "Change the background color of the app to blue and then open the more options menu for the current note", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)\ntap($set_background_color)\ntap($set_background_color.blue)\ntap($close_set_colors)\nback()\ntap($more_options_note)"}
{"task": "Go to app settings, change the background color of the app to blue, and then set the primary color of the app to red", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)\ntap($set_background_color)\ntap($set_background_color.blue)\ntap($close_set_colors)\ntap($set_colors)\ntap($set_primary_color)\ntap($set_primary_color.red)"}
{"task": "Open the more options menu for the current note and then customize the colors of the app", "solution": "tap($more_options_note)\nback()\ntap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)\ntap($set_background_color)\ntap($set_background_color.blue)"}
{"task": "Open more options for the current checklist, then open settings to set the show keyboard on startup and enable the option to show keyboard on startup", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_show_keyboard_on_startup)\n"}
{"task": "Open more options for the current note, disable the option to show keyboard on startup, and enable the option to show a note picker on startup", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_show_a_note_picker_on_startup)\n"}
{"task": "Open more options for the current checklist, enable the option to show keyboard on startup, and then disable the option to show a note picker on startup", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_show_a_note_picker_on_startup)\ntap($set_show_a_note_picker_on_startup)\n"}
{"task": "Open settings to set the show note picker on startup, then enable the option to show a note picker on startup, open more options for the current note, and disable the option to show keyboard on startup", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($set_show_a_note_picker_on_startup)\ntap($more_options_note)\ntap($set_show_keyboard_on_startup)\n"}
{"task": "Open more options for the current note, enable the option to show keyboard on startup, open more options for the current checklist, and then disable the option to show a note picker on startup", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_keyboard_on_startup)\ntap($more_options_checklist)\ntap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($set_show_a_note_picker_on_startup)\n"}
{"task": "Switch to the previous note and then switch to the next checklist item in that note", "solution": "tap($switch_to_prev_item)\ntap($switch_to_next_item)"}
{"task": "Switch to the previous note and mark the first checklist item as complete", "solution": "tap($switch_to_prev_item)\nlong_tap($checklist_item_list[0])\ntap($checklist_item_list[0])"}
{"task": "Switch to the next checklist item in the current note and then switch to the previous note", "solution": "tap($switch_to_next_item)\ntap($switch_to_prev_item)"}
{"task": "Switch to the previous note, navigate to the second checklist item, and mark it as incomplete", "solution": "tap($switch_to_prev_item)\nlong_tap($checklist_item_list[1])\nif get_attributes($checklist_item_list[1])[\"checked\"]:\n    tap($checklist_item_list[1])"}
{"task": "Switch to the next checklist item, then switch to the previous note and read the first checklist item aloud", "solution": "tap($switch_to_next_item)\ntap($switch_to_prev_item)\nfirst_item_text = get_text($checklist_item_list[0])\nprint(first_item_text)"}
{"task": "Reveal the title of the active note, go to the next item in the list, and then display the title of the current checklist", "solution": "print(get_text($item_title))\ntap($switch_to_next_item)\nprint(get_text($item_title))"}
{"task": "Go to the next item in the list, move to the next note entry, and then show the title of the current note", "solution": "tap($switch_to_next_item)\ntap($switch_to_next_item)\nprint(get_text($item_title))"}
{"task": "Switch to the next note and view all items in the checklist", "solution": "tap($switch_to_next_item)\n# List all items in the current checklist\nitems = $checklist_item_list\nfor i in range(len(items)):\n    print(get_text(items[i]))"}
{"task": "Switch to the next checklist item and then switch to the next note", "solution": "tap($switch_to_next_item)\ntap($switch_to_next_item)"}
{"task": "Switch to the next note, view all items in the checklist, and then switch to the next checklist item", "solution": "tap($switch_to_next_item)\n# List all items in the current checklist\nitems = $checklist_item_list\nfor i in range(len(items)):\n    print(get_text(items[i]))\ntap($switch_to_next_item)"}
{"task": "Open a note's more options and then access the app's settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Exit the settings page, then open the more options for the current note", "solution": "tap($exit_settings)\ntap($more_options_note)"}
{"task": "Open the more options for the current checklist and then sort the items of the checklist by date", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "From the more options of a checklist, access and then exit the app's settings page", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($exit_settings)"}
{"task": "Sort the items of the current checklist by date, then confirm the sort type", "solution": "tap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Enable setting to place cursor at the end of the note and then disable setting to show keyboard on startup", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_show_keyboard_on_startup)"}
{"task": "Open settings in the app, disable setting to place cursor at the end of the note, and enable setting to show keyboard on startup", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_show_keyboard_on_startup)"}
{"task": "Press more options in the current note and then open settings in the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Disable setting to place cursor at the end of the note, open settings in the app, and enable setting to show keyboard on startup.", "solution": "tap($set_place_cursor_to_the_end_of_note)\ntap($settings)\ntap($set_show_keyboard_on_startup)"}
{"task": "Create a new note titled 'Holiday Planning' with items 'Book flights, Reserve hotels, Plan itinerary' and then open the note named 'Vacation Ideas' and add the item 'Check local attractions' to it.", "solution": "tap($create_note)\nset_text($add_note_title, 'Holiday Planning')\ntap($checklist_type)\ntap($add_note_ok)\ntap($note_content)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Book flights')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Reserve hotels')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Plan itinerary')\ntap($add_checklist_item_ok)\ntap($open_note)\ntap($open_note_title_list.match('Vacation Ideas')[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Check local attractions')\ntap($add_checklist_item_ok)"}
{"task": "Switch to the previous note, go to the last checklist item, and mark it as complete", "solution": "tap($switch_to_prev_item)\nlong_tap($checklist_item_list[-1])\ntap($checklist_item)"}
{"task": "Switch to the next checklist item, then navigate to the subsequent note and review all checklist items", "solution": "tap($switch_to_next_item)\ntap($switch_to_next_item)\nfor item in $checklist_item_list:\n    tap(item)"}
{"task": "Switch to the previous note, highlight the third checklist item, and switch back to the original note", "solution": "tap($switch_to_prev_item)\nlong_tap($checklist_item_list[2])\ntap($checklist_item_list[2])\ntap($switch_to_next_item)"}
{"task": "Create a new note with the title 'Grocery List' and add a checklist titled 'Items to Buy'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)\nset_text($add_checklist_item_title, 'Items to Buy')\ntap($add_checklist_item_ok)"}
{"task": "Create a new note with the title 'Meeting Agenda' and add a text note titled 'Key Points to Discuss'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Agenda')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Key Points to Discuss')\ntap($save_note)"}
{"task": "Open the settings of the app from a note's more options, exit the settings page, and then re-open the settings from a checklist's more options", "solution": "tap($more_options_note)\ntap($settings)\ntap($exit_settings)\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Search for the keyword 'meeting' within the current note and then open more options for the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($more_options_note)"}
{"task": "Open more options of the note titled 'Project Plan' and then search for the keyword 'travel itinerary' within the current note", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_idx = [i for i, t in enumerate(note_titles) if get_text(t) == 'Project Plan'][0]\ntap(note_titles[note_idx])\ntap($more_options_note)\ntap($search_within_note)\nset_text($search_text, 'travel itinerary')"}
{"task": "Open more options in the note titled 'Workout Routine' and search for the phrase 'birthday reminders' within the current note", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_idx = [i for i, t in enumerate(note_titles) if get_text(t) == 'Workout Routine'][0]\ntap(note_titles[note_idx])\ntap($more_options_note)\ntap($search_within_note)\nset_text($search_text, 'birthday reminders')"}
{"task": "Search for the keyword 'shopping list' within the current note and then search for the phrase 'birthday reminders' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'shopping list')\ntap($close_search_box)\ntap($search_within_note)\nset_text($search_text, 'birthday reminders')"}
{"task": "Create a new note with the title 'Project Ideas' and then open it to add a text note titled 'AI Development'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)\ntap($open_note)\n$open_note_title_list.match('Project Ideas')[0].tap()\ntap($note_content)\nset_text($note_content, 'AI Development')\ntap($save_note)"}
{"task": "Create a new note with the title 'Travel Itinerary', open it and add a checklist titled 'Places to Visit'", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Itinerary')\ntap($checklist_type)\ntap($add_note_ok)\ntap($open_note)\n$open_note_title_list.match('Travel Itinerary')[0].tap()\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Places to Visit')\ntap($add_checklist_item_ok)"}
{"task": "Create a new note with the title 'Grocery List', then open it and create a text note titled 'Weekly Groceries'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)\ntap($open_note)\n$open_note_title_list.match('Grocery List')[0].tap()\ntap($note_content)\nset_text($note_content, 'Weekly Groceries')\ntap($save_note)"}
{"task": "Create a new note with the title 'Weekend Plans', open it and add a checklist titled 'To-Do List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Plans')\ntap($checklist_type)\ntap($add_note_ok)\ntap($open_note)\n$open_note_title_list.match('Weekend Plans')[0].tap()\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'To-Do List')\ntap($add_checklist_item_ok)"}
{"task": "Create a new note with the title 'Daily Schedule', open it and add a text note titled 'Morning Routine'", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Schedule')\ntap($text_note_type)\ntap($add_note_ok)\ntap($open_note)\n$open_note_title_list.match('Daily Schedule')[0].tap()\ntap($note_content)\nset_text($note_content, 'Morning Routine')\ntap($save_note)"}
{"task": "Search for the keyword 'recipe' within the current note and then open more options for the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'recipe')\ntap($more_options_note)"}
{"task": "Search for the keyword 'meeting' within the current note and then search for the keyword 'travel itinerary' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\nback()\ntap($search_within_note)\nset_text($search_text, 'travel itinerary')"}
{"task": "Search for the keyword 'recipe' within the current note and then search for the phrase 'birthday reminders' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'recipe')\nback()\ntap($search_within_note)\nset_text($search_text, 'birthday reminders')"}
{"task": "Open more options in the note titled 'Workout Routine' and then search for the keyword 'shopping list' within the current note", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Workout Routine':\n        tap(notes[i])\n        tap($more_options_note)\n        tap($search_within_note)\n        set_text($search_text, 'shopping list')\n        break"}
{"task": "Tap on 'more options note', select 'Lock note' and then 'Open file' for the note titled 'Project Plan'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Project Plan':\n        tap(notes[i])\n        tap($more_options_note)\n        tap($lock_note)\n        tap($lock_note_ok)\n        tap($open_file)\n        break"}
{"task": "Open the note called 'Meeting Minutes' and add the points 'Discuss budget allocation, Set deadlines for next milestones', then create a new note titled 'Follow-up Meeting' with items 'Review previous minutes, Assign action items, Set agenda for next meeting'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Minutes')[0])\nset_text($note_content, get_text($note_content) + '\\nDiscuss budget allocation\\nSet deadlines for next milestones')\ntap($save_note)\nback()\ntap($create_note)\nset_text($add_note_title, 'Follow-up Meeting')\ntap($checklist_type)\ntap($add_note_ok)\nset_text($note_content, 'Review previous minutes\\nAssign action items\\nSet agenda for next meeting')\ntap($save_note)\nback()"}
{"task": "Create a new note titled 'Event Preparation' with tasks 'Send invitations, Confirm attendees, Arrange catering', then open the note named 'Birthday Party Checklist' and add the item 'Order cake' to it.", "solution": "tap($create_note)\nset_text($add_note_title, 'Event Preparation')\ntap($checklist_type)\ntap($add_note_ok)\nset_text($note_content, 'Send invitations\\nConfirm attendees\\nArrange catering')\ntap($save_note)\nback()\ntap($open_note)\ntap($open_note_title_list.match('Birthday Party Checklist')[0])\nset_text($note_content, get_text($note_content) + '\\nOrder cake')\ntap($save_note)\nback()"}
{"task": "Open the note called 'Project Plan' and add the task 'Review by team' to the end, then create a new note titled 'Project Follow-ups' with items 'Finalize documents, Schedule review meeting, Send completion report'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Plan')[0])\nset_text($note_content, get_text($note_content) + '\\nReview by team')\ntap($save_note)\nback()\ntap($create_note)\nset_text($add_note_title, 'Project Follow-ups')\ntap($checklist_type)\ntap($add_note_ok)\nset_text($note_content, 'Finalize documents\\nSchedule review meeting\\nSend completion report')\ntap($save_note)\nback()"}
{"task": "Create a new note for 'Exercise Routine' and add the items 'Stretching, Running, Cool down', then open the note titled 'Workout Routine' and add the item 'Yoga session' to it.", "solution": "tap($create_note)\nset_text($add_note_title, 'Exercise Routine')\ntap($checklist_type)\ntap($add_note_ok)\nset_text($note_content, 'Stretching\\nRunning\\nCool down')\ntap($save_note)\nback()\ntap($open_note)\ntap($open_note_title_list.match('Workout Routine')[0])\nset_text($note_content, get_text($note_content) + '\\nYoga session')\ntap($save_note)\nback()"}
{"task": "Open the note named 'Book Recommendations' and add the books '1984 by George Orwell, Brave New World by Aldous Huxley', then create a new note titled 'Books to Buy' with items 'Order online, Visit bookstore'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Book Recommendations')[0])\nset_text($note_content, get_text($note_content) + '\\n1984 by George Orwell\\nBrave New World by Aldous Huxley')\ntap($save_note)\nback()\ntap($create_note)\nset_text($add_note_title, 'Books to Buy')\ntap($checklist_type)\ntap($add_note_ok)\nset_text($note_content, 'Order online\\nVisit bookstore')\ntap($save_note)\nback()"}
{"task": "Create a new note with the title 'Work Tasks', open it and create a checklist titled 'Monday Tasks' and include 'Finish Report' and 'Attend Meeting'", "solution": "tap($create_note)\nset_text($add_note_title, 'Work Tasks')\ntap($text_note_type)\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Monday Tasks')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Finish Report')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Attend Meeting')\ntap($add_checklist_item_ok)\n"}
{"task": "Open more options for the current note and rename the current note to 'Shopping List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\n"}
{"task": "Rename the current checklist to 'Grocery List' and lock the current checklist and confirm", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)\n"}
{"task": "Open more options for the current note and lock the current note and confirm", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\n"}
{"task": "Open more options for the current checklist and rename the current checklist to 'Grocery List'", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\n"}
{"task": "Rename the current note to 'Shopping List' and lock the current note and confirm", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open more options for the current checklist and lock the current checklist and confirm", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Shopping List' and rename the current checklist to 'Grocery List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Open more options for the current checklist and lock the current checklist and confirm then rename the current checklist to 'Grocery List'", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Rename the checklist item 'Buy Groceries' to 'Buy Vegetables' and then delete the checklist item 'Morning Run'", "solution": "long_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy Vegetables')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Morning Run')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Adjust the font size to 125% from app settings after opening more options in the current note and then check the current font size", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\nifs = $font_size_types.match({'selected': true})\nif len(ifs) > 0 and get_text(ifs[0]) == '125%':\n    back()\nelse:\n    tap($font_size_125%)\n    back()\nback()\n"}
{"task": "Open more options in the current note, go to app settings to check the current font size, and adjust it to 125%", "solution": "tap($more_options_note)\ntap($settings)\nifs = $current_font_size\nif len(ifs) > 0 and get_text(ifs[0]) == '125%':\n    back()\nelse:\n    tap($font_size_125%)\n    back()\nback()\n"}
{"task": "Go to app settings from the checklist options, check the current font size of the app, and adjust it to 125%", "solution": "tap($more_options_checklist)\ntap($settings)\nifs = $current_font_size\nif len(ifs) > 0 and get_text(ifs[0]) == '125%':\n    back()\nelse:\n    tap($font_size_125%)\n    back()\nback()\n"}
{"task": "Move to the next note and then tap on more options to share the current checklist", "solution": "tap($switch_to_next_item)\ntap($more_options_checklist)\ntap($share)\n"}
{"task": "Switch to the previous checklist and then tap on more options to delete the current checklist", "solution": "tap($switch_to_prev_item)\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\n"}
{"task": "Set the primary color of the app to red, then go to app settings, and finally open the more options menu for the current checklist", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($set_primary_color)\nback()\ntap($exit_settings)\ntap($more_options_checklist)"}
{"task": "Customize the colors of the app and then change the background color of the app to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nselect($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Set the primary color of the app to red and then open the more options menu for the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_dark_red)\nback()\ntap($exit_settings)\ntap($more_options_note)"}
{"task": "Open more options for the current note and set a reminder for tomorrow at 9 AM", "solution": "tap($settings)\ntap($set_colors)\ntap($background_color)\nback()\nback()\ntap($more_options_note)"}
{"task": "Navigate to settings from the current note and customize the colors of the app to blue", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_theme_color)\ntap($background_color)\ntap($theme_color_light_blue)"}
{"task": "Delete the checklist item 'Complete Homework' and then rename the checklist item 'Read Book' to 'Read Novel'", "solution": "long_tap($checklist_item_list.match('Complete Homework')[0])\ntap($delete_selected_checklist_item)\nlong_tap($checklist_item_list.match('Read Book')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Read Novel')\ntap($rename_ok)"}
{"task": "Rename the checklist item 'Plan Vacation' to 'Book Flights' and then delete the checklist item 'Clean Room'", "solution": "long_tap($checklist_item_list.match('Plan Vacation')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Book Flights')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Clean Room')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Rename the checklist item 'Read Book' to 'Read Novel', then rename the checklist item 'Plan Vacation' to 'Book Flights'", "solution": "long_tap($checklist_item_list.match('Read Book')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Read Novel')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Plan Vacation')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Book Flights')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Complete Homework', then rename the checklist item 'Buy Groceries' to 'Buy Vegetables' and finally delete the checklist item 'Morning Run'", "solution": "long_tap($checklist_item_list.match('Complete Homework')[0])\ntap($delete_selected_checklist_item)\nlong_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy Vegetables')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Morning Run')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Rename the checklist item 'Buy Groceries' to 'Buy Vegetables', delete the checklist item 'Complete Homework', and then rename the checklist item 'Plan Vacation' to 'Book Flights'", "solution": "long_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy Vegetables')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Complete Homework')[0])\ntap($delete_selected_checklist_item)\nlong_tap($checklist_item_list.match('Plan Vacation')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Book Flights')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Morning Run', rename the checklist item 'Read Book' to 'Read Novel', and then delete the checklist item 'Clean Room'", "solution": "long_tap($checklist_item_list.match('Morning Run')[0]);tap($delete_selected_checklist_item);long_tap($checklist_item_list.match('Read Book')[0]);tap($rename_selected_checklist_item);set_text($rename_input, 'Read Novel');tap($rename_ok);long_tap($checklist_item_list.match('Clean Room')[0]);tap($delete_selected_checklist_item)"}
{"task": "Rename the checklist item 'Plan Vacation' to 'Book Flights', delete the checklist item 'Complete Homework', and then delete the checklist item 'Morning Run'", "solution": "long_tap($checklist_item_list.match('Plan Vacation')[0]);tap($rename_selected_checklist_item);set_text($rename_input, 'Book Flights');tap($rename_ok);long_tap($checklist_item_list.match('Complete Homework')[0]);tap($delete_selected_checklist_item);long_tap($checklist_item_list.match('Morning Run')[0]);tap($delete_selected_checklist_item)"}
{"task": "Open the more options of the current note and then open the app settings", "solution": "tap($more_options_note);tap($settings)"}
{"task": "Open the more options of the current checklist and customize the app colors from the settings", "solution": "tap($more_options_checklist);tap($settings);tap($set_colors)"}
{"task": "Open the app settings from the more options of the current note, then set the theme color to Black & White", "solution": "tap($more_options_note);tap($settings);tap($set_colors);tap($set_theme_color);tap($theme_color_black_white);tap($save_set_colors)"}
{"task": "Search for 'important dates' within the current note and then immediately find the next match for 'action items'", "solution": "tap($search_within_note)\nset_text($search_text, 'important dates')\ntap($next_matchhed_text)\nset_text($search_text, 'action items')\ntap($next_matchhed_text)"}
{"task": "Search for the text 'meeting notes' within the current note, find the next occurrence of the word 'deadline', and then close the search box", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')\ntap($next_matchhed_text)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Search for the phrase 'client feedback', find the next occurrence in the current note, and then close the search box", "solution": "tap($search_within_note)\nset_text($search_text, 'client feedback')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Search for 'conference details' in the current note and then find the next matching text for 'action items'", "solution": "tap($search_within_note)\nset_text($search_text, 'conference details')\ntap($next_matchhed_text)\nset_text($search_text, 'action items')\ntap($next_matchhed_text)"}
{"task": "Search for 'project update' within the current note and then close the search box", "solution": "tap($search_within_note)\nset_text($search_text, 'project update')\ntap($close_search_box)"}
{"task": "View all items in the checklist, switch to the next note, and then view all items in the checklist again", "solution": "long_tap($checklist_item_list); tap($switch_to_next_item); long_tap($checklist_item_list)"}
{"task": "Switch to the next note, switch to the next checklist item, and then view all items in the checklist", "solution": "tap($switch_to_next_item); tap($switch_to_next_item); long_tap($checklist_item_list)"}
{"task": "View all items in the checklist and then switch to the next note three times in a row", "solution": "long_tap($checklist_item_list); tap($switch_to_next_item); tap($switch_to_next_item); tap($switch_to_next_item)"}
{"task": "Switch to the next checklist item and then switch to the next note twice", "solution": "tap($switch_to_next_item); tap($switch_to_next_item); tap($switch_to_next_item); tap($switch_to_next_item)"}
{"task": "View all items in the checklist, switch to the next note, and then switch to the next checklist item twice.", "solution": "long_tap($checklist_item_list); tap($switch_to_next_item); tap($switch_to_next_item); tap($switch_to_next_item)"}
{"task": "Open more options in the current checklist, access the settings, customize colors, set the theme color to white, and then check back to see if the note theme color has changed", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\nback()\nback()\nback()\n# No direct way to check the note theme color in the provided commands, so assuming visual confirmation."}
{"task": "Go to more options in the current note, switch to settings, change the theme to dark red, and then open more options in the current checklist to ensure the colors are synchronized", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()\nback()\nback()\ntap($more_options_checklist)\n# Assuming visual confirmation for color synchronization."}
{"task": "First open more options in the current checklist, set the theme color to dark red from settings, then repeat the process for a current note to set its theme color to white", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()\nback()\nback()\ntap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\nback()\nback()\nback()"}
{"task": "Open more options in the current note, access settings to customize the colors and set the theme to white, then open more options in the current checklist for verification", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\nback()\nback()\nback()\ntap($more_options_checklist)\n# Assuming visual confirmation for verification."}
{"task": "Customize the app colors by accessing settings from both the current note and checklist, setting both to dark red, and confirming the changes in each section.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()\nback()\nback()\ntap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()\nback()\nback()"}
{"task": "Open the app settings from the more options of the current checklist, then set the theme color to Custom", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Open the more options of the current note and set the theme color to Black & White from the settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Open the more options of the current note and set the theme color to Custom from the settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Open the more options of the current checklist and set the theme color to Black & White from the settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Open the app settings from the more options of the current note, customize the app colors and set the theme color to Custom", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Move the first checklist item to the top of the list and then move the last checklist item to the top of the list", "solution": "long_tap($checklist_item_list[0])\ntap($move_selected_item_to_the_top)\nlong_tap($checklist_item_list[-1])\ntap($move_selected_item_to_the_top)"}
{"task": "Move the second checklist item to the bottom of the list and then move the high priority checklist item to the top of the list", "solution": "long_tap($checklist_item_list[1])\ntap($move_selected_item_to_the_buttom)\nlong_tap($checklist_item_list.match('high priority')[0])\ntap($move_selected_item_to_the_top)"}
{"task": "Move the completed checklist item to the top of the list and then move the low priority checklist item to the bottom of the list", "solution": "long_tap($checklist_item_list.match({'checked': true})[0])\ntap($move_selected_item_to_the_top)\nlong_tap($checklist_item_list.match('low priority')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Move the urgent checklist item to the top of the list and then move the third checklist item to the bottom", "solution": "long_tap($checklist_item_list.match('urgent')[0])\ntap($move_selected_item_to_the_top)\nlong_tap($checklist_item_list[2])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Move the fourth checklist item to the top of the list and then move the pending checklist item to the bottom of the list", "solution": "long_tap($checklist_item_list[3])\ntap($move_selected_item_to_the_top)\nlong_tap($checklist_item_list.match('pending')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Open the more options menu for the current note and then enable 'Autosave notes' in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_autosave_notes)\nback()"}
{"task": "Disable 'Show a note picker on startup' in settings and then open the more options menu for the current checklist", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\nback()\ntap($more_options_checklist)"}
{"task": "Enable 'Show a note picker on startup' in settings and then disable 'Autosave notes' in settings", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($set_autosave_notes)\nback()"}
{"task": "Open the more options menu for the current note and then disable 'Show a note picker on startup' in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_a_note_picker_on_startup)\nback()"}
{"task": "Enable 'Autosave notes' in settings and then enable 'Show a note picker on startup' in settings", "solution": "tap($settings)\ntap($set_autosave_notes)\ntap($set_show_a_note_picker_on_startup)\nback()"}
{"task": "Enable the incognito mode of keyboards in settings and then open more options for the current note", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nback()\ntap($more_options_note)"}
{"task": "Disable the incognito mode of keyboards in settings, enable line wrap in settings, and then open more options for the current checklist", "solution": "tap($settings)\nattributes = get_attributes($set_use_incognito_mode_of_keyboards)\nif attributes['checked']:\n    tap($set_use_incognito_mode_of_keyboards)\ntap($set_enable_line_wrap)\nback()\ntap($more_options_checklist)"}
{"task": "Open more options for the current note and then enable line wrap in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Open more options for the current checklist after enabling the incognito mode of keyboards in settings and disabling line wrap", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nattributes = get_attributes($set_enable_line_wrap)\nif attributes['checked']:\n    tap($set_enable_line_wrap)\nback()\ntap($more_options_checklist)"}
{"task": "Enable line wrap in settings and then disable the incognito mode of keyboards in settings", "solution": "tap($settings)\ntap($set_enable_line_wrap)\nattributes = get_attributes($set_use_incognito_mode_of_keyboards)\nif attributes['checked']:\n    tap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open the more options menu for the current checklist and then open the more options menu for the current note", "solution": "tap($more_options_checklist)\ntap($more_options_note)"}
{"task": "Disable 'Autosave notes' in settings and then enable 'Show a note picker on startup' in settings", "solution": "tap($settings)\ntap($set_autosave_notes)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Enable 'Autosave notes' in settings and then open the more options menu for the current note.", "solution": "tap($settings)\ntap($set_autosave_notes)\nback()\ntap($more_options_note)"}
{"task": "Open the settings, customize app colors, set the app icon color to blue, then change the theme to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'blue')\ntap($close_set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Open the more options of the current note, access settings, customize app colors, set the app icon color to red", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'red')\ntap($close_set_colors)"}
{"task": "Disable the incognito mode of keyboards in settings, then disable line wrap in settings, and finally open more options for the current note", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_enable_line_wrap)\ntap($exit_settings)\ntap($more_options_note)"}
{"task": "Enable the incognito mode of keyboards in settings, open more options for the current checklist, and then enable line wrap in settings", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($exit_settings)\ntap($more_options_checklist)\ntap($settings)\ntap($set_enable_line_wrap)\ntap($exit_settings)"}
{"task": "Disable line wrap in settings and then enable the incognito mode of keyboards in settings", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_use_incognito_mode_of_keyboards)\ntap($exit_settings)"}
{"task": "Save my current note and then search for the word 'important' within the current note", "solution": "tap($save_note)\ntap($search_within_note)\nset_text($search_text, 'important')"}
{"task": "Search for the word 'important' within the current note and then save the resulting note with highlights of the found words", "solution": "tap($search_within_note)\nset_text($search_text, 'important')\ntap($save_note)"}
{"task": "Move the first checklist item to the top of the list and then move the urgent checklist item to the top of the list", "solution": "long_tap($checklist_item_list[0])\ntap($move_selected_item_to_the_top)\nback()\nurgent_item = $checklist_item_list.match('urgent')[0]\nlong_tap(urgent_item)\ntap($move_selected_item_to_the_top)\nback()"}
{"task": "Move the completed checklist item to the top of the list and then move the second checklist item to the bottom of the list", "solution": "completed_item = $checklist_item_list.match({'checked': True})[0]\nlong_tap(completed_item)\ntap($move_selected_item_to_the_top)\nback()\nlong_tap($checklist_item_list[1])\ntap($move_selected_item_to_the_buttom)\nback()"}
{"task": "Move the high priority checklist item to the top of the list and then move the last checklist item to the top of the list.", "solution": "high_priority_item = $checklist_item_list.match('high priority')[0]\nlong_tap(high_priority_item)\ntap($move_selected_item_to_the_top)\nback()\nlong_tap($checklist_item_list[-1])\ntap($move_selected_item_to_the_top)\nback()"}
{"task": "Search for the word 'meeting' within the current note, then find the next occurrence of the word 'schedule' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\nset_text($search_text, 'schedule')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Find the next occurrence of the word 'schedule' in the current note, and then locate the previous instance of the term 'deadline' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'schedule')\ntap($next_matchhed_text)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\ntap($close_search_box)"}
{"task": "Tap on 'more options checklist', select 'Lock note' for the checklist named 'Groceries', then 'Open file' for the same checklist", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($open_file)"}
{"task": "Tap on 'more options note', select 'Open file', after that tap on 'more options note' again and then select 'Lock note' for the note called 'Meeting Minutes'", "solution": "tap($more_options_note)\ntap($open_file)\ntap($more_options_note)\ntap($lock_note)"}
{"task": "Tap on 'more options checklist', select 'Open file' for the checklist titled 'Travel Packing', and then tap on 'more options checklist' again and select 'Lock note'", "solution": "tap($more_options_checklist)\ntap($open_file)\ntap($more_options_checklist)\ntap($lock_note)"}
{"task": "For the note titled 'Daily Journal', tap on 'more options note', select 'Lock note', then 'Open file', then 'Lock note' again", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($open_file)\ntap($more_options_note)\ntap($lock_note)"}
{"task": "Tap 'more options checklist', select 'Lock note', then 'Open file' and then 'Lock note' again for the checklist 'Weekend Tasks'", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($open_file)\ntap($more_options_checklist)\ntap($lock_note)"}
{"task": "Open the settings, customize app colors, and change the theme to light mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Open the more options of the current note, then change the theme to dark mode by navigating through customize colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Access settings, customize colors, change the theme to custom mode, and set the app icon color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($set_app_icon_color)\ntap({'label': 'Blue'})\ntap($save_set_colors)"}
{"task": "Open the more options of the current note, access settings, customize app colors, and select custom theme", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Change the theme to light mode by opening the settings through the more options of the current note, then going to customize colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Create a new note for 'Home Renovation Ideas' with items 'Paint living room, Replace kitchen tiles, Upgrade bathroom fixtures' and then open the note titled 'Home Maintenance Tasks' and add the item 'Fix leaky faucet' to it.", "solution": "tap($create_note)\nset_text($add_note_title, 'Home Renovation Ideas')\ntap($checklist_type)\ntap($add_note_ok)\nlong_tap($checklist_item_list)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Paint living room')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Replace kitchen tiles')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Upgrade bathroom fixtures')\ntap($add_checklist_item_ok)\nback()\ntap($open_note)\nopen_note_title_elements = $open_note_title_list\nopen_note_title = [el for el in open_note_title_elements if get_text(el) == 'Home Maintenance Tasks'][0]\ntap(open_note_title)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Fix leaky faucet')\ntap($add_checklist_item_ok)"}
{"task": "Open and edit the note titled 'Study Schedule' to include 'Prepare for exams, Complete assignments, Review class notes', then create a new note titled 'Exam Preparation Checklist' with tasks 'Create study plan, Gather materials, Schedule study sessions'.", "solution": "tap($open_note)\nopen_note_title_elements = $open_note_title_list\nopen_note_title = [el for el in open_note_title_elements if get_text(el) == 'Study Schedule'][0]\ntap(open_note_title)\nset_text($note_content, 'Prepare for exams, Complete assignments, Review class notes')\ntap($save_note)\nback()\ntap($create_note)\nset_text($add_note_title, 'Exam Preparation Checklist')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Create study plan')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Gather materials')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Schedule study sessions')\ntap($add_checklist_item_ok)"}
{"task": "Change the font size in the settings of the current note", "solution": "tap($settings)\ntap($set_font_size)\nfont_size_elements = $font_size_types\ntap(font_size_elements[3])\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Open the current checklist and change the font size via settings", "solution": "tap($settings)\ntap($set_font_size)\nfont_size_elements = $font_size_types\ntap(font_size_elements[3])\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Within the current note, access more options and then change the font size in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\nfont_size_elements = $font_size_types\ntap(font_size_elements[3])\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Create a new note, type 'Meeting at 10 AM', save the note, and search for the word 'Meeting' within it", "solution": "tap($create_note)\nset_text($add_note_title, 'New Note')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Meeting at 10 AM')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'Meeting')"}
{"task": "Save my current note, search for 'important', and then create a new note summarizing the found results", "solution": "tap($save_note)\ntap($search_within_note)\nset_text($search_text, 'important')\ntap($create_note)\nset_text($add_note_title, 'Summary')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Search for the word 'important' within the current note, copy the sentences containing 'important' into a new note, and save the new note", "solution": "tap($search_within_note)\nset_text($search_text, 'important')\nnote_text = get_text($note_content)\nimportant_lines = [line for line in note_text.split('\\n') if 'important' in line]\ntap($create_note)\nset_text($add_note_title, 'Important Sentences')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '\\n'.join(important_lines))\ntap($save_note)"}
{"task": "Save my current note, search for 'important', create a new note listing all occurrences of the word 'important' with their line numbers", "solution": "tap($save_note)\ntap($search_within_note)\nset_text($search_text, 'important')\nnote_text = get_text($note_content)\nlines = note_text.split('\\n')\nimportant_occurrences = [f'Line {i+1}: {line}' for i, line in enumerate(lines) if 'important' in line]\ntap($create_note)\nset_text($add_note_title, 'Important Occurrences')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '\\n'.join(important_occurrences))\ntap($save_note)"}
{"task": "Search for the word 'important' within the current note, record the positions of each occurrence, create a new note detailing these positions, and save it", "solution": "tap($search_within_note)\nset_text($search_text, 'important')\nnote_text = get_text($note_content)\nlines = note_text.split('\\n')\npositions = [{'line': i+1, 'position': line.find('important')+1} for i, line in enumerate(lines) if 'important' in line]\nposition_details = [f'Line {pos['line']}, Position {pos['position']}' for pos in positions]\ntap($create_note)\nset_text($add_note_title, 'Important Positions')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '\\n'.join(position_details))\ntap($save_note)"}
{"task": "Tap on more options to view the current checklist options, then move to the next note", "solution": "tap($more_options_checklist)\ntap($switch_to_next_item)"}
{"task": "Tap on more options to customize the current checklist, then switch to the next checklist", "solution": "tap($more_options_checklist)\ntap($switch_to_next_item)"}
{"task": "Move to the next note, switch to the previous checklist, and view the current checklist options", "solution": "tap($switch_to_next_item)\ntap($switch_to_prev_item)\ntap($more_options_checklist)"}
{"task": "Switch to the next checklist and then tap on more options to share the current checklist", "solution": "tap($switch_to_next_item)\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'share'})[0])"}
{"task": "Move to the previous note, then move to the next note and view the current checklist options", "solution": "tap($switch_to_prev_item)\ntap($switch_to_next_item)\ntap($more_options_checklist)"}
{"task": "Save my current note, search for 'important', extract paragraphs containing the word 'important', create a new note from these paragraphs, and save it", "solution": "tap($save_note)\ntap($search_within_note)\nset_text($search_text, 'important')\ntap($next_matchhed_text)\nparagraphs = set()\nwhile True:\n    attrs = get_attributes($next_matchhed_text)\n    if not attrs['selected']:\n        break\n    paragraph = get_text($note_content)\n    paragraphs.add(paragraph)\n    tap($next_matchhed_text)\ntap($close_search_box)\ntap($back)\ntap($create_note)\nset_text($add_note_title, 'Important Paragraphs')\ntap($text_note_type)\ntap($add_note_ok)\ntap($note_content)\nfor paragraph in paragraphs:\n    set_text($note_content, get_text($note_content) + '\\n' + paragraph)\ntap($save_note)"}
{"task": "Read the current item title and then switch to the previous note", "solution": "title = get_text($item_title)\ntap($switch_to_prev_item)"}
{"task": "Switch to the previous note and read the current item title", "solution": "tap($switch_to_prev_item)\ntitle = get_text($item_title)"}
{"task": "Read the current item title, switch to the previous note, and read the new current item title", "solution": "title1 = get_text($item_title)\ntap($switch_to_prev_item)\ntitle2 = get_text($item_title)"}
{"task": "Switch to the previous note, read the current item title, and switch back to the original note", "solution": "tap($switch_to_prev_item)\ntitle = get_text($item_title)\ntap($switch_to_next_item)"}
{"task": "In the current checklist, tap on more options and change the font size through settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Navigate to the current note, open more options, then access settings and change the font size", "solution": "tap($save_note)\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Access more options in the checklist, go to settings, and adjust the font size", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Open a note, go to more options, access the settings menu, and alter the font size", "solution": "tap($open_note)\ntap($open_note_title_list[0])\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Within a checklist, tap more options, enter settings, and modify the font size.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Open the settings and customize the colors of the app in the Notes APP", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Open more options for the current note and customize the widget colors in the Notes APP", "solution": "tap($more_options_note)\ntap($set_widget_colors)"}
{"task": "Open the settings, customize the colors of the app, and then customize the widget colors in the Notes APP", "solution": "tap($settings)\ntap($set_colors)\nback()\ntap($set_widget_colors)"}
{"task": "Open more options for the current checklist and then open the settings to customize the app colors in the Notes APP", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\ntap($set_colors)"}
{"task": "Open the settings, open more options for the current note, and customize the widget colors in the Notes APP", "solution": "tap($settings)\nback()\ntap($more_options_note)\ntap($set_widget_colors)"}
{"task": "Tap 'more options note', 'Open file' for the note titled 'Book Summary', then 'Lock note' and after that 'Open file' again", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nbook_summary_note = open_notes.match('Book Summary')[0]\ntap(book_summary_note)\ntap($more_options_note)\ntap($open_file)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($open_file)"}
{"task": "For the checklist named 'Work Tasks', tap 'more options checklist', 'Open file', 'Lock note', and then 'Open file' again", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nwork_tasks_checklist = open_notes.match('Work Tasks')[0]\ntap(work_tasks_checklist)\ntap($more_options_checklist)\ntap($open_file)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($open_file)"}
{"task": "Open the more options in the current checklist, then open the sort options for checklist items, and sort the checklist items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options in the current checklist, then open the sort options for checklist items, and sort the checklist items by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options in the current checklist, then open the sort options for checklist items, and sort the checklist items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Switch to the previous checklist, customize the current checklist, and then share the current checklist", "solution": "tap($switch_to_prev_item)\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match(\"create shortcut\"))\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match(\"share\"))"}
{"task": "Set the font size to 300% and then go to the Settings menu in the Notes app", "solution": "tap($switch_to_prev_item)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"300%\"))\ntap($more_options_note)"}
{"task": "Open the more options menu for the current note, then show the current font size of the app in the Notes app", "solution": "tap($more_options_note)\ntap($current_font_size)\nresult = get_text($current_font_size)\nprint(result)"}
{"task": "Adjust the font size settings to 200% and then set the cursor to start at the end of the note in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"200%\"))\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Go to the Settings menu, adjust the font size to 300%, and then open the more options menu for the current note in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"300%\"))\ntap($more_options_note)"}
{"task": "Open the more options of the current checklist, access settings, customize colors, and change the theme to dark mode", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()"}
{"task": "Open the more options for the current checklist, then sort the items of the current checklist by Custom and confirm the sorting type of the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options for the current checklist and confirm the sorting type of the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items of the current checklist by Custom, then open the more options for the current checklist and confirm the sorting type", "solution": "tap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items_ok)"}
{"task": "Confirm the sorting type of the current checklist, then open the more options for the current checklist and sort the items by Custom", "solution": "tap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current checklist and share it with Bob via email@example.com", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match({\"text\": \"share\"})[0])\nset_text($share_input, \"Bob via email@example.com\")\ntap($share_ok)"}
{"task": "Navigate to settings from the current checklist and set the theme color to auto light/dark", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match({\"text\": \"settings\"})[0])\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({\"text\": \"Auto light / dark\"})[0])"}
{"task": "Open more options for the current note and lock it with a password '1234'", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match({\"text\": \"lock note\"})[0])\nset_text($lock_note_input, \"1234\")\ntap($lock_note_ok)"}
{"task": "Change the theme color of the app, then open more options for the current checklist and print it", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({\"text\": \"Auto light / dark\"})[0])\nback()\nback()\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match({\"text\": \"print\"})[0])"}
{"task": "Navigate to settings from the current note and enable notifications for all reminders", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match({\"text\": \"settings\"})[0])\ntap($add_reminders_notifications)\ntap($add_reminders_notifications.match({\"text\": \"enable notifications for all reminders\"})[0])"}
{"task": "Open the more options in the current checklist, then sort the checklist items by title, and subsequently sort the checklist items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options in the current checklist, then sort the checklist items by custom order, and subsequently sort the checklist items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options in the current checklist, then open the sort options for checklist items, and sort the checklist items by date created, and finally reorder them by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options in the current checklist, then open the sort options for checklist items, and sort the checklist items by title, and finally sort them by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the sort options for checklist items, sort the checklist items by date created, and then sort them again by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Show the current font size, open the more options menu for the current checklist, and then set the cursor to start at the end of the note in the Notes app", "solution": "tap($settings)\ntap($current_font_size)\n# Showing the current font size\nback()\ntap($more_options_checklist)\ntap($set_place_cursor_to_the_end_of_note)\n"}
{"task": "Set the font size to 150%, then show the current font size, and finally adjust the font size to 200% in the Notes app", "solution": "tap($settings)\ntap($current_font_size)\n# Setting the font size to 150%\ntap($font_size_150%)\nback()\ntap($current_font_size)\n# Showing the current font size\nback()\ntap($current_font_size)\n# Adjusting the font size to 200%\ntap($font_size_200%)\nback()\n"}
{"task": "Go to the Settings menu, set the font size to 300%, and then open the more options menu for the current checklist in the Notes app", "solution": "tap($settings)\ntap($current_font_size)\n# Setting the font size to 300%\ntap($font_size_300%)\nback()\nback()\ntap($more_options_checklist)\n"}
{"task": "Adjust the font size settings, set the font size to 250%, and then show the current font size in the Notes app", "solution": "tap($settings)\ntap($current_font_size)\n# Setting the font size to 250%\ntap($font_size_250%)\nback()\ntap($current_font_size)\n# Showing the current font size\nback()\n"}
{"task": "Open the more options in the current checklist and then sort the items alphabetically", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\n"}
{"task": "Open the more options for the current checklist and sort the items of the current checklist by Custom, followed by confirming the sorting type", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items of the current checklist by Custom, confirm the sorting type of the current checklist, and then open the more options for the current checklist", "solution": "tap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "First confirm the sorting type of the current checklist, next open the more options for the current checklist, and finally sort the items of the current checklist by Custom", "solution": "tap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options for the current checklist, confirm the sorting type of the current checklist, and then sort the items by Custom", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Create a shortcut for the note titled 'Meeting Agenda' and then lock the note titled 'Personal Journal'", "solution": "tap($open_note)\ntitles = $open_note_title_list\nfor idx in range(len(titles)):\n    title_text = get_text(titles[idx])\n    if 'Meeting Agenda' in title_text:\n        tap(titles[idx])\n        tap($more_options_note)\n        tap($create_shortcut)\n        back()\n        break\nfor idx in range(len(titles)):\n    title_text = get_text(titles[idx])\n    if 'Personal Journal' in title_text:\n        tap(titles[idx])\n        tap($more_options_note)\n        tap($lock_note)\n        tap($lock_note_ok)\n        break"}
{"task": "Open the 'more options' menu and sort the current checklist items by title.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by date created, then open the 'more options' menu.", "solution": "tap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Open the 'more options' menu, sort the current checklist items, and use custom sorting.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by title and then by date created.", "solution": "tap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the 'more options' menu, sort the current checklist items by date created, and then use custom sorting.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Delete the current checklist and then rename the current note to 'Meeting Notes'", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Check the settings of the current checklist and then find out more information about the app from the checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($exit_settings)\ntap($about)"}
{"task": "Rename the current checklist to 'Grocery List' and then check the settings of the current note", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Delete the current note, check the settings of the current checklist, and then rename the current checklist to 'Grocery List'", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_checklist)\ntap($settings)\ntap($exit_settings)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Find out more information about the app from a note, then delete the current checklist, and finally rename the current note to 'Weekly Agenda'", "solution": "tap($more_options_note)\ntap($about)\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Weekly Agenda')\ntap($rename_ok)"}
{"task": "Remove the done items from the current checklist and then sort the remaining items by priority", "solution": "tap($more_options_checklist)\ntap($more_options_checklist_buttons.match('remove done items'))\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match('custom'))\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist and then open the more options to share it", "solution": "tap($sort_checklist_items)\ntap($sort_checklist_items_types.match('custom'))\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($more_options_checklist_buttons.match('share'))"}
{"task": "Open the more options in the current checklist, remove the done items, and then sort the remaining items by due date", "solution": "tap($more_options_checklist)\ntap($more_options_checklist_buttons.match('remove done items'))\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match('date created'))\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist and then open the more options to archive the checklist", "solution": "tap($sort_checklist_items)\ntap($sort_checklist_items_types.match('custom'))\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($more_options_checklist_buttons.match('lock note'))"}
{"task": "Remove the done items from the current checklist, sort the remaining items, and then open the more options to duplicate the checklist", "solution": "tap($more_options_checklist)\ntap($more_options_checklist_buttons.match('remove done items'))\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match('custom'))\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($more_options_checklist_buttons.match('export as file'))"}
{"task": "Create a shortcut for the checklist named 'Grocery List' and lock the checklist named 'Weekend Tasks'", "solution": "tap($open_note)\nchecklists = $open_note_title_list.match('Grocery List')\ntap(checklists[0])\ntap($more_options_checklist)\ntap($create_shortcut)\nback()\nchecklists = $open_note_title_list.match('Weekend Tasks')\ntap(checklists[0])\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Lock the note titled 'Personal Journal' and create a shortcut for the note titled 'Meeting Agenda'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Personal Journal')\ntap(notes[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\nback()\nnotes = $open_note_title_list.match('Meeting Agenda')\ntap(notes[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Create a shortcut for the note titled 'Meeting Agenda' and create a shortcut for the checklist named 'Grocery List'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Meeting Agenda')\ntap(notes[0])\ntap($more_options_note)\ntap($create_shortcut)\nback()\nchecklists = $open_note_title_list.match('Grocery List')\ntap(checklists[0])\ntap($more_options_checklist)\ntap($create_shortcut)"}
{"task": "Lock the note titled 'Personal Journal' and then create a shortcut for the checklist named 'Grocery List'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Personal Journal')\ntap(notes[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\nback()\nchecklists = $open_note_title_list.match('Grocery List')\ntap(checklists[0])\ntap($more_options_checklist)\ntap($create_shortcut)"}
{"task": "Lock the checklist named 'Weekend Tasks' and then create a shortcut for the note titled 'Meeting Agenda'", "solution": "tap($open_note)\nchecklists = $open_note_title_list.match('Weekend Tasks')\ntap(checklists[0])\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\nback()\nnotes = $open_note_title_list.match('Meeting Agenda')\ntap(notes[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Sort the current checklist items using custom sorting, then open the 'more options' menu, and sort the items by title.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by title, open the 'more options' menu, and sort them by date created.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the 'more options' menu, sort the current checklist items using custom sorting, and then sort by title.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Set the app alignment to center, then open the settings of the app and customize the app colors to a dark theme.", "solution": "tap($settings)\ntap($set_alignment)\n# Here you would select the center alignment, assuming it is available in the popup window opened by $set_alignment.\nback()\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()"}
{"task": "Set the app alignment to right, then open more options for the current note and rename it to 'Meeting Notes'.", "solution": "tap($settings)\ntap($set_alignment)\n# Here you would select the right alignment, assuming it is available in the popup window opened by $set_alignment.\nback()\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Rename the current note to 'Project Plan', check the settings of the current checklist, and then find out more information about the app from a checklist", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Delete the current note, rename the current checklist to 'Shopping List', and check the settings of the current checklist", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Rename the current note to 'Daily Journal', check the settings of the current note, and then find out more information about the app from a note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Daily Journal')\ntap($rename_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Open settings to make links and emails clickable, then open settings to show word count", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\nback()\ntap($settings)\ntap($set_show_word_count)\nback()"}
{"task": "Uncheck the 'Show word count' option in settings, then check the 'Make links and emails clickable' option in settings", "solution": "tap($settings)\ntap($set_show_word_count)\nback()\ntap($settings)\ntap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Tap on 'more options' for the current note, then open settings to show word count", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_word_count)"}
{"task": "Tap on 'more options' for the current checklist, then check the 'Make links and emails clickable' option in settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Open settings to make links and emails clickable, then uncheck the 'Show word count' option in settings", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_show_word_count)"}
{"task": "Tap on 'more options' for the current note, then tap on 'more options' for the current checklist, finally make the links and emails clickable in settings", "solution": "tap($more_options_note)\nback()\ntap($more_options_checklist)\nback()\ntap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "First check the 'Make links and emails clickable' option in settings, then tap on 'more options' for the current note", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\nback()\ntap($more_options_note)"}
{"task": "Open the settings of the app, customize the app colors to a blue color scheme and then close the color customization window.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_primary_color)\nset_text($set_primary_color, 'blue')\ntap($save_set_colors)\nback()"}
{"task": "Set the app alignment to left, open more options for the current checklist and mark all tasks as completed.", "solution": "tap($settings)\ntap($set_alignment)\ntap($alignment_left)\nback()\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open the settings of the app, customize the app colors to a green theme, then open more options for the current checklist and add a new task called 'Submit Report'.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)\nback()\ntap($more_options_checklist)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Submit Report')\ntap($add_checklist_item_ok)"}
{"task": "Set the app alignment to center, then open more options for the current note and share it with the team.", "solution": "tap($settings)\ntap($set_alignment)\ntap($alignment_center)\nback()\ntap($more_options_note)\ntap($share_note)"}
{"task": "Open the settings of the app, set the app alignment to right, then customize the app colors to a red theme and close the color customization window.", "solution": "tap($settings)\ntap($set_alignment)\ntap($alignment_right)\nback()\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_primary_color)\nset_text($set_primary_color, 'red')\ntap($save_set_colors)\nback()"}
{"task": "Open settings to show word count, then uncheck the 'Show word count' option in settings, and finally tap on 'more options' for the current checklist", "solution": "tap($settings)\nif get_attributes($set_show_word_count)['checked']:\n    tap($set_show_word_count)\nback()\ntap($more_options_checklist)"}
{"task": "Open the settings of the Notes App and customize the colors to set the primary color to blue and the app icon color to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($customize_primary_ok, 'blue')\ntap($customize_primary_ok)\ntap($set_app_icon_color)\nset_text($customize_app_icon_color, 'green')\ntap($customize_primary_ok)\nback()"}
{"task": "Open the current note options and then open the settings to customize the app colors", "solution": "tap($more_options_note)\nback()\ntap($settings)\ntap($set_colors)"}
{"task": "Customize the colors of the Notes App by setting the primary color to blue, then open the more options for the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($customize_primary_ok, 'blue')\ntap($customize_primary_ok)\nback()\ntap($more_options_note)"}
{"task": "Open the settings of the Notes App, set the primary color to blue, then open more options for the current checklist and customize the app icon color to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($customize_primary_ok, 'blue')\ntap($customize_primary_ok)\nback()\ntap($more_options_checklist)\nback()\ntap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($customize_app_icon_color, 'green')\ntap($customize_primary_ok)\nback()"}
{"task": "Set the app alignment to left, open more options for the current checklist, duplicate it and rename the duplicate to 'Shopping List'.", "solution": "tap($settings)\ntap($set_alignment)\ntap($alignment_left)\ntap($exit_settings)\ntap($more_options_checklist)\ntap($duplicate_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)"}
{"task": "Customize the widget colors to blue and green and then open the settings of the Notes app", "solution": "tap($settings)\ntap($set_widget_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($select_blue)\ntap($set_background_color)\ntap($select_green)\ntap($save_set_colors)\nback()"}
{"task": "Change the font size to 14pt in the Notes app and then open more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()\ntap($more_options_note)"}
{"task": "Open the settings of the Notes app and then customize the widget colors to red", "solution": "tap($settings)\ntap($set_widget_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($select_red)\ntap($save_set_colors)\nback()"}
{"task": "Open more options for the current checklist in the Notes app and then change the font size to 16pt", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Create a shortcut for the checklist named 'Grocery List', lock the checklist named 'Weekend Tasks', and then create a shortcut for the note titled 'Meeting Agenda'", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nfor i in range(len(open_notes)):\n    if get_text(open_notes[i]) == 'Grocery List':\n        tap(open_notes[i])\n        break\ntap($more_options_checklist)\nmore_options = $more_option_checklist_buttons\nfor i in range(len(more_options)):\n    if get_text(more_options[i]) == 'Create shortcut':\n        tap(more_options[i])\n        break\nback()\nfor i in range(len(open_notes)):\n    if get_text(open_notes[i]) == 'Weekend Tasks':\n        tap(open_notes[i])\n        break\ntap($more_options_checklist)\nmore_options = $more_option_checklist_buttons\nfor i in range(len(more_options)):\n    if get_text(more_options[i]) == 'Lock note':\n        tap(more_options[i])\n        tap($lock_note_ok)\n        break\nback()\nfor i in range(len(open_notes)):\n    if get_text(open_notes[i]) == 'Meeting Agenda':\n        tap(open_notes[i])\n        break\ntap($more_options_note)\nmore_options = $more_option_note_buttons\nfor i in range(len(more_options)):\n    if get_text(more_options[i]) == 'Create shortcut':\n        tap(more_options[i])\n        break"}
{"task": "Lock the note titled 'Personal Journal', lock the checklist named 'Weekend Tasks', and create a shortcut for the note titled 'Meeting Agenda'", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nfor i in range(len(open_notes)):\n    if get_text(open_notes[i]) == 'Personal Journal':\n        tap(open_notes[i])\n        break\ntap($more_options_note)\nmore_options = $more_option_note_buttons\nfor i in range(len(more_options)):\n    if get_text(more_options[i]) == 'Lock note':\n        tap(more_options[i])\n        tap($lock_note_ok)\n        break\nback()\nfor i in range(len(open_notes)):\n    if get_text(open_notes[i]) == 'Weekend Tasks':\n        tap(open_notes[i])\n        break\ntap($more_options_checklist)\nmore_options = $more_option_checklist_buttons\nfor i in range(len(more_options)):\n    if get_text(more_options[i]) == 'Lock note':\n        tap(more_options[i])\n        tap($lock_note_ok)\n        break\nback()\nfor i in range(len(open_notes)):\n    if get_text(open_notes[i]) == 'Meeting Agenda':\n        tap(open_notes[i])\n        break\ntap($more_options_note)\nmore_options = $more_option_note_buttons\nfor i in range(len(more_options)):\n    if get_text(more_options[i]) == 'Create shortcut':\n        tap(more_options[i])\n        break"}
{"task": "Open the more options menu for the current note and then rename the current note to 'Shopping List'", "solution": "tap($more_options_note)\nmore_options = $more_option_note_buttons\nfor i in range(len(more_options)):\n    if get_text(more_options[i]) == 'Rename note':\n        tap(more_options[i])\n        set_text($rename_input, 'Shopping List')\n        tap($rename_ok)\n        break"}
{"task": "Open the more options menu for the current checklist and then rename the current checklist to 'To-Do List'", "solution": "tap($more_options_checklist)\nmore_options = $more_option_checklist_buttons\nfor i in range(len(more_options)):\n    if get_text(more_options[i]) == 'Rename note':\n        tap(more_options[i])\n        set_text($rename_input, 'To-Do List')\n        tap($rename_ok)\n        break"}
{"task": "Rename the current note to 'Workout Routine' and then show information about the app from the current note", "solution": "tap($more_options_note)\nmore_options = $more_option_note_buttons\nfor i in range(len(more_options)):\n    if get_text(more_options[i]) == 'Rename note':\n        tap(more_options[i])\n        set_text($rename_input, 'Workout Routine')\n        tap($rename_ok)\n        break\ntap($more_options_note)\nmore_options = $more_option_note_buttons\nfor i in range(len(more_options)):\n    if get_text(more_options[i]) == 'About':\n        tap(more_options[i])\n        break"}
{"task": "Rename the current checklist to 'Weekend Plans' and then show information about the app from the current checklist", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Weekend Plans')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($about)"}
{"task": "Open the more options menu for the current note, rename the current note to 'Grocery List', and then show information about the app from the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($more_options_note)\ntap($about)"}
{"task": "Open the more options menu for the current checklist, rename the current checklist to 'Project Tasks', and then show information about the app from the current checklist", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Project Tasks')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($about)"}
{"task": "Rename the current note to 'Meeting Notes', open the more options menu for the current note, and then show information about the app from the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)\ntap($more_options_note)\ntap($about)"}
{"task": "Rename the current checklist to 'Homework Assignments', open the more options menu for the current checklist, and then show information about the app from the current checklist.", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Homework Assignments')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($about)"}
{"task": "Customize the widget colors to yellow and pink in the Notes app and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_widget_colors)\ntap($set_background_color)\nset_text($set_background_color, 'yellow')\ntap($save_set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'pink')\ntap($save_set_colors)\ntap($close_set_colors)\nback()\nback()\ntap($more_options_checklist)"}
{"task": "Open more options for the current note and then change the font size to 12pt in the Notes app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('100%')[0])\ntap($close_set_colors)\nback()\nback()\nback()"}
{"task": "Change the font size to 18pt in the Notes app and then open more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('150%')[0])\ntap($close_set_colors)\nback()\nback()\ntap($more_options_note)"}
{"task": "Customize the widget colors to purple and orange, then open more options for the current note, and finally change the font size to 10pt in the Notes app", "solution": "tap($settings)\ntap($set_widget_colors)\ntap($set_background_color)\nset_text($set_background_color, 'purple')\ntap($save_set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'orange')\ntap($save_set_colors)\ntap($close_set_colors)\nback()\nback()\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('75%')[0])\ntap($close_set_colors)\nback()\nback()"}
{"task": "Show the current item title; then switch to the next item and show its title", "solution": "print(get_text($item_title))\ntap($switch_to_next_item)\nprint(get_text($item_title))"}
{"task": "Set the primary color of the Notes App to blue, then open more options for both the current note and the current checklist", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_custom)\nset_text($set_custom_color_input, 'blue')\ntap($save_set_colors)\ntap($exit_settings)\ntap($more_options_note)\nback()\ntap($more_options_checklist)"}
{"task": "Open the settings of the Notes App, set the app icon color to green, then open more options for the current checklist and the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($theme_color_custom, 'green')\ntap($save_set_colors)\ntap($exit_settings)\ntap($more_options_checklist)\nback()\ntap($more_options_note)"}
{"task": "Customize the colors of the Notes App, setting primary color to blue and app icon color to green, then open the settings again and open more options for the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_custom)\nset_text($set_custom_color_input, 'blue')\ntap($save_set_colors)\ntap($set_app_icon_color)\ntap($theme_color_custom)\nset_text($set_custom_color_input, 'green')\ntap($save_set_colors)\ntap($exit_settings)\ntap($settings)\ntap($more_options_note)"}
{"task": "Open the settings of the Notes App, change the primary color to blue and app icon color to green, and then, without closing settings, open more options for the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_custom)\nset_text($set_custom_color_input, 'blue')\ntap($save_set_colors)\ntap($set_app_icon_color)\ntap($theme_color_custom)\nset_text($set_custom_color_input, 'green')\ntap($save_set_colors)\ntap($more_options_note)"}
{"task": "Delete the current note, then create a new checklist and add three items: 'Buy groceries', 'Call mom', 'Schedule a dentist appointment'.", "solution": "tap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Checklist')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call mom')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Schedule a dentist appointment')\ntap($add_checklist_item_ok)"}
{"task": "Open the settings of the app and customize the colors to blue and green then tap 'Save' button to save the customized app colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_text_color)\ntap($set_text_color_color_picker('Blue'))\ntap($set_background_color)\ntap($set_background_color_color_picker('Green'))\ntap($save_set_colors)"}
{"task": "Open more options for the current note and then open the settings of the app to set the theme color to dark mode", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Customize the colors of the app to red and white and then tap 'Save' button to save the customized app colors and set the theme color of the app to light mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_text_color)\ntap($set_text_color_color_picker('Red'))\ntap($set_background_color)\ntap($set_background_color_color_picker('White'))\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Open more options for the current checklist and then open the settings of the app to set the theme color to dark mode", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Customize the colors of the app to purple and yellow and then open more options for the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_text_color)\ntap($set_text_color_color_picker('Purple'))\ntap($set_background_color)\ntap($set_background_color_color_picker('Yellow'))\ntap($save_set_colors)\ntap($more_options_note)"}
{"task": "Read the current item title, switch to the previous note, read that item's title, and then switch back to the original note", "solution": "current_title = get_text($item_title)\ntap($switch_to_prev_item)\nprev_title = get_text($item_title)\ntap($switch_to_next_item)\n"}
{"task": "Switch to the previous note twice and then read the current item title", "solution": "tap($switch_to_prev_item)\ntap($switch_to_prev_item)\ncurrent_title = get_text($item_title)\n"}
{"task": "Read the current item title, switch to the previous note twice, and read the new current item title", "solution": "current_title = get_text($item_title)\ntap($switch_to_prev_item)\ntap($switch_to_prev_item)\nnew_current_title = get_text($item_title)\n"}
{"task": "Switch to the previous note, read the current item title, switch to the previous note again, and read the new current item title", "solution": "tap($switch_to_prev_item)\ncurrent_title = get_text($item_title)\ntap($switch_to_prev_item)\nnew_current_title = get_text($item_title)\n"}
{"task": "Open more options for the current note, go to settings from the note options, customize the app colors, set the background color to blue, set the text color to white.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text('blue')\nback()\ntap($set_text_color)\nset_text('white')\nback()\nsave_set_colors()\n"}
{"task": "List all checklist items and verify the state of the first item", "solution": "items = $checklist_item_list\nall_items = [get_text(item) for item in items]\nfirst_item_state = get_attributes($checklist_item_list[0])[\"checked\"]\nprint(all_items, first_item_state)"}
{"task": "Scroll through the entire list of checklist items and check the content of the second checklist item", "solution": "items = $checklist_item_list\nscroll(items, 'down')\nsecond_item_content = get_text($checklist_item_list[1])\nprint(second_item_content)"}
{"task": "Mark the third checklist item as completed and then find and uncheck the fourth checklist item", "solution": "tap($checklist_item_list[2])\nattributes = get_attributes($checklist_item_list[3])\nif attributes['checked']:\n    tap($checklist_item_list[3])"}
{"task": "Switch back to the previous item and display its title; then list all checklist items", "solution": "tap($switch_to_prev_item)\nprevious_item_title = get_text($item_title)\nitems = $checklist_item_list\nall_items = [get_text(item) for item in items]\nprint(previous_item_title, all_items)"}
{"task": "Show the current item title and then verify the state of the first checklist item", "solution": "current_title = get_text($item_title)\nfirst_item_state = get_attributes($checklist_item_list[0])[\"checked\"]\nprint(current_title, first_item_state)"}
{"task": "Remove completed items from the current checklist, then delete the current checklist.", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Delete the current note, create a new note titled 'Meeting Notes', and add bullet points: 'Discuss project timeline', 'Assign new tasks', 'Review budget'.", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '\u2022 Discuss project timeline\\n\u2022 Assign new tasks\\n\u2022 Review budget')\ntap($save_note)"}
{"task": "Remove completed items from the current checklist, then create a new note titled 'Workout Plan' and add bullet points: 'Monday: Cardio and Abs', 'Wednesday: Legs and Back', 'Friday: Shoulders and Arms'.", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($create_note)\nset_text($add_note_title, 'Workout Plan')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '\u2022 Monday: Cardio and Abs\\n\u2022 Wednesday: Legs and Back\\n\u2022 Friday: Shoulders and Arms')\ntap($save_note)"}
{"task": "Create a new note titled 'Trip Itinerary', add bullet points 'Book flights', 'Reserve hotel', 'Pack luggage', then delete the current note.", "solution": "tap($create_note)\nset_text($add_note_title, 'Trip Itinerary')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '\u2022 Book flights\\n\u2022 Reserve hotel\\n\u2022 Pack luggage')\ntap($save_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Delete the current checklist, create a note titled 'Books to Read' and add bullet points: 'The Great Gatsby', '1984', 'To Kill a Mockingbird'.", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Books to Read')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '\u2022 The Great Gatsby\\n\u2022 1984\\n\u2022 To Kill a Mockingbird')\ntap($save_note)"}
{"task": "Open the settings of the app and set the theme color to light mode then customize the colors of the app to orange and blue and tap 'Save' button to save the customized app colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($close_set_colors)\ntap($set_text_color)\ntap($theme_color_custom)\ntap($font_size_100%)\ntap($set_background_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Open more options for the current note and customize the colors of the app to green and white and then tap 'Save' button to save the customized app colors", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_custom)\ntap($font_size_100%)\ntap($set_background_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Customize the colors of the app to black and gold and then open more options for the current checklist and open the settings of the app to set the theme color to dark mode.", "solution": "tap($set_colors)\ntap($set_text_color)\ntap($theme_color_custom)\ntap($font_size_100%)\ntap($set_background_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($more_options_checklist)\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Open more options for the current note and set the font size to 60%", "solution": "tap($more_options_note)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Open more options for the current checklist and set the font size to 75%", "solution": "tap($more_options_checklist)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Check the content of the second checklist item, then move to the next item and show its title", "solution": "content = get_text($checklist_item_list[1])\ntap($switch_to_next_item)\ntitle = get_text($item_title)\nprint(content, title)"}
{"task": "List all checklist items, scroll through the entire list of checklist items, and report any unchecked items", "solution": "unchecked_items = []\nindex = 0\nwhile True:\n    items = $checklist_item_list\n    for item in items:\n        if not get_attributes(item)['checked']:\n            unchecked_items.append(get_text(item))\n    if len(items) < len($checklist_item_list):\n        break\n    scroll($checklist_item_list, 'down')\nprint(unchecked_items)"}
{"task": "Open the note titled 'Grocery List', check the checklist item 'Buy Milk', and then delete 'Buy Milk'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Grocery List')\ntap(notes[0])\nitems = $checklist_item_list.match('Buy Milk')\ntap(items[0])\nlong_tap(items[0])\ntap($delete_selected_checklist_item)"}
{"task": "Navigate to the note titled 'Workout Plan', add a new item 'Run 5 miles', then check the item 'Run 5 miles'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Workout Plan')\ntap(notes[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Run 5 miles')\ntap($add_checklist_item_ok)\nitems = $checklist_item_list.match('Run 5 miles')\ntap(items[0])"}
{"task": "Open the note titled 'Meeting Agenda', add a new item 'Discuss Quarterly Results', and then complete the checklist item 'Respond to Emails'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Meeting Agenda')\ntap(notes[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Discuss Quarterly Results')\ntap($add_checklist_item_ok)\nitems = $checklist_item_list.match('Respond to Emails')\ntap(items[0])"}
{"task": "Open more options for the current checklist, go to settings from the checklist options, customize the app colors, set the background color to light grey, set the text color to black.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'light grey')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'black')\ntap($save_set_colors)"}
{"task": "Open more options for the current note, go to settings from the note options, customize the app colors, set the background color to dark mode, set the text color to light yellow.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'dark mode')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'light yellow')\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist, go to settings from the checklist options, customize the app colors, set the background color to pastel green, set the text color to dark brown.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'pastel green')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'dark brown')\ntap($save_set_colors)"}
{"task": "Open more options for the current note, go to settings from the note options, customize the app colors, set the background color to yellow, set the text color to dark blue.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'yellow')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'dark blue')\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist, go to settings from the checklist options, customize the app colors, set the background color to navy blue, set the text color to light pink.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'navy blue')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'light pink')\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist, open the settings, and then customize the colors of the app and widget in the Notes APP", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($save_set_colors)\ntap($close_set_colors)\ntap($set_widget_colors)\nback()"}
{"task": "Open the settings, customize the colors of the app, and then open more options for the current note in the Notes APP", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($save_set_colors)\ntap($close_set_colors)\nback()\ntap($more_options_note)"}
{"task": "Open more options for the current note, then open more options for the current checklist, and finally customize the widget colors in the Notes APP", "solution": "tap($more_options_note)\nback()\ntap($more_options_checklist)\ntap($set_widget_colors)"}
{"task": "Open more options for the current note and rename the current note to 'Project Plan', then confirm the new name", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)"}
{"task": "Open more options for the current checklist and rename the current checklist to 'Weekend Errands', and then confirm the new name", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Weekend Errands')\ntap($rename_ok)"}
{"task": "Customize the colors of the app, then navigate to settings from the current checklist and set the theme color to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\n"}
{"task": "Open the settings of the app and set the font size of the app to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\n"}
{"task": "Open the more options for the current note, then open the settings of the app, and display the current font size of the app", "solution": "tap($more_options_note)\ntap($settings)\nt.get_text($current_font_size)]"}
{"task": "Set the font size of the app to 175%, then open the settings of the app and display the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($settings)\nget_text($current_font_size)\n"}
{"task": "Display the current font size of the app and then set the font size of the app to 150%", "solution": "tap($settings)\nfont_size=get_text($current_font_size)\ntap($set_font_size)\ntap($font_size_150%)\nfont_size\n"}
{"task": "Open settings in the app and set the font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"75%\"))"}
{"task": "Open more options for the current note, then open settings in the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open more options for the current checklist, then set the font size to 60%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"60%\"))"}
{"task": "Set the font size to 60%, then open settings in the app", "solution": "tap($set_font_size)\ntap($font_size_types.match(\"60%\"))\ntap($settings)"}
{"task": "Set the font size to 75%, then open more options for the current checklist", "solution": "tap($set_font_size)\ntap($font_size_types.match(\"75%\"))\ntap($more_options_checklist)"}
{"task": "Open the note titled 'Meeting Minutes' and switch to the next item in the list.", "solution": "tap($open_note)\n$open_note_title_list.match('Meeting Minutes')[0].tap()\ntap($switch_to_next_item)"}
{"task": "Create a new note with the title 'Grocery List' and immediately open the more options menu for the current checklist.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)"}
{"task": "Open the note titled 'Meeting Minutes', switch to the previous item in the list, and then open the more options menu for the current checklist.", "solution": "tap($open_note)\n$open_note_title_list.match('Meeting Minutes')[0].tap()\ntap($switch_to_prev_item)\ntap($more_options_checklist)"}
{"task": "Create a new note with the title 'Project Plan', then switch to the next item in the list.", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($add_note_ok)\ntap($switch_to_next_item)"}
{"task": "Switch to the next item in the list and then switch to the previous one.", "solution": "tap($switch_to_next_item)\ntap($switch_to_prev_item)"}
{"task": "Open more options for the current note, rename the current note to 'Weekly Report', and confirm the new name, then open more options for the current checklist and rename the current checklist to 'Work Tasks' and confirm the new name", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Weekly Report')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Work Tasks')\ntap($rename_ok)"}
{"task": "Rename the current note to 'Shopping List', confirm the new name, then open more options for the current checklist and rename the current checklist to 'Supermarket Items' and confirm the new name", "solution": "tap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Supermarket Items')\ntap($rename_ok)"}
{"task": "Open more options for the current note, rename the current note to 'Daily Log', confirm the new name, and then rename the current checklist to 'To-Do Tasks' and confirm the new name", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Daily Log')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'To-Do Tasks')\ntap($rename_ok)"}
{"task": "Rename the current note to 'Birthday Plans', confirm the new name, then open more options for the current checklist and rename the current checklist to 'Guests List' and confirm the new name", "solution": "tap($rename_note)\nset_text($rename_input, 'Birthday Plans')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Guests List')\ntap($rename_ok)"}
{"task": "Open more options for the current note, rename the current note to 'Workouts', confirm the new name, then open more options for the current checklist, rename the current checklist to 'Exercises', and confirm the new name", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Workouts')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Exercises')\ntap($rename_ok)"}
{"task": "Remove completed items from the current checklist, then delete the current note and create a checklist titled 'Shopping List' with items: 'Milk', 'Eggs', 'Bread'.", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Eggs')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)"}
{"task": "Create a note titled 'Weekly Goals', add bullet points 'Finish work report', 'Exercise three times', 'Read one book', then remove completed items from the current checklist.", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekly Goals')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '\u2022 Finish work report\\n\u2022 Exercise three times\\n\u2022 Read one book')\ntap($save_note)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Create a shortcut for my grocery list note and lock the meeting notes", "solution": "tap($open_note)\n$open_note_titles = $open_note_title_list\ngrocery_note = $open_note_titles.match('Grocery List')[0]\ntap(grocery_note)\ntap($more_options_note)\ntap($create_shortcut)\ntap($open_note)\nmeeting_note = $open_note_titles.match('Meeting Notes')[0]\ntap(meeting_note)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Export the project checklist as a file and then send the file to john.doe@example.com", "solution": "tap($open_note)\n$open_note_titles = $open_note_title_list\nproject_checklist = $open_note_titles.match('Project Checklist')[0]\ntap(project_checklist)\ntap($more_options_checklist)\ntap($export_as_file)\n# Assuming the app has integrated file sharing options\nset_text($file_manager_input, 'john.doe@example.com')\ntap($send_file_button)"}
{"task": "Open the travel itinerary note and create a shortcut for my workout plan checklist", "solution": "tap($open_note)\n$open_note_titles = $open_note_title_list\nitinerary_note = $open_note_titles.match('Travel Itinerary')[0]\ntap(itinerary_note)\ntap($more_options_note)\ntap($create_shortcut)\ntap($open_note)\nworkout_plan = $open_note_titles.match('Workout Plan Checklist')[0]\ntap(workout_plan)\ntap($more_options_checklist)\ntap($create_shortcut)"}
{"task": "Open more options for the current note and the current checklist, then set the font size to 60%", "solution": "tap($more_options_note)\ntap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Set the font size of the Notes APP to 125% and then check the current font size of the Notes APP", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($current_font_size)\nget_attributes($font_size_125%)"}
{"task": "Open the more options menu of the current note and then access the Settings of the Notes APP", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Set the font size of the Notes APP to 150%, check the current font size, and then open the more options menu of the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($current_font_size)\nget_attributes($font_size_150%)\nback()\ntap($more_options_checklist)"}
{"task": "Access the Settings of the Notes APP, set the font size to 125%, and then check the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($current_font_size)\nget_attributes($font_size_125%)"}
{"task": "Set the font size of the app to 175%, open the more options for the current note, and then open the settings of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($exit_settings)\ntap($more_options_note)\ntap($settings)"}
{"task": "Open the settings of the app, set the font size to 150%, and then set it again to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($set_font_size)\ntap($font_size_175%)"}
{"task": "Display the current font size of the app, then set the font size of the app to 150%, and verify by displaying the current font size again", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_size = get_text($current_font_size)\ntap($current_font_size)\ntap($font_size_150%)\ntap($current_font_size)\nnew_size = get_text($current_font_size)\nreturn current_size, new_size"}
{"task": "Set the font size of the app to 150%, then set it to 175%, open the more options for the current note, and display the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($set_font_size)\ntap($font_size_175%)\ntap($exit_settings)\ntap($more_options_note)\ntap($settings)\ntap($current_font_size)\nreturn get_text($current_font_size)"}
{"task": "Open the note titled 'Shopping List' and add oranges to the list, then save the current changes to the note", "solution": "tap($open_note)\nopen_note_list = $open_note_title_list\nfor i in range(len(open_note_list)):\n    if get_text(open_note_list[i]) == 'Shopping List':\n        tap(open_note_list[i])\n        break\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Oranges')\ntap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Navigate to the note titled 'Grocery List', uncheck 'Buy Milk', then remove 'Buy Milk' and add 'Get Eggs'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\ntap($checklist_item_list.match('Buy Milk')[0])\nlong_tap($checklist_item_list.match('Buy Milk')[0])\ntap($delete_selected_checklist_item)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Get Eggs')\ntap($add_checklist_item_ok)\n"}
{"task": "Open the note titled 'Workout Plan', uncheck 'Walk the Dog', add 'Yoga session' and then check 'Yoga session'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Workout Plan')[0])\ntap($checklist_item_list.match('Walk the Dog')[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Yoga session')\ntap($add_checklist_item_ok)\ntap($checklist_item_list.match('Yoga session')[0])\n"}
{"task": "Check the checklist item 'Finish Report' in 'Meeting Agenda' note, navigate to 'Grocery List' and delete 'Buy Groceries'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Agenda')[0])\ntap($checklist_item_list.match('Finish Report')[0])\ntap($switch_item)\ntap($open_note_title_list.match('Grocery List')[0])\nlong_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($delete_selected_checklist_item)\n"}
{"task": "Open the note titled 'Workout Plan', remove 'Walk the Dog', add 'Do Push-ups', and then navigate to 'Meeting Agenda'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Workout Plan')[0])\nlong_tap($checklist_item_list.match('Walk the Dog')[0])\ntap($delete_selected_checklist_item)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Do Push-ups')\ntap($add_checklist_item_ok)\ntap($switch_item)\ntap($open_note_title_list.match('Meeting Agenda')[0])\n"}
{"task": "Navigate to the note titled 'Grocery List', check 'Buy Groceries', add 'Get Tomatoes', and then open the note titled 'Workout Plan'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\ntap($checklist_item_list.match('Buy Groceries')[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Get Tomatoes')\ntap($add_checklist_item_ok)\ntap($switch_item)\ntap($open_note_title_list.match('Workout Plan')[0])\n"}
{"task": "Open the note titled 'Grocery List', switch to the next item in the list, and open the more options menu for the current checklist.", "solution": "tap($open_note)\n$open_note_title_list.match('Grocery List')[0].tap()\ntap($switch_to_next_item)\ntap($more_options_checklist)"}
{"task": "Create a new note with the title 'Holiday Itinerary', switch to the next item in the list, and then open the more options menu.", "solution": "tap($create_note)\nset_text($add_note_title, 'Holiday Itinerary')\ntap($text_note_type)\ntap($add_note_ok)\ntap($switch_to_next_item)\ntap($more_options_note)"}
{"task": "Open the note titled 'Meeting Minutes', switch to the next item in the list, then switch to the previous item, and open the more options menu for the current checklist.", "solution": "tap($open_note)\n$open_note_title_list.match('Meeting Minutes')[0].tap()\ntap($switch_to_next_item)\ntap($switch_to_prev_item)\ntap($more_options_checklist)"}
{"task": "Create a new note with the title 'Shopping List' and add a checklist item 'Buy Milk'", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy Milk')\ntap($add_checklist_item_ok)"}
{"task": "Create a new text note titled 'Meeting Notes' and add 'Discuss project timeline' as the first line", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Discuss project timeline')"}
{"task": "Open the more options in the current checklist, sort the items by the assigned person, and then remove the done items", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match('Assigned person')[0])\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the items in the current checklist, open the more options to print the checklist, and then remove the done items.", "solution": "tap($sort_checklist_items)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($print_note)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Lock the current note and then delete the current note if it contains the word 'confidential'", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\nif 'confidential' in get_text($note_content):\n    tap($more_options_note)\n    tap($delete_note)\n    tap($delete_note_ok)\n"}
{"task": "Lock the current checklist and create a new note with the contents of the checklist", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\ntap($open_note)\ntap($create_note)\nset_text($add_note_title, 'New note')\ntap($checklist_type)\ntap($add_note_ok)\n"}
{"task": "Delete the current note and then lock the current checklist if the checklist has more than 5 items", "solution": "if len($checklist_item_list) > 5:\n    tap($more_options_checklist)\n    tap($lock_note)\n    tap($lock_note_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\n"}
{"task": "Open more options for the current note, rename the current note to 'Project Plan', confirm the new name 'Project Plan' for the current note, lock the current note, and confirm locking the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open more options for the current checklist, rename the current checklist to 'Grocery List', confirm the new name 'Grocery List' for the current checklist, lock the current checklist, and confirm locking the current checklist", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Daily Tasks', confirm the new name 'Daily Tasks' for the current note, show the information of the app, and then lock the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Daily Tasks')\ntap($rename_ok)\ntap($about)\nback()\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open more options for the current checklist, lock the current checklist, and confirm locking the current checklist", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current checklist to 'Work Checklist', confirm the new name 'Work Checklist' for the current checklist, then lock the current checklist, confirm locking the current checklist", "solution": "tap($rename_note)\nset_text($rename_input, 'Work Checklist')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Travel Itinerary', confirm the new name, then open more options for the current checklist and rename the current checklist to 'Packing List' and confirm the new name", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Travel Itinerary')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Packing List')\ntap($rename_ok)"}
{"task": "Tap the 'Open Note' button and scroll through the list of note titles to open the note titled 'Shopping List'. Add 'Apples' to the list, save the changes and close the note.", "solution": "tap($open_note)\nscroll($open_note_title_list, 'down')\ntap($open_note_title_list.match('Shopping List')[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Apples')\ntap($add_checklist_item_ok)\ntap($save_note)\nback()"}
{"task": "Open the note titled 'Project Plan' and add a new task 'Design Phase Completed', then mark it as completed.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Plan')[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Design Phase Completed')\ntap($add_checklist_item_ok)\ntap($checklist_item_list.match('Design Phase Completed')[0])\ntap($save_note)\nback()"}
{"task": "Scroll through the notes and long tap to edit the note titled 'Meeting Notes'. Add the meeting agenda 'Discuss Q4 strategy, Budget Review'. Save and close the note.", "solution": "scroll($switch_item, 'down')\nlong_tap($open_note_title_list.match('Meeting Notes')[0])\nset_text($note_content, 'Discuss Q4 strategy, Budget Review')\ntap($save_note)\nback()"}
{"task": "Open the 'Daily Journal' and add an entry 'Today I went for a run and read a chapter of my favorite book.'. Save the changes and close the note.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Daily Journal')[0])\nset_text($note_content, 'Today I went for a run and read a chapter of my favorite book.')\ntap($save_note)\nback()"}
{"task": "Lock the holiday plans checklist and export the birthday party notes as a file", "solution": "tap($open_note)\ntap($open_note_title_list.match('holiday plans checklist')[0])\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\nback()\ntap($open_note_title_list.match('birthday party notes')[0])\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Create a shortcut for my shopping list checklist, open the travel itinerary note and lock the meeting notes", "solution": "tap($open_note)\ntap($open_note_title_list.match('shopping list checklist')[0])\ntap($more_options_checklist)\ntap($create_shortcut)\nback()\ntap($open_note_title_list.match('travel itinerary note')[0])\nback()\ntap($open_note_title_list.match('meeting notes')[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\nback()"}
{"task": "Export the project checklist as a file and upload it to my Dropbox folder named 'Project Files'", "solution": "tap($open_note)\ntap($open_note_title_list.match('project checklist')[0])\ntap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Lock the meeting notes and then open the shopping list checklist", "solution": "tap($open_note)\ntap($open_note_title_list.match('meeting notes')[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\nback()\ntap($open_note_title_list.match('shopping list checklist')[0])"}
{"task": "Create a shortcut for my grocery list note, lock the holiday plans checklist and export the birthday party notes as a file", "solution": "tap($open_note)\ntap($open_note_title_list.match('grocery list note')[0])\ntap($more_options_note)\ntap($create_shortcut)\nback()\ntap($open_note_title_list.match('holiday plans checklist')[0])\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\nback()\ntap($open_note_title_list.match('birthday party notes')[0])\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Open the settings of the app and customize the colors of the app to 'blue'", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\n"}
{"task": "Open the more options in the current note and then open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)\n"}
{"task": "Open the settings of the app, scroll down in the settings page, and customize the colors of the app to 'green'", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\n"}
{"task": "Open more options in the current checklist and then scroll down in the settings page", "solution": "tap($more_options_checklist)\nscroll($scroll_settings_page, 'down')\n"}
{"task": "Open more options in the current note, then scroll up in the settings page, and finally customize the colors of the app to 'red'", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'up')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\n"}
{"task": "Rename the current note to 'Important Notes', confirm the new name 'Important Notes' for the current note, then show the information of the app.", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Important Notes')\ntap($rename_ok)\ntap($more_options_note)\ntap($about)"}
{"task": "Tap 'more options' button in the current checklist, then sort items by title, and finally remove done items", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Tap 'more options' button in the current checklist, then sort items by date created, and remove done items", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Remove done items from the current checklist, then sort items by custom order and tap 'more options' button", "solution": "tap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Sort items of the current checklist by custom order, then tap 'more options' button and remove done items", "solution": "tap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Lock the current note, then delete the current checklist if it's empty", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\nif len($checklist_item_list) == 0:\n    tap($more_options_checklist)\n    tap($delete_note)\n    tap($delete_note_ok)"}
{"task": "Delete the current checklist, then lock the current note if the note was last modified within the last 24 hours", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\nnote_content_attr = get_attributes($note_content)\nif 'last_modified' in note_content_attr and note_content_attr['last_modified'] < 24:\n    tap($more_options_note)\n    tap($lock_note)\n    tap($lock_note_ok)"}
{"task": "Lock the current checklist if the checklist title contains the word 'urgent' and then delete the current note", "solution": "note_title = get_text($item_title)\nif 'urgent' in note_title.lower():\n    tap($more_options_checklist)\n    tap($lock_note)\n    tap($lock_note_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Delete the current note and current checklist if both contain the word 'meeting'", "solution": "note_title = get_text($item_title)\nchecklist_title = get_text($item_title)\nif 'meeting' in note_title.lower() and 'meeting' in checklist_title.lower():\n    tap($more_options_note)\n    tap($delete_note)\n    tap($delete_note_ok)\n    tap($more_options_checklist)\n    tap($delete_note)\n    tap($delete_note_ok)"}
{"task": "Lock the current note and delete the current checklist if the note content is longer than 500 words.", "solution": "note_content = get_text($note_content)\nif len(note_content.split()) > 500:\n    tap($more_options_note)\n    tap($lock_note)\n    tap($lock_note_ok)\nif len($checklist_item_list) == 0:\n    tap($more_options_checklist)\n    tap($delete_note)\n    tap($delete_note_ok)"}
{"task": "Open the note titled 'To-Do List' and check off the completed tasks 'Submit report' and 'Call Lisa'. Add a new task 'Buy groceries'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('To-Do List')[0])\nlong_tap($checklist_item_list.match('Submit report')[0])\ntap($checklist_item)\nlong_tap($checklist_item_list.match('Call Lisa')[0])\ntap($checklist_item)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)\n"}
{"task": "Open the note titled 'Vacation Plans' to edit it and add a comment 'Booking confirmed at Hilton Hotel for the dates 10th to 15th of August'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Vacation Plans')[0])\ntap($note_content)\nset_text($note_content, get_text($note_content) + '\\nBooking confirmed at Hilton Hotel for the dates 10th to 15th of August')\n"}
{"task": "Open the note titled 'Workout Schedule' and update the plan with 'Friday: Yoga and Pilates'. Save the changes and close the note.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Workout Schedule')[0])\ntap($note_content)\nset_text($note_content, get_text($note_content) + '\\nFriday: Yoga and Pilates')\ntap($save_note)\nback()\n"}
{"task": "Open the note titled 'Books to Read' add a new book title 'Sapiens by Yuval Noah Harari' to the list.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Books to Read')[0])\ntap($note_content)\nset_text($note_content, get_text($note_content) + '\\nSapiens by Yuval Noah Harari')\n"}
{"task": "Open the more options for the current note and then set the theme color of the app to blue", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($custom_theme_color, 'Blue')\ntap($save_set_colors)"}
{"task": "Access the note 'To-Do List' and add a task to call mom, then review and save the note titled 'Workout Schedule'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_titles = [get_text(title) for title in open_note_titles]\ntodo_index = note_titles.index('To-Do List')\ntap(open_note_titles[todo_index])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call mom')\ntap($add_checklist_item_ok)\ntap($save_note)\n\nworkout_index = note_titles.index('Workout Schedule')\ntap(open_note_titles[workout_index])\n# Review the note if necessary (assuming this can be done using get_text, etc.)\ntap($save_note)"}
{"task": "Locate and open the note titled 'Holiday Plans', then retrieve the note 'Project Tasks' and change the deadline of task 3", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_titles = [get_text(title) for title in open_note_titles]\nholiday_plans_index = note_titles.index('Holiday Plans')\ntap(open_note_titles[holiday_plans_index])\n\nproject_tasks_index = note_titles.index('Project Tasks')\ntap(open_note_titles[project_tasks_index])\n# Assume the note is a checklist and task 3 can be accessed and edited directly\nlong_tap($checklist_item_list[2])\nset_text($rename_input, 'Task 3 - New Deadline')\ntap($rename_ok)\ntap($save_note)"}
{"task": "Open the note 'Dream Journal' and update today's entry, then open the note 'Study Plan' and summarize the contents", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_titles = [get_text(title) for title in open_note_titles]\ndream_journal_index = note_titles.index('Dream Journal')\ntap(open_note_titles[dream_journal_index])\nset_text($note_content, 'Updated entry for today...')\ntap($save_note)\n\nstudy_plan_index = note_titles.index('Study Plan')\ntap(open_note_titles[study_plan_index])\n# Summarize the contents\ncontent = get_text($note_content)\nsummary = 'Summary: ' + content[:100]  # assuming summarization is the first 100 characters\ntap($save_note)"}
{"task": "Open the note 'Meeting Agenda' and review the details, then open the note 'Ideas' and draft a new section", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_titles = [get_text(title) for title in open_note_titles]\nmeeting_agenda_index = note_titles.index('Meeting Agenda')\ntap(open_note_titles[meeting_agenda_index])\n# Review the details\nmeeting_agenda_content = get_text($note_content)\n\nideas_index = note_titles.index('Ideas')\ntap(open_note_titles[ideas_index])\nset_text($note_content, 'Drafting a new section...')\ntap($save_note)"}
{"task": "Access the note 'To-Do List' and add a task to call mom, then open the note titled 'Meeting Agenda' and save the current changes to the note", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_titles = [get_text(title) for title in open_note_titles]\ntodo_index = note_titles.index('To-Do List')\ntap(open_note_titles[todo_index])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call mom')\ntap($add_checklist_item_ok)\ntap($save_note)\n\nmeeting_agenda_index = note_titles.index('Meeting Agenda')\ntap(open_note_titles[meeting_agenda_index])\ntap($save_note)"}
{"task": "Open the note titled 'Grocery List' and save it after making changes, then search for the term 'birthday' within the current note", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_titles = open_note_titles.match('Grocery List')\ntap(note_titles[0])\nset_text($note_content, get_text($note_content) + 'Changes made')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'birthday')"}
{"task": "Open the note titled 'Meeting Minutes', search for the phrase 'next meeting', and then access more options to rename the note to 'Team Meeting Minutes'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_titles = open_note_titles.match('Meeting Minutes')\ntap(note_titles[0])\ntap($search_within_note)\nset_text($search_text, 'next meeting')\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Team Meeting Minutes')\ntap($rename_ok)"}
{"task": "Open the note titled 'Project Plan', add 'Discuss next steps with design team' to the content, save it, and then search for the word 'milestone'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_titles = open_note_titles.match('Project Plan')\ntap(note_titles[0])\nset_text($note_content, get_text($note_content) + 'Discuss next steps with design team')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'milestone')"}
{"task": "Search for the term 'birthday' within the current note, then open the note titled 'Travel Itinerary' and access more options to share it via email", "solution": "tap($search_within_note)\nset_text($search_text, 'birthday')\ntap($open_note)\nopen_note_titles = $open_note_title_list\nnote_titles = open_note_titles.match('Travel Itinerary')\ntap(note_titles[0])\ntap($more_options_note)\ntap($more_option_note_buttons.match({'text': 'share'})[0])"}
{"task": "Customize the widget colors in the Notes app and then set the font size to 'Large'", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_widget_colors)\ntap($save_set_colors)\ntap($exit_settings)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('Large')[0])"}
{"task": "Locate the previous instance of the term 'deadline' in the current note, search for the word 'meeting' within the current note, and then find the next occurrence of the word 'schedule' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\nset_text($search_text, 'meeting')\ntap($next_matched_text)\nset_text($search_text, 'schedule')\ntap($next_matched_text)"}
{"task": "Search for the word 'meeting' within the current note and then locate the previous instance of the term 'deadline' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matched_text)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)"}
{"task": "Find the next occurrence of the word 'schedule' in the current note, locate the previous instance of the term 'deadline' in the current note, and then search for the word 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'schedule')\ntap($next_matched_text)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\nset_text($search_text, 'meeting')\ntap($next_matched_text)"}
{"task": "Locate the previous instance of the term 'deadline' in the current note, find the next occurrence of the word 'schedule' in the current note, and then search for the word 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\nset_text($search_text, 'schedule')\ntap($next_matched_text)\nset_text($search_text, 'meeting')\ntap($next_matched_text)"}
{"task": "Search for the word 'meeting' within the current note, find the next occurrence of the word 'schedule' in the current note, and then locate the previous instance of the term 'deadline' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matched_text)\nset_text($search_text, 'schedule')\ntap($next_matched_text)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)"}
{"task": "Open the settings of the app, scroll down in the settings page, and then open more options in the current note", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($more_options_note)"}
{"task": "Open more options in the current checklist, then open the settings of the app, and scroll down in the settings page", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Open the settings of the app, scroll up in the settings page, then customize the colors of the app to 'purple'", "solution": "tap($settings)\nscroll($scroll_settings_page, 'up')\ntap($set_colors)\n# Assuming there is a method to set the color to 'purple', here we illustrate a generic process\ntap($set_theme_color.select('purple'))\ntap($save_set_colors)"}
{"task": "Open the settings for the current note and then show the information about the app from the current note", "solution": "tap($settings)\ntap($about)"}
{"task": "Open the settings for the current checklist and then show the information about the app from the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($about)"}
{"task": "Change the theme color to 'dark' for the current note", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\n"}
{"task": "Set the theme color to 'light' using the settings of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\ntap($exit_settings)\n"}
{"task": "Customize and choose the 'dark_red' theme color for the current note", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\n"}
{"task": "Switch the theme to 'black_white' from the settings for the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\ntap($exit_settings)\n"}
{"task": "Enable 'Auto light / dark' theme color for the current note", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\n"}
{"task": "Open more options for the current note, go to settings, and then enable the word count display", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_word_count)\n"}
{"task": "Open more options for the current checklist, go to settings, and then set the font size of the Notes app to 'Large'", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\n"}
{"task": "Customize the widget colors in the Notes app and then enable the word count display", "solution": "tap($settings)\ntap($set_widget_colors)\nback()\ntap($set_show_word_count)\n"}
{"task": "Show the current font size of the Notes app and then set the font size to 'Large'", "solution": "tap($settings)\ntap($current_font_size)\nselected_font_size = get_attributes($font_size_types.match({'selected': true}))[\"selected\"]\ntap($font_size_150%)\n"}
{"task": "Open more options for the current note and then customize the widget colors in the Notes app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_widget_colors)\n"}
{"task": "Tap 'more options' button, then sort items by date created and by title successively, and finally remove done items", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Sort items of the current checklist by title, then by custom order, and then remove done items", "solution": "tap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Tap 'more options' button, sort items by custom order, then by date created, and finally remove done items", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Remove done items from the current checklist, then sort items by title and date created, and finally tap 'more options' button", "solution": "tap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Search within the current note for the word 'deadline' and then scroll to the previous occurrence of the word 'client'", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\nset_text($search_text, 'client')\ntap($prev_matched_text)"}
{"task": "Open a new note, set the type to checklist, and add items 'Call plumber', 'Schedule dentist appointment'", "solution": "tap($create_note)\nset_text($add_note_title, 'New Note')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call plumber')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Schedule dentist appointment')\ntap($add_checklist_item_ok)"}
{"task": "Add a new note named 'Workout Plan' and write 'Monday: Cardio, Tuesday: Strength Training'", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Plan')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Monday: Cardio, Tuesday: Strength Training')\ntap($save_note)"}
{"task": "Open a note titled 'Grocery List' and add 'Eggs', 'Bread', 'Butter' to the checklist", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Eggs')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Butter')\ntap($add_checklist_item_ok)"}
{"task": "Create a new checklist note titled 'Travel Packing List' and include 'Passport', 'Clothing', 'Toiletries'", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Packing List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Passport')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Clothing')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Toiletries')\ntap($add_checklist_item_ok)"}
{"task": "Create a new text note titled 'Project Ideas' and add 'Build a mobile app', 'Start a blog'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Build a mobile app, Start a blog')\ntap($save_note)"}
{"task": "Save the current changes to the note titled 'Dream Journal', then open the note titled 'Shopping List' and add oranges to the list", "solution": "tap($save_note)\ntap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Shopping List':\n        tap(note_titles[i])\n        break\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'oranges')\ntap($add_checklist_item_ok)"}
{"task": "Review the note titled 'Workout Schedule', then locate and open the note titled 'Holiday Plans' and update the itinerary", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Workout Schedule':\n        tap(note_titles[i])\n        break\ntap($open_note)\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Holiday Plans':\n        tap(note_titles[i])\n        break\n# Assume the user knows how to update the itinerary here manually"}
{"task": "Open the more options for the current note and set the theme color to custom", "solution": "tap($more_options_note)\ntap($set_theme_color)\ntheme_color_options = $theme_color_types\nfor i in range(len(theme_color_options)):\n    if get_text(theme_color_options[i]) == 'Custom':\n        tap(theme_color_options[i])\n        break\nback()"}
{"task": "Open the settings menu of the app and adjust the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\nfont_size_options = $font_size_types\nfor i in range(len(font_size_options)):\n    if get_text(font_size_options[i]) == '200%':\n        tap(font_size_options[i])\n        break\nback()"}
{"task": "Customize the colors of the app and show the current font size", "solution": "tap($settings)\ntap($set_colors)\nset_colors()\ncurrent_font_size_button = $current_font_size\ntap(current_font_size_button)\ncurrent_font_size = get_text($current_font_size)\nback()"}
{"task": "Find the next occurrence of the word 'schedule' in the current note and locate the previous instance of the term 'deadline' in the current note, then search for the word 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'schedule')\ntap($next_matchhed_text)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\nset_text($search_text, 'meeting')"}
{"task": "Open settings from the current note and change the font size to 90%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)"}
{"task": "Show the current font size in the app settings and then change the font size to 100%", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\nselected_font_size = [key for key, value in get_attributes($font_size_types).items() if value][0]\nprint('Current Font Size:', selected_font_size)\ntap($font_size_100%)"}
{"task": "Open settings from the current checklist and change the font size to 90%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)"}
{"task": "Open more options in the current note, navigate to settings, and show the current font size in the app settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\nselected_font_size = [key for key, value in get_attributes($font_size_types).items() if value][0]\nprint('Current Font Size:', selected_font_size)"}
{"task": "Show the information about the app from the current note and then switch to show the information about the app from the current checklist", "solution": "tap($more_options_note)\ntap($about)\nback()\ntap($more_options_checklist)\ntap($about)"}
{"task": "First, open the settings for the current note, then open the settings for the current checklist, and finally show the information about the app from the current checklist", "solution": "tap($more_options_note)\ntap($settings)\nback()\ntap($more_options_checklist)\ntap($settings)\nback()\ntap($about)"}
{"task": "Show the information about the app from the current checklist and then open the settings for the current note", "solution": "tap($more_options_checklist)\ntap($about)\nback()\ntap($more_options_note)\ntap($settings)"}
{"task": "Open the settings for the current note, then switch to the current checklist and open the settings for the current checklist", "solution": "tap($more_options_note)\ntap($settings)\nback()\ntap($switch_to_next_item)\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Check the settings for the current checklist and quickly check the settings for the current note afterward", "solution": "tap($more_options_checklist)\ntap($settings)\nback()\ntap($more_options_note)\ntap($settings)"}
{"task": "Open the app settings, customize the app colors to green and then change the theme to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\n"}
{"task": "Open the more options for the current checklist and then change the theme to light mode", "solution": "tap($more_options_checklist)\nsroll($scroll_settings_page, \"down\")\ntap($set_theme_color)\ntap($theme_color_light)\n"}
{"task": "Customize the app colors to yellow, set the theme color to purple, and then open the more options for the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\ntap($theme_color_dark)\ntap($save_set_colors)\n"}
{"task": "Open the app settings, change the theme to dark mode and then customize the app colors to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\n"}
{"task": "Change the theme to light mode, open the more options for the current note, and then set the theme color of the app to orange", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($more_options_note)\ntap($set_theme_color)\ntap($theme_color_orange)\n"}
{"task": "Open more options for the current checklist and then show the current font size of the Notes app", "solution": "tap($more_options_checklist)\nfont_size = get_text($current_font_size)\nprint(font_size)"}
{"task": "Customize the widget colors in the Notes app, then open settings from the more options of the current note, and finally enable the word count display", "solution": "tap($settings)\ntap($set_widget_colors)\nback()\ntap($more_options_note)\ntap($settings)\ntap($set_show_word_count)"}
{"task": "Enable clickable links and emails in notes and then enable Incognito mode for keyboards in notes.", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Disable the use of monospaced font in notes and then disable line wrap in notes.", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_enable_line_wrap)"}
{"task": "Enable line wrap in notes, open more options in the current note, and then enable the use of monospaced font in notes.", "solution": "tap($settings)\ntap($set_enable_line_wrap)\nback()\ntap($more_options_note)\ntap($settings)\ntap($set_use_monospaced_font)"}
{"task": "Change to 'white' theme color from the settings of the current checklist", "solution": "# Change to 'white' theme color from the settings of the current checklist\n\ntap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Customize and select 'custom' theme color for the current note", "solution": "# Customize and select 'custom' theme color for the current note\n\ntap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Switch the current checklist's theme to 'dark' from the 'more options' menu.", "solution": "# Switch the current checklist's theme to 'dark' from the 'more options' menu.\n\ntap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Print the current note about grocery list and print the current note about upcoming birthdays", "solution": "# Print the current note about grocery list and print the current note about upcoming birthdays\n\n# Print Grocery List note\ntap($open_note)\n$open_note_title_list.match(\"Grocery List\")[0].tap()\ntap($more_options_note)\ntap($print_note)\n\n# Print Upcoming Birthdays note\ntap($open_note)\n$open_note_title_list.match(\"Upcoming Birthdays\")[0].tap()\ntap($more_options_note)\ntap($print_note)"}
{"task": "Delete the current note titled 'Meeting Minutes' and then print the current checklist for office supplies", "solution": "# Delete the current note titled 'Meeting Minutes' and then print the current checklist for office supplies\n\n# Delete Meeting Minutes note\ntap($open_note)\n$open_note_title_list.match(\"Meeting Minutes\")[0].tap()\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\n\n# Print Office Supplies checklist\ntap($open_note)\n$open_note_title_list.match(\"Office Supplies\")[0].tap()\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Replace the content of the note with 'Project plan: finalize budget, set timeline, assign tasks' and then search for the text 'action items'", "solution": "tap($note_content)\nset_text($note_content, 'Project plan: finalize budget, set timeline, assign tasks')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'action items')"}
{"task": "Edit the content of the note to say 'Team meeting at 3pm on Wednesday', then find the next occurrence of 'budget' within the current note", "solution": "tap($note_content)\nset_text($note_content, 'Team meeting at 3pm on Wednesday')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)"}
{"task": "Update the note content to say 'Lunch with Karen at noon on Friday' and then search within the note for the word 'deadline'", "solution": "tap($note_content)\nset_text($note_content, 'Lunch with Karen at noon on Friday')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Search within the note for the text 'action items' and then find the next occurrence of 'project' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'action items')\ntap($next_matchhed_text)\nset_text($search_text, 'project')\ntap($next_matchhed_text)"}
{"task": "Edit the content of the note to say 'Submit the report by end of day Thursday', then go to the previous occurrence of the word 'schedule' in the current note", "solution": "tap($note_content)\nset_text($note_content, 'Submit the report by end of day Thursday')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'schedule')\ntap($prev_matched_text)"}
{"task": "Open the more options for the current checklist and customize the colors of the app", "solution": "tap($more_options_checklist)\ntap($set_colors)"}
{"task": "Set the theme color to custom and adjust the font size to 200%", "solution": "tap($set_theme_color)\ntap($theme_color_custom)\nback()\ntap($set_font_size)\ntap($font_size_200%)\nback()"}
{"task": "Open the settings menu of the app, set the theme color to custom, and adjust the font size to 200%", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_custom)\nback()\ntap($set_font_size)\ntap($font_size_200%)\nback()\nback()"}
{"task": "Open the more options for the current note, customize the colors of the app, and show the current font size", "solution": "tap($more_options_note)\ntap($set_colors)\nback()\ntap($set_font_size)"}
{"task": "Open the more options for the current checklist, set the theme color to custom, and adjust the font size to 200%.", "solution": "tap($more_options_checklist)\ntap($set_theme_color)\ntap($theme_color_custom)\nback()\ntap($set_font_size)\ntap($font_size_200%)\nback()"}
{"task": "Open settings from the current note, show the current font size, and then change it to 90%", "solution": "tap($more_options_note)\ntap($settings)\ncurrent_size_elements = $current_font_size\nif len(current_size_elements) > 0:\n    tap(current_size_elements[0])\nsizes = $font_size_types.match({'selected': True})\ncurrent_font_size='Unknown'\nif len(sizes) > 0:\n    current_font_size = get_text(sizes[0])\nprint('Current font size:', current_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Open settings from the current checklist, show the current font size, and then change it to 100%", "solution": "tap($more_options_checklist)\ntap($settings)\ncurrent_size_elements = $current_font_size\nif len(current_size_elements) > 0:\n    tap(current_size_elements[0])\nsizes = $font_size_types.match({'selected': True})\ncurrent_font_size='Unknown'\nif len(sizes) > 0:\n    current_font_size = get_text(sizes[0])\nprint('Current font size:', current_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Change the font size to 90% in the app settings and then navigate back to the current note", "solution": "tap($settings)\ntap($font_size_90%)\nback()"}
{"task": "Open more options in the current note, navigate to settings, change the font size to 100%, and confirm the change", "solution": "tap($more_options_note)\ntap($settings)\ntap($font_size_100%)\nback()"}
{"task": "Change the theme of the app to Dark red, then customize the colors to use a light gray background for notes", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()\ntap($set_background_color)\nset_text($set_background_color, 'light gray')\ntap($save_set_colors)\nback()"}
{"task": "Open the more options for the current checklist, customize the app colors to pink, and then change the theme to dark mode", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\nset_text($set_theme_color, 'pink')\ntap($save_set_colors)\nap($theme_color_dark)\ntap($settings)"}
{"task": "Set the theme color of the app to turquoise, open the app settings and then change the theme to light mode", "solution": "tap($set_theme_color)\nset_text($set_theme_color, 'turquoise')\ntap($save_set_colors)\ntap($settings)\ntap($theme_color_light)\ntap($exit_settings)"}
{"task": "Open the file of the current note and export it as 'MeetingNotes.txt'", "solution": "tap($open_file)\nset_text($rename_input, 'MeetingNotes.txt')\ntap($export_as_file)"}
{"task": "Export the current checklist as 'ShoppingList.txt' and open the exported file", "solution": "tap($open_file)\nset_text($rename_input, 'ShoppingList.txt')\ntap($export_as_file)\ntap($open_file)"}
{"task": "Open the file of the current note, export it as 'ProjectPlan.pdf', and then open the exported file", "solution": "tap($open_file)\nset_text($rename_input, 'ProjectPlan.pdf')\ntap($export_as_file)\ntap($open_file)"}
{"task": "Create a new checklist note titled 'Weekend Chores' and list 'Clean garage', 'Mow lawn', 'Do laundry'", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Chores')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Clean garage')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Mow lawn')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Do laundry')\ntap($add_checklist_item_ok)"}
{"task": "Open the settings of the Notes app and set the theme color to Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()"}
{"task": "Open the more options menu in the current note and customize the colors of the Notes app", "solution": "tap($more_options_note)\ntap($set_colors)\n# Assuming customization involves multiple tasks like setting theme, text, and background colors\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($set_text_color)\ntap($save_set_colors)\ntap($set_background_color)\ntap($save_set_colors)\n# Close the theme customization window\nback()"}
{"task": "Set the theme color to White in the Notes app and then open the settings of the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()"}
{"task": "Change the theme color of the Notes app and open the more options menu in the current checklist", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()\ntap($more_options_checklist)"}
{"task": "Open settings in the notes app and disable Incognito mode for keyboards in notes.", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Enable clickable links and emails in notes, enable the use of monospaced font in notes, and then disable Incognito mode for keyboards in notes.", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open more options in the current checklist and enable line wrap in notes.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Disable clickable links and emails in notes, disable the use of monospaced font in notes, and then open settings in the notes app.", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)\ntap($settings)"}
{"task": "Enable Incognito mode for keyboards in notes and then open more options in the current note.", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nback()\ntap($more_options_note)"}
{"task": "Open the settings for the current note, verify them, then switch to and verify the settings for the current checklist.", "solution": "tap($more_options_note)\n# verify settings for note\nmore_option_note_buttons = get_attributes($more_option_note_buttons)\nassert len(more_option_note_buttons) > 0, 'Expected more option buttons for note'\n\n# Close note settings\nback()\n\n# Switching to checklist settings\nmore_options_checklist_buttons = get_attributes($more_options_checklist_buttons)\nassert len(more_options_checklist_buttons) > 0, 'Expected more option buttons for checklist'\n"}
{"task": "Delete the current note and then go to the app settings", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($settings)"}
{"task": "Open more options of the note named 'Groceries' and then delete the current note", "solution": "tap($open_note)\nnotes_list = $open_note_title_list\nidx = -1\nfor i in range(len(notes_list)):\n    if get_text(notes_list[i]) == 'Groceries':\n        idx = i\n        break\ntap(notes_list[idx])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Go to the app settings, then open more options of the checklist titled 'Weekend Trip'", "solution": "tap($settings)\ntap($add_note_ok)\nnotes_list = $open_note_title_list\nidx = -1\nfor i in range(len(notes_list)):\n    if get_text(notes_list[i]) == 'Weekend Trip':\n        idx = i\n        break\ntap(notes_list[idx])\ntap($more_options_checklist)"}
{"task": "Open more options of the note named 'Groceries', then open more options of the checklist titled 'Weekend Trip'", "solution": "tap($open_note)\nnotes_list = $open_note_title_list\nidx_groceries = -1\nidx_weekend_trip = -1\nfor i in range(len(notes_list)):\n    if get_text(notes_list[i]) == 'Groceries':\n        idx_groceries = i\n    if get_text(notes_list[i]) == 'Weekend Trip':\n        idx_weekend_trip = i\ntap(notes_list[idx_groceries])\ntap($more_options_note)\nback()\ntap(notes_list[idx_weekend_trip])\ntap($more_options_checklist)"}
{"task": "Set theme to light mode from note options and then from checklist options customize colors", "solution": "tap($more_options_note)\ntap($theme_color_light)\ntap($set_colors)\n"}
{"task": "Open note options, set theme to auto light/dark mode, then go to checklist options and customize colors", "solution": "tap($more_options_note)\ntap($theme_color_auto_light_dark)\ntap($set_colors)\n"}
{"task": "Create a new text note with the title 'Project Plan' and confirm the creation of a new note", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Plan')\nselect($text_note_type)\ntap($add_note_ok)\n"}
{"task": "Create a new checklist note with the title 'Travel Packing List' and select the checklist note type for the new note", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Packing List')\nselect($checklist_type)\ntap($add_note_ok)\n"}
{"task": "Open the existing note titled 'Weekly Agenda' and create a new text note with the title 'Summary' and confirm the creation of the note", "solution": "tap($open_note)\n$open_note_title_list = $open_note_title_list.match('Weekly Agenda')\ntap($open_note_title_list[0])\ntap($create_note)\nset_text($add_note_title, 'Summary')\ntap($add_note_ok)\n"}
{"task": "Replace the content of the note with 'Workout plan: cardio, strength training, and yoga' and then search for 'meeting minutes' within the current note", "solution": "tap($note_content)\nset_text($note_content, 'Workout plan: cardio, strength training, and yoga')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'meeting minutes')"}
{"task": "Search within the current note for the word 'deadline' and then update the note content to say 'Complete the draft by end of month' and finally find the next occurrence of 'budget' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($note_content)\nset_text($note_content, 'Complete the draft by end of month')\ntap($save_note)\ntap($next_matchhed_text)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)"}
{"task": "Increase the font size of the app to 125% and then open the more options in the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($exit_settings)\ntap($more_options_note)"}
{"task": "Open the settings menu and set the theme color of the app to custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Customize the colors of the app and then show the current font size of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($save_set_colors)\ntap($current_font_size)\nclose_set_colors\nback()"}
{"task": "Show the word count of the current note and then open more options for the current note", "solution": "tap($set_show_word_count)\ntap($more_options_note)"}
{"task": "Open the settings of the app, change the font size, then check the current font size in the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%) # example font size change\ntap($current_font_size)"}
{"task": "Open more options for the current checklist and then check the current font size in the app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($current_font_size)"}
{"task": "Open the settings of the app and then show the word count of the current note", "solution": "tap($settings)\ntap($set_show_word_count)"}
{"task": "Show the word count of the current note and then open more options for the current checklist", "solution": "tap($set_show_word_count)\ntap($more_options_checklist)"}
{"task": "Open more options for the current checklist and open settings from more options of the current checklist to customize colors in the settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Open more options for the current note and open settings from more options of the current note to set the text color of the app to blue", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_text_color)\nset_text($search_text, 'blue')\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist, open settings from more options of the current checklist, and set the theme color of the app to dark mode", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open more options for the current note, then open settings from more options of the current note, and customize colors in the settings to set both text and theme colors to red and green respectively", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\nset_text($search_text, 'green')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($search_text, 'red')\ntap($save_set_colors)"}
{"task": "From more options of the current note, open settings and customize colors to set theme color to purple and text color to yellow", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\nset_text($search_text, 'purple')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($search_text, 'yellow')\ntap($save_set_colors)"}
{"task": "Export the current checklist as 'ToDoList.csv' and print the checklist on screen", "solution": "\ntap($more_options_checklist)\ntap($open_file)\n# Assuming there's a way to print the checklist content on screen here, it could be within the file manager.\ntap($export_as_file)\nset_text($rename_input, 'ToDoList.csv')\ntap($rename_ok)\n"}
{"task": "Open the file of the current note, review its content, and then export it as 'Summary.docx'", "solution": "\ntap($more_options_note)\ntap($open_file)\n# Reviewing the content in file manager...\ntap($export_as_file)\nset_text($rename_input, 'Summary.docx')\ntap($rename_ok)\n"}
{"task": "Export the current note and the current checklist as 'DailyReport.docx' and 'TasksOverview.txt' respectively", "solution": "\ntap($more_options_note)\ntap($export_as_file)\nset_text($rename_input, 'DailyReport.docx')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($export_as_file)\nset_text($rename_input, 'TasksOverview.txt')\ntap($rename_ok)\n"}
{"task": "Open the file of the current checklist, copy its content to a new note, and then export the new note as 'ChecklistCopy.txt'", "solution": "\ntap($more_options_checklist)\ntap($open_file)\n# Assuming the file content is copied from file manager...\ntap($open_note)\ntap($create_note)\nset_text($add_note_title, 'ChecklistCopy')\ntap($checklist_type)\ntap($add_note_ok)\ntap($note_content)\n# Paste the copied content here...\ntap($save_note)\ntap($more_options_note)\ntap($export_as_file)\nset_text($rename_input, 'ChecklistCopy.txt')\ntap($rename_ok)\n"}
{"task": "Open the file of the current note, append the current checklist at the end of the note, and export the combined document as 'FinalDocument.doc'", "solution": "\ntap($more_options_note)\ntap($open_file)\n# Assuming the file content is copied from file manager...\ntap($more_options_checklist)\ntap($open_file)\n# Assuming the checklist content is appended to the copied note content... \ntap($more_options_note)\ntap($export_as_file)\nset_text($rename_input, 'FinalDocument.doc')\ntap($rename_ok)\n"}
{"task": "Check the current font size in the app, then open the settings of the app", "solution": "font_size = get_text($current_font_size)\ntap($settings)"}
{"task": "Open more options for the current note and then show the word count of the current note", "solution": "tap($more_options_note)\ntap($set_show_word_count)"}
{"task": "Open the settings of the app and then open more options for the current checklist", "solution": "tap($settings)\ntap(back())\ntap($more_options_checklist)"}
{"task": "Customize the colors of the app and then set the theme color to 'Black & White'", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Go to the app settings, open the font size settings, and change the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50% or $font_size_50%)"}
{"task": "Delete the current note and then open more options of the note named 'Groceries'", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($open_note)\nnote_titles = $open_note_title_list\nnote_titles.match('Groceries')[0].tap()\ntap($more_options_note)"}
{"task": "Go to the app settings after opening more options of the checklist titled 'Weekend Trip'", "solution": "tap($open_note)\nchecklist_items = $open_note_title_list\nchecklist_items.match('Weekend Trip')[0].tap()\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Delete the current note, then go to app settings and finally open more options of the note named 'Groceries'", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($settings)\nback()\ntap($open_note)\nnote_titles = $open_note_title_list\nnote_titles.match('Groceries')[0].tap()\ntap($more_options_note)"}
{"task": "Open more options of the checklist titled 'Weekend Trip' and then go to the app settings.", "solution": "tap($open_note)\nchecklist_items = $open_note_title_list\nchecklist_items.match('Weekend Trip')[0].tap()\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Open more options for the current note, then go to the app settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Decrease the font size of the app to 60% and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)\nback()\nscroll($scroll_settings_page, 'down')\ntap($more_options_checklist)"}
{"task": "Set the font size of the app to 150% and then open the settings menu", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nscroll($scroll_settings_page, 'down')"}
{"task": "Open more options for the current checklist and then increase the font size of the app to 125%", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nscroll($scroll_settings_page, 'down')"}
{"task": "Customize the colors of the app and then open the more options in the current note", "solution": "tap($settings)\ntap($set_colors)\nsave_set_colors($save_set_colors)\nback()\ntap($more_options_note)"}
{"task": "Set the font size of the app to 150% and then show the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($current_font_size)\nget_text($current_font_size)"}
{"task": "Open the settings of the Notes app and customize the colors of the Notes app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the theme color to Black & White in the Notes app and open the more options menu in the current checklist", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\nback()\nback()\ntap($more_options_checklist)"}
{"task": "Open the more options menu in the current note, open the settings of the Notes app and change the theme color", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Customize the colors of the Notes app and then set the theme color to White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Enable display save success messages and then export all notes to Dropbox", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_display_save_success_messages)\ntap($export_notes)"}
{"task": "Create a new text note with the title 'Birthday Party' then open the existing note titled 'Guest List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Birthday Party')\ntap($text_note_type)\ntap($add_note_ok)\ntap($open_note)\nopen_note_title_list = $open_note_title_list\nfor title in open_note_title_list:\n    if get_text(title) == 'Guest List':\n        tap(title)\n        break"}
{"task": "Create a new checklist note with the title 'Todo' and select the checklist note type for the new note then confirm the creation of the note", "solution": "tap($create_note)\nset_text($add_note_title, 'Todo')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the existing note titled 'Shopping List' and create a new text note with the title 'Extras' and confirm the creation of the note", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nfor title in open_note_title_list:\n    if get_text(title) == 'Shopping List':\n        tap(title)\n        break\ntap($create_note)\nset_text($add_note_title, 'Extras')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new text note with the title 'Workout Routine', then create a new checklist note with the title 'Exercises' and select the checklist note type for the new note", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Routine')\ntap($text_note_type)\ntap($add_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Exercises')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the existing note titled 'Goals' and create a new checklist note with the title 'Milestones' and confirm the creation of the note", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nfor title in open_note_title_list:\n    if get_text(title) == 'Goals':\n        tap(title)\n        break\ntap($create_note)\nset_text($add_note_title, 'Milestones')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open settings from the main screen and set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Open settings from the main screen, check the current font size, and then set the font size to 250%", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_types)\ncurrent_size = get_attributes($font_size_types)\nback()\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Open more options for the current note and then open settings from the main screen", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open settings from the main screen, check the current font size, and open more options for the current note", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_types)\ncurrent_size = get_attributes($font_size_types)\nback()\nback()\ntap($more_options_note)"}
{"task": "Set the font size to 250% in the app settings and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($more_options_checklist)"}
{"task": "Open more options for the current checklist, access settings from more options of the current checklist, and customize colors by setting the text color to black and the theme color to white", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\ntap($set_text_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Open more options for the current note, navigate to settings from more options of the current note, and customize colors to set the app's text color to orange and theme color to teal", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($set_text_color)\ntap($set_text_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist, go to settings from more options of the current checklist, and under customize colors set the text color to navy blue and the theme color to light grey", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($theme_color_white)\ntap($theme_color_light)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Create a new note with the title 'Meeting Agenda' and include an item 'Discuss quarterly goals' in the note", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Agenda')\ntap($text_note_type)\ntap($add_note_ok)\ntap($note_content)\nset_text($note_content, 'Discuss quarterly goals')\ntap($save_note)"}
{"task": "Create a checklist note with the title 'Grocery List' and add items 'Milk', 'Bread', and 'Eggs' to the checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Eggs')\ntap($add_checklist_item_ok)"}
{"task": "Open more options for the current checklist and sort the items in the current checklist by Date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_by_date_created)\ntap($sort_checklist_items_ok)"}
{"task": "Open settings from the current checklist more options and confirm sorting type for the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current note and then exit the settings page", "solution": "tap($more_options_note)\nback()"}
{"task": "Sort the items in the current checklist by Custom and then confirm the sorting type for the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_by_custom)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current checklist and then open settings from the current checklist more options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Open the more options menu for the current note and then customize the colors of the app", "solution": "tap($more_options_note)\ntap($set_colors)"}
{"task": "Open the more options menu for the current checklist and then set the theme color to 'Custom'", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Go to the app settings, check the current font size of the app, and then change the font size to 50%", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_50%)"}
{"task": "Set the theme color to 'Black & White' and then go to the app settings to customize the colors of the app", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\nback()\ntap($settings)\ntap($set_colors)"}
{"task": "Open the more options menu for the current note, set the theme color to 'Custom', and then change the font size to 50%", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nback()\ntap($settings)\ntap($current_font_size)\ntap($font_size_50%)"}
{"task": "Open app settings and enable display save success messages before opening more options for the current checklist", "solution": "tap($settings)\nif not get_attributes($set_display_save_success_messages)['checked']:\n    tap($set_display_save_success_messages)\nback()\ntap($more_options_checklist)"}
{"task": "Export all notes and then disable display save success messages for future saves", "solution": "tap($settings)\nif not get_attributes($set_display_save_success_messages)['checked']:\n    tap($set_display_save_success_messages)\nback()\ntap($settings)\ntap($export_notes)\nif get_attributes($set_display_save_success_messages)['checked']:\n    tap($set_display_save_success_messages)\nback()"}
{"task": "Open more options for the current note and enable display save success messages after making any changes", "solution": "tap($more_options_note)\nif not get_attributes($set_display_save_success_messages)['checked']:\n    tap($set_display_save_success_messages)"}
{"task": "Open more options for the current checklist to reset all tasks, and then export all notes to Google Drive", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\nback()\ntap($settings)\ntap($export_notes)"}
{"task": "Open app settings, disable display save success messages, and then open more options for the current note", "solution": "tap($settings)\nif get_attributes($set_display_save_success_messages)['checked']:\n    tap($set_display_save_success_messages)\nback()\ntap($more_options_note)"}
{"task": "Open the notes font size settings, then change the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Change the font size to 60%, then display the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)\ntap($current_font_size)\nfont_size = [fs for fs in $font_size_types if get_attributes(fs)['selected']][0]\nprint(get_text(font_size))"}
{"task": "Open more options for the current checklist, then open the notes font size settings, and change the font size to 50%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Go to the app settings, then open the notes font size settings, and change the font size to 60%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Open more options for the current note, then display the current font size after changing it to 50%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_50%)\ntap($current_font_size)\nfont_size = [fs for fs in $font_size_types if get_attributes(fs)['selected']][0]\nprint(get_text(font_size))"}
{"task": "Open more options for the current note, then navigate to app settings and enable automatic theme switching based on time of day", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\n"}
{"task": "Customize the color settings by opening app settings, then choosing the light theme and setting the app icon color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'blue')\ntap($save_set_colors)\n"}
{"task": "Open the more options menu for the current checklist, navigate to app settings, and enable automatic theme switching", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\n"}
{"task": "Update the note display by opening more options, navigating to settings, and switching the theme to light mode", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\n"}
{"task": "Set the theme to automatically switch between light and dark by going to more options, app settings, and selecting the Auto light / dark checkbox", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\n"}
{"task": "Go to the settings menu and set the theme color of the app to Navy Blue, then return to the main note screen to verify the changes", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()"}
{"task": "Open more options for the current checklist and set the theme of the app to Dark, followed by changing the checklist font color to white", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_dark)\ntap($set_background_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()\nback()"}
{"task": "Set the theme of the app to Dark, then immediately go to the settings menu to customize the highlight color to neon green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($customize_primary_ok)\ntap($back)\nback()"}
{"task": "Open more options for the current note, go to the settings menu, and change the theme of the app to Dark red", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\nback()\nback()"}
{"task": "Set the theme color of the app to Teal, then open more options for the current note and share it via email to john.doe@example.com", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()\ntap($more_options_note)\ntap($share)\nset_text($email, 'john.doe@example.com')\ntap($send_email)"}
{"task": "Exit the settings page and then open settings from the current note more options", "solution": "back()\ntap($more_options_note)\ntap($settings)"}
{"task": "Sort the items in the current checklist by Date created and then open more options for the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Open settings from the current checklist more options, then sort the items in the current checklist by Custom, and finally confirm the sorting type", "solution": "tap($more_options_checklist)\ntap($settings)\nback()\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Add a new checklist item titled 'Renew car insurance' and then switch to the next item after viewing the second checklist item", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Renew car insurance')\ntap($add_checklist_item_ok)\ntap($switch_to_next_item)"}
{"task": "Add a new checklist item titled 'Buy groceries' and show the content of the first checklist item", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)\ntap($checklist_item_list[0])"}
{"task": "Open settings from the main screen, set the font size to 200%, and then check the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\nback()\ntap($current_font_size)"}
{"task": "Open more options for the current checklist and then open settings from the main screen to set the font size to 200%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)\nback()"}
{"task": "Set the font size to 250% in the app settings, open more options for the current checklist, and then open settings from the main screen", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\nback()\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Move the checklist item 'Finish project report' to the bottom and rename the checklist item 'Call mom' to 'Call family'", "solution": "long_tap($checklist_item_list.match('Finish project report')[0])\ntap($move_selected_item_to_the_buttom)\nlong_tap($checklist_item_list.match('Call mom')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Call family')\ntap($rename_ok)"}
{"task": "Rename the checklist item 'Walk the dog' to 'Evening walk with dog' and move the checklist item 'Read a book' to the bottom", "solution": "long_tap($checklist_item_list.match('Walk the dog')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Evening walk with dog')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Read a book')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Customize the colors of the app, open the font size settings, and then set the theme color to 'Black & White'", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\ntap($set_font_size)"}
{"task": "Rename the current note to 'Project A Plan' and lock the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project A Plan')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open more options for the current checklist, rename the current checklist item to 'Weekly Review Tasks', then lock the current checklist item", "solution": "tap($more_options_checklist)\nlong_tap($checklist_item)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Weekly Review Tasks')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Shopping List', open more options and delete the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Lock the current note, then rename the current checklist item to 'Errands'", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\nlong_tap($checklist_item)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Errands')\ntap($rename_ok)"}
{"task": "Create a new note titled 'Vacation Plans', search for the word 'hotel' within the current note, and find the next occurrence of the word 'hotel'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Plans')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'hotel')\ntap($next_matchhed_text)"}
{"task": "Open the note titled 'Meeting Notes', search for the word 'deadline', find the previous occurrence of the word 'deadline', and close the search box.", "solution": "tap($open_note)\n$open_note_title_list.match('Meeting Notes')[0].tap()\ntap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\ntap($close_search_box)"}
{"task": "Search for the word 'budget' in the current note, go to the next occurrence, and then create a new note titled 'Budget Review'.", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)\ntap($create_note)\nset_text($add_note_title, 'Budget Review')\ntap($add_note_ok)"}
{"task": "Open the note titled 'Workout Routines', search for the word 'cardio', find the next occurrence of the word 'cardio', and then create a new note titled 'Cardio Schedule'.", "solution": "tap($open_note)\n$open_note_title_list.match('Workout Routines')[0].tap()\ntap($search_within_note)\nset_text($search_text, 'cardio')\ntap($next_matchhed_text)\ntap($create_note)\nset_text($add_note_title, 'Cardio Schedule')\ntap($add_note_ok)"}
{"task": "Create a new note titled 'Books to Read', search for the word 'fiction' within the current note, and find the previous occurrence of the word 'fiction'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Books to Read')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'fiction')\ntap($prev_matched_text)"}
{"task": "Add a new note titled 'Project Ideas' with the text note type and include a paragraph discussing the concept of 'AI-driven automation'", "solution": "# Task 0: Add a new note titled 'Project Ideas' with the text note type and include a paragraph discussing the concept of 'AI-driven automation'\ntap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'AI-driven automation')\ntap($save_note)"}
{"task": "Open the note labeled 'Travel Plans' and add a new sub-note titled 'Packing List' under it", "solution": "# Task 1: Open the note labeled 'Travel Plans' and add a new sub-note titled 'Packing List' under it\ntap($open_note)\n$titles = $open_note_title_list\n$tap($titles.match('Travel Plans')[0])\ntap($create_note)\nset_text($add_note_title, 'Packing List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a checklist note with the title 'Work Tasks' and add items 'Email client', 'Submit report', and 'Prepare presentation' to the checklist, then mark 'Email client' as completed", "solution": "# Task 2: Create a checklist note with the title 'Work Tasks' and add items 'Email client', 'Submit report', and 'Prepare presentation' to the checklist, then mark 'Email client' as completed\ntap($create_note)\nset_text($add_note_title, 'Work Tasks')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($checklist_item, 'Email client')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($checklist_item, 'Submit report')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($checklist_item, 'Prepare presentation')\ntap($add_checklist_item_ok)\nlong_tap($checklist_item_list.match('Email client')[0])\ntap($checklist_item)"}
{"task": "Create a new note with the title 'Fitness Goals' and add details for 'Daily jogging: 30 minutes' and 'Weekly yoga: 3 sessions'", "solution": "# Task 3: Create a new note with the title 'Fitness Goals' and add details for 'Daily jogging: 30 minutes' and 'Weekly yoga: 3 sessions'\ntap($create_note)\nset_text($add_note_title, 'Fitness Goals')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Daily jogging: 30 minutes\\nWeekly yoga: 3 sessions')\ntap($save_note)"}
{"task": "Open the note labeled 'Book Recommendations' and add a new section titled 'Science Fiction' with bullet points for 'Dune' and 'Neuromancer'", "solution": "# Task 4: Open the note labeled 'Book Recommendations' and add a new section titled 'Science Fiction' with bullet points for 'Dune' and 'Neuromancer'\ntap($open_note)\n$titles = $open_note_title_list\ntap($titles.match('Book Recommendations')[0])\nset_text($note_content, '\\nScience Fiction:\\n- Dune\\n- Neuromancer')\ntap($save_note)"}
{"task": "Open more options for the current note and customize the app icon color through the settings menu", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_app_icon_color)"}
{"task": "From the checklist options, access the color customization settings and choose a new color for the app icon", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_app_icon_color)"}
{"task": "Go to the note's more options, access settings, and set the theme to light mode as well as change the app icon to a different color", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\ntap($set_colors)\ntap($set_app_icon_color)"}
{"task": "Open the settings menu from the main screen of the app and then scroll through the settings until you find the option to customize the colors of the Notes APP, then customize the colors to a blue theme", "solution": "tap($settings)\nwhile True:\n    scroll($scroll_settings_page, 'down')\n    if 'Customize colors' in [get_text(ele) for ele in $settings]:\n        break\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\n# Assume that there's logic to set blue color in custom theme setting here\n# As the script to set specific blue color customization is not provided, this part is to illustrate the steps\n"}
{"task": "Sort the current checklist by alphabetical order and confirm the selection by pressing OK, then open more options for the current checklist and save a backup", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($export_notes)"}
{"task": "Enable display save success messages, export all notes, and then disable display save success messages", "solution": "tap($settings)\ntap($set_display_save_success_messages)\ntap($export_notes)\ntap($set_display_save_success_messages)"}
{"task": "Open app settings, enable display save success messages, and then open more options for the current checklist to create a new task", "solution": "tap($settings)\ntap($set_display_save_success_messages)\nback()\ntap($more_options_checklist)\ntap($add_checklist_item)"}
{"task": "Open the more options of the current note, then set the theme color to dark", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Access the app settings, then customize the colors of the app and set the primary color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_custom)\nset_text($customize_primary_ok, 'blue')\ntap($save_set_colors)"}
{"task": "Open more options of the current checklist, then set the theme color to auto light/dark", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist, change the theme of the app to Dark, then customize the colors to change the header color to maroon", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($close_set_colors)\ntap($set_colors)\ntap($set_primary_color)\n# Assuming there's a way to set the specific color on the color picker\ntap($customize_primary_ok)\ntap($save_set_colors)"}
{"task": "Set the theme of the app to Dark, go to the settings menu, then customize the colors to use yellow for the note titles and save the settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($close_set_colors)\ntap($set_colors)\ntap($set_text_color)\n# Assuming there's a way to set the specific color on the color picker\ntap($customize_text_color)\ntap($save_set_colors)\nback()"}
{"task": "Tap the 'more options' button on the main screen, then tap 'Sort by' and select 'Title' to sort the checklist items alphabetically.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Tap the 'more options' button on the main screen, then tap 'Sort by' and select 'Date created' to sort the checklist items by when they were added.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the 'more options' menu, sort the checklist by 'Title', and then create a new note with the title 'Project Plan'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\nback()\ntap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the more options menu of the current note, open the settings of the app from the current note options, set the theme color to Custom, and set the font size to 125%.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_125%)\n"}
{"task": "Open the settings of the app from the current note options, open the customize colors option from the settings, and set the theme color to White.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\n"}
{"task": "Open the settings of the app from the current checklist options and set the font size to 200%.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)\n"}
{"task": "Open the more options menu of the current note, open the settings of the app from the current note options, open the customize colors option from the settings, and set the font size to 150%.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_font_size)\ntap($font_size_150%)\n"}
{"task": "Open the settings of the app from the current note options, set the theme color to Black & White, and set the font size to 75%.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($set_font_size)\ntap($font_size_75%)\n"}
{"task": "Customize the theme color to a specific RGB value, then set the app icon color to match it", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($ok)\ntap($set_app_icon_color)\n"}
{"task": "Access the app settings, personalize with a custom theme color, and set the theme color to black and white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($ok)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Open the more options of the current note, access the app settings, and then set the theme color to light", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Open more options of the current checklist, customize the colors of the app, and set the primary color to green", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_primary_color)\nn_set_text($customize_primary_ok, \"#008000\")\ntap($save_set_colors)"}
{"task": "Access the app settings, set the theme color to dark red, and then change the app icon color to red", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($ok)\ntap($set_app_icon_color)\nset_text($customize_app_icon_color, \"#FF0000\")\ntap($save_set_colors)"}
{"task": "Rename the current checklist item to 'Workout Routine', then open more options for the current checklist and lock the current checklist item", "solution": "long_tap($checklist_item)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Workout Routine')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($lock_note)"}
{"task": "Open more options for the current note, then rename the current note to 'Travel Itinerary' and lock it", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Travel Itinerary')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Books to Read', delete the current checklist item", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Books to Read')\ntap($rename_ok)\nlong_tap($checklist_item)\ntap($delete_selected_checklist_item)"}
{"task": "Lock the current note, then open more options and rename the current checklist item to 'Daily Chores'", "solution": "tap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\nlong_tap($checklist_item)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Daily Chores')\ntap($rename_ok)"}
{"task": "Create a new checklist note titled 'Packing List' and add items 'passport', 'tickets', and 'clothes' to it.", "solution": "tap($create_note)\nset_text($add_note_title, 'Packing List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'passport')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'tickets')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'clothes')\ntap($add_checklist_item_ok)"}
{"task": "Open the settings menu from the more options of the current note, then customize the colors of the Notes APP to a dark theme, and exit the settings page of the Notes APP", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Open more options for the current note in the Notes APP and sort the checklist items, confirm by pressing OK, then share the checklist to John's email john.doe@example.com", "solution": "tap($more_options_note)\ntap($sort_checklist_items)\ntap($sort_checklist_items_ok)\ntap($share)\nset_text($search_text, 'john.doe@example.com')\ntap($search_text_next)\ntap($search_text_ok)"}
{"task": "Open the settings menu from the more options of the current checklist, customize the colors of the Notes APP with a green theme and then scroll down the settings page of the Notes APP to enable dark mode", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($custom_color_input, '#008000')\ntap($save_set_colors)\nscroll($scroll_settings_page, 'down')\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Sort the checklist items and confirm by pressing OK, then open more options for the current checklist and duplicate it", "solution": "tap($sort_checklist_items)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($duplicate)"}
{"task": "Open more options for the current checklist, open the settings menu, scroll down the settings page and set a passcode for the Notes APP", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_passcode)\nset_text($passcode_input, '1234')\ntap($passcode_ok)"}
{"task": "Open the more options menu of the current note and then open the settings of the app from the current note options. Open the customize colors option from the settings and set the theme color to Custom and the font size to 300%.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'text': 'Custom'}))\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_types.match({'text': '300%'}))\ntap($font_size_300%)"}
{"task": "Open the settings of the app and then customize the colors to set the theme color to Dark Red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'text': 'Dark red'}))\ntap($save_set_colors)"}
{"task": "Open more options of the current checklist and then open more options of the current note", "solution": "tap($more_options_checklist)\nback()\ntap($more_options_note)"}
{"task": "Open the settings of the app, customize the colors, and set the theme color to Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'text': 'Black & White'}))\ntap($save_set_colors)"}
{"task": "Open the more options of the current note and then set the theme color of the app to White", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'text': 'White'}))\ntap($save_set_colors)"}
{"task": "Create a new note titled 'Birthday Party Plans' with the text 'Order cake', 'Send invitations', and 'Book venue', then add a sub-note under it titled 'Guest List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Birthday Party Plans')\ntap($text_note_type)\ntap($add_note_ok)\ntap($note_content)\nset_text($note_content, 'Order cake\\nSend invitations\\nBook venue')\ntap($save_note)\ntap($switch_to_next_item)\ntap($create_note)\nset_text($add_note_title, 'Guest List')\ntap($text_note_type)\ntap($add_note_ok)\ntap($save_note)"}
{"task": "Open the more options menu in the current checklist, then sort the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types[0])\ntap($sort_checklist_items_ok)"}
{"task": "Show me the options for sorting the current checklist items, then open the sort options and sort the checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types[1])\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu in the current checklist, sort the current checklist items by custom order, and then sort by title again", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types[2])\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types[0])\ntap($sort_checklist_items_ok)"}
{"task": "Show me the options for sorting the current checklist items, choose to sort by date created, and then finally sort by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types[1])\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types[0])\ntap($sort_checklist_items_ok)"}
{"task": "Open the note titled 'Conference Schedule', search for the word 'keynote', find the next occurrence of the word 'keynote', and close the search box.", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Conference Schedule':\n        tap(open_note_titles[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'keynote')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Create a new note titled 'Home Renovation', search for the word 'kitchen' within the current note, and go to the next occurrence of the word 'kitchen'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Home Renovation')\ntap($text_note_type)\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'kitchen')\ntap($next_matchhed_text)"}
{"task": "Open the note titled 'Doctor Appointments', search for the word 'checkup', find the previous occurrence of the word 'checkup', and close the search box.", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Doctor Appointments':\n        tap(open_note_titles[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'checkup')\ntap($prev_matched_text)\ntap($close_search_box)"}
{"task": "Search for the word 'meeting' within the current note, then scroll to the next instance of the word 'milestone'", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\ntap($close_search_box)\ntap($search_within_note)\nset_text($search_text, 'milestone')\ntap($next_matchhed_text)"}
{"task": "Create a new note with the title 'Shopping List' and add the text 'Reminder: Buy groceries' at the beginning", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Reminder: Buy groceries\\n' + get_text($note_content))"}
{"task": "Open the 'more options' menu, sort the checklist by 'Date created', then update an existing note titled 'Meeting Notes' with the latest meeting information.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($open_note)\nnotes = $open_note_title_list\nfor note in notes:\n\tif get_text(note) == 'Meeting Notes':\n\t\ttap(note)\n\t\tbreak\n# Assuming that updating 'Meeting Notes' involves editing its content\ntap($note_content)\nset_text($note_content, 'Latest meeting information')\ntap($save_note)"}
{"task": "Sort the checklist items by 'Title' by tapping the 'more options' button and 'Sort by', then add a new item called 'Groceries'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Groceries')\ntap($add_checklist_item_ok)"}
{"task": "Sort the checklist items by 'Date created' by accessing the 'more options' and 'Sort by' button, then delete the oldest note in the list.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\nitems = $checklist_item_list\nlong_tap(items[len(items) - 1])\ntap($delete_selected_checklist_item)"}
{"task": "Open the 'more options' menu, sort the checklist items by 'Title', and then share the first item in the list via email to john@example.com.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\nitems = $checklist_item_list\ntap(items[0])\ntap($more_options_checklist)\ntap($share)\n# Assuming there's a share via email functionality that takes an address as input\nset_text($share_email_input, 'john@example.com')\ntap($share_send_button)"}
{"task": "Access the 'more options' menu, sort by 'Date created', then change the priority of the most recently created note to 'High'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\nitems = $checklist_item_list\nlong_tap(items[0])\n# Assuming there's an option for setting priority to 'High' in the custom options after long tap\ntap($priority_high_option)"}
{"task": "Open the settings menu from the main screen of the app, scroll through the settings and set a reminder to organize notes at 3 PM daily", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\n# Since we don't have the element for setting a reminder, we'll assume there's an option to set reminders available in settings which is not provided in the given UI elements. Also, the exact details for setting daily reminders do not appear to be available according to the provided UI element descriptions."}
{"task": "Open the 'Settings' menu in the Notes app and then change the background color of the app to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($background_color_input, \"blue\")\ntap($save_set_colors)"}
{"task": "Customize the primary color of the Notes app to green and then set the theme color to 'dark_red'", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($primary_color_input, \"green\")\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Open the 'Settings' menu in the Notes app and then set the app icon color to black", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($app_icon_color_input, \"black\")\ntap($save_set_colors)"}
{"task": "Change the background color of the Notes app to blue and then set the theme to 'light'", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($background_color_input, \"blue\")\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Tap on the 'more options' button for the current checklist, export the current checklist as a file, and then print the current checklist", "solution": "tap($more_options_checklist)\ntap($export_as_file)\ntap($print_note)"}
{"task": "Tap on the 'more options' button for the current note, export the current note as a file, and email it to 'example@example.com'", "solution": "tap($more_options_note)\ntap($export_as_file)\n# Assuming there's an email option immediately accessible within the file manager\ntap($email)\nset_text($recipient_field, 'example@example.com')\ntap($send_email_button)"}
{"task": "Tap on the 'more options' button for the current checklist, export the current checklist as a file, and save it to Google Drive", "solution": "tap($more_options_checklist)\ntap($export_as_file)\n# Assuming there's a Google Drive option immediately accessible within the file manager\ntap($google_drive)\n# Additional confirmation steps if necessary\ntap($confirm_save_button)"}
{"task": "Print the current note, then tap on the 'more options' button for the current note and export it as a file to Dropbox", "solution": "tap($print_note)\ntap($more_options_note)\ntap($export_as_file)\n# Assuming there's a Dropbox option immediately accessible within the file manager\ntap($dropbox)\n# Additional confirmation steps if necessary\ntap($confirm_save_button)"}
{"task": "Tap on the 'more options' button for the current checklist, print the current checklist, and then export the current checklist as a file to OneDrive", "solution": "tap($more_options_checklist)\ntap($print_note)\ntap($export_as_file)\n# Assuming there's a OneDrive option immediately accessible within the file manager\ntap($one_drive)\n# Additional confirmation steps if necessary\ntap($confirm_save_button)"}
{"task": "Show the content of the second checklist item and then add a new checklist item titled 'Finish homework'", "solution": "long_tap($checklist_item_list[1])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Finish homework')\ntap($add_checklist_item_ok)"}
{"task": "Switch to the next item in the checklist, after that show the content of the third checklist item", "solution": "tap($switch_to_next_item)\nlong_tap($checklist_item_list[2])"}
{"task": "Add a new checklist item titled 'Call mom' and then switch to the next item in the checklist", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call mom')\ntap($add_checklist_item_ok)\ntap($switch_to_next_item)"}
{"task": "Show the content of the checklist item after 'Finish homework' and then add a new checklist item titled 'Renew car insurance'", "solution": "long_tap($checklist_item_list.match('Finish homework')[0])\nlong_tap($checklist_item.match({'selected': true})[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Renew car insurance')\ntap($add_checklist_item_ok)"}
{"task": "Add a new checklist item titled 'Finish homework' and then show the content of the checklist item after 'Finish homework'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Finish homework')\ntap($add_checklist_item_ok)\nlong_tap($checklist_item_list.match('Finish homework')[1])"}
{"task": "Open more options of the current note, then open more options of the current checklist, and finally set the theme color of the app to Custom", "solution": "tap($more_options_note)\ntap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Customize the colors of the app and set the theme color first to Dark Red and then to White", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Open the settings of the app, then open more options of the current checklist, and finally set the theme color to Black & White", "solution": "tap($settings)\ntap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Open more options of the current note, open the settings, customize the colors, and set the theme color to Custom", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Switch to the previous note, list all checklist items, and add a new checklist item 'Review project proposal by Friday'.", "solution": "tap($switch_to_prev_item)\nitems = $checklist_item_list\nitem_titles = [get_text(item) for item in items]\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Review project proposal by Friday')\ntap($add_checklist_item_ok)"}
{"task": "Open the more options menu for the current checklist and then display more options for the current note", "solution": "tap($more_options_checklist)\nback()\ntap($more_options_note)"}
{"task": "Open the 'Settings' menu in the Notes app and customize the app's colors", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the Notes app to 'dark_red' and then change the background color of the app to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'blue')\ntap($save_set_colors)"}
{"task": "Customize the primary color of the Notes app to green after opening the 'Settings' menu and then change the theme to 'light'", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Tap the 'more options' button for the current note and edit the content of the current note to add 'Meeting agenda for tomorrow'.", "solution": "tap($more_options_note)\ntap($note_content)\nset_text($note_content, 'Meeting agenda for tomorrow')\ntap($save_note)"}
{"task": "Open the existing note titled 'Project Plan', rename it to 'Updated Project Plan', and create a shortcut for this note titled 'Work Updates'.", "solution": "tap($open_note)\nnotes = $open_note_title_list\nnote_idx = next(idx for idx, elem in enumerate(notes) if get_text(elem) == 'Project Plan')\ntap(notes[note_idx])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Updated Project Plan')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)\nset_text($rename_input, 'Work Updates')\ntap($rename_ok)\n"}
{"task": "Create a new text note titled 'Books to Read', add books '1984 by George Orwell' and 'To Kill a Mockingbird by Harper Lee', and confirm the new note creation.", "solution": "tap($create_note)\nset_text($add_note_title, 'Books to Read')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '1984 by George Orwell\\nTo Kill a Mockingbird by Harper Lee')\ntap($save_note)\n"}
{"task": "Create a new checklist note titled 'House Chores', add tasks 'vacuum the living room', 'take out the trash', and 'clean the kitchen', and create a shortcut for this note titled 'Daily Tasks'.", "solution": "tap($create_note)\nset_text($add_note_title, 'House Chores')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'vacuum the living room')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'take out the trash')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'clean the kitchen')\ntap($add_checklist_item_ok)\ntap($more_options_checklist)\ntap($create_shortcut)\nset_text($rename_input, 'Daily Tasks')\ntap($rename_ok)\n"}
{"task": "Open the existing note, rename it to 'Client Meeting Minutes', and view more options for this note.", "solution": "tap($open_note)\nnotes = $open_note_title_list\nnote_idx = next(idx for idx, elem in enumerate(notes) if get_text(elem).startswith('Updated '))\ntap(notes[note_idx])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Client Meeting Minutes')\ntap($rename_ok)\ntap($more_options_note)\n"}
{"task": "Create a new text note titled 'Fitness Goals', add goals 'run 5k', 'start yoga', and 'meditate daily', and confirm the new note creation.", "solution": "tap($create_note)\nset_text($add_note_title, 'Fitness Goals')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'run 5k\\nstart yoga\\nmeditate daily')\ntap($save_note)\n"}
{"task": "Open the more options menu in the current checklist, sort the checklist by date created, and then switch back to custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Show me the options for sorting the current checklist items, sort by title, and then sort by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu in the current checklist, sort by custom order, then display the sorting options and sort by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Show me the options for sorting the current checklist items, then sort by custom order and finally sort by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Scroll through the content in the note to review previous entries, then edit the content in the note by typing 'Review meeting notes from September'", "solution": "scroll($note_content, 'up')\nset_text($note_content, 'Review meeting notes from September')"}
{"task": "Tap 'Open Note' and then create a new note titled 'Grocery List', then add a checklist item 'Buy Milk' to the current note, add another checklist item 'Buy Eggs', and complete the note by tapping 'OK'.", "solution": "tap($open_note)\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy Eggs')\ntap($add_checklist_item_ok)"}
{"task": "Scroll through the list of existing notes to find 'Meeting Notes', open 'Meeting Notes' by tapping 'Open Note', then edit the note by adding a checklist item 'Discuss Budget'.", "solution": "tap($open_note)\nscroll($open_note_title_list, 'down')\nopen_note_title_list = $open_note_title_list\nmeeting_notes = open_note_title_list.match('Meeting Notes')[0]\ntap(meeting_notes)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Discuss Budget')\ntap($add_checklist_item_ok)"}
{"task": "Tap 'Create Note' to add a new note titled 'Weekend Plans', add a checklist item 'Go Hiking', add another checklist item 'Visit Museum', and complete the note by tapping 'OK'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Plans')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Go Hiking')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Visit Museum')\ntap($add_checklist_item_ok)"}
{"task": "Open more options for the current checklist, then edit the current checklist to remove 'Buy Milk'.", "solution": "tap($more_options_checklist)\ntap($checklist_item_list)\nchecklist_items = $checklist_item_list.match('Buy Milk')\nif checklist_items:\n    long_tap(checklist_items[0])\n    tap($delete_selected_checklist_item)"}
{"task": "Scroll through the list of existing notes to find 'Birthday Plans', then long tap to select the note titled 'Birthday Plans' and rename it to 'John's Birthday Plans'.", "solution": "tap($open_note)\nscroll($open_note_title_list, 'down')\nopen_note_title_list = $open_note_title_list\nbirthday_plans = open_note_title_list.match('Birthday Plans')[0]\nlong_tap(birthday_plans)\ntap($rename_note)\nset_text($rename_input, \"John's Birthday Plans\")\ntap($rename_ok)"}
{"task": "Open the note titled 'Daily Journal' and search for 'project', highlight all occurrences, then close the note and return to the main screen", "solution": "\ntap($open_note)\nopen_note_title_list = $open_note_title_list\nnote = open_note_title_list.match('Daily Journal')[0]\ntap(note)\ntap($search_within_note)\nset_text($search_text, 'project')\nwhile True:\n    attrs = get_attributes($next_matchhed_text)\n    if attrs['selected'] == False:\n        tap($next_matchhed_text)\n    else:\n        break\ntap($close_search_box)\nback()\nback()\n"}
{"task": "Create a new note titled 'Workout Routine', add the text 'Call John at 5pm', and search for 'important', highlighting the first occurrence", "solution": "\ntap($create_note)\nset_text($add_note_title, 'Workout Routine')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Call John at 5pm')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'important')\ntap($next_matchhed_text)\ntap($close_search_box)\nback()\n"}
{"task": "Edit the content of the current note to include 'Reminder: Buy groceries' at the beginning, then scroll to the next instance of 'budget'", "solution": "\ncurrent_note_content = get_text($note_content)\nset_text($note_content, 'Reminder: Buy groceries\\n' + current_note_content)\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)\ntap($close_search_box)\n"}
{"task": "Create a new note and set the title to 'Travel Itinerary', add 'Call John at 5pm', then search for 'important' and highlight the first occurrence", "solution": "\ntap($create_note)\nset_text($add_note_title, 'Travel Itinerary')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Call John at 5pm')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'important')\ntap($next_matchhed_text)\ntap($close_search_box)\nback()\n"}
{"task": "Search for the word 'meeting' within the current note, scroll to the next instance of 'milestone', and then scroll to the previous instance of 'deadline'", "solution": "\ntap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\nset_text($search_text, 'milestone')\ntap($next_matchhed_text)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\ntap($close_search_box)\n"}
{"task": "Switch to the next item in the checklist, add a new checklist item titled 'Call mom', and then show the content of the first checklist item", "solution": "tap($switch_to_next_item)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call mom')\ntap($add_checklist_item_ok)\ntap($checklist_item_list[0])"}
{"task": "Open the settings menu from the main screen and set the theme color of the app to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()"}
{"task": "Open the settings menu from the main screen, customize the app colors, and then set the theme color of the app to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\nback()"}
{"task": "Enable auto light/dark theme for the app after opening the settings menu from the main screen", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\nback()"}
{"task": "Access more options for the current note and then set the theme color of the app to dark from the settings menu", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()\nback()"}
{"task": "Export the current note as a file, attach the file to an email, and send it to 'john.doe@example.com'", "solution": "tap($more_options_note)\ntap($more_options_note.match('Export as file'))\nopen_file = $files[0]\ntap(open_file)\ntap($save_as_file)\ntap($save_button)\ntap($email_button)\nset_text($email_to_input, 'john.doe@example.com')\ntap($send_email_button)"}
{"task": "Print the current checklist, then export the current checklist as a file, and share the file via Slack with 'team_channel'", "solution": "tap($more_options_checklist)\ntap($more_options_checklist.match('Print'))\ntap($more_options_checklist)\ntap($more_options_checklist.match('Export as file'))\nopen_file = $files[0]\ntap(open_file)\ntap($save_as_file)\ntap($save_button)\ntap($slack_button)\nset_text($slack_channel_input, 'team_channel')\ntap($send_slack_button)"}
{"task": "Tap on the 'more options' button for the current note, export the current note as a file, and then share the file via WhatsApp with 'Jane Doe'", "solution": "tap($more_options_note)\ntap($more_options_note.match('Export as file'))\nopen_file = $files[0]\ntap(open_file)\ntap($save_as_file)\ntap($save_button)\ntap($whatsapp_button)\nset_text($whatsapp_contact_input, 'Jane Doe')\ntap($send_whatsapp_button)"}
{"task": "Sort the items of the current checklist by Custom and then confirm the sort type of the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_by_custom)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings of the app, scroll the settings page, and then go back from the settings page", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\nback()"}
{"task": "Open the existing note, create a shortcut for the current note titled 'Important', and view more options for the current note.", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nfor i in range(len(open_notes)):\n    if get_text(open_notes[i]) == 'Important':\n        tap(open_notes[i])\n        break\ntap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)"}
{"task": "Create a new checklist note titled 'Groceries', add items 'milk', 'bread', 'eggs', and view more options for the current checklist.", "solution": "tap($create_note)\nset_text($add_note_title, 'Groceries')\ntap($checklist_type)\ntap($add_note_ok)\nitems = ['milk', 'bread', 'eggs']\nfor item in items:\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, item)\n    tap($add_checklist_item_ok)\ntap($more_options_checklist)"}
{"task": "Open more options for the current checklist and switch to the next checklist", "solution": "tap($more_options_checklist)\ntap($switch_to_next_item)"}
{"task": "Scroll to the next item, then navigate to the previous note", "solution": "scroll($switch_item, 'down')\ntap($switch_to_prev_item)"}
{"task": "Show me the more options for the current checklist and tell me the title of the current item", "solution": "tap($more_options_checklist)\ncurrent_title = get_text($item_title)\nprint(current_title)"}
{"task": "Switch to the next note, show the title of the current note, and list all checklist items.", "solution": "tap($switch_to_next_item)\ncurrent_title = get_text($item_title)\nchecklist_items = [get_text(item) for item in $checklist_item_list]\nprint(f'Title: {current_title}')\nprint(f'Checklist Items: {checklist_items}')"}
{"task": "Show the content of checklist item 3 in the current note, then switch to the previous note, and show the title of the current note.", "solution": "long_tap($checklist_item_list[2])\ntap($switch_to_prev_item)\ncurrent_title = get_text($item_title)\nprint(f'Title: {current_title}')"}
{"task": "Add a new checklist item 'Buy groceries' to the current note, then switch to the next note, and show the content of checklist item 3.", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)\ntap($switch_to_next_item)\nprint(get_text($checklist_item_list[2]))"}
{"task": "Switch to the previous note, show the title of the current note, and add a new checklist item 'Schedule dentist appointment'.", "solution": "tap($switch_to_prev_item)\ncurrent_title = get_text($item_title)\nprint(f'Title: {current_title}')\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Schedule dentist appointment')\ntap($add_checklist_item_ok)"}
{"task": "List all checklist items in the current note, then switch to the previous note, and list all checklist items in that note.", "solution": "current_checklist_items = [get_text(item) for item in $checklist_item_list]\nprint(f'Current Checklist Items: {current_checklist_items}')\ntap($switch_to_prev_item)\nprevious_checklist_items = [get_text(item) for item in $checklist_item_list]\nprint(f'Previous Checklist Items: {previous_checklist_items}')"}
{"task": "Insert the date 'October 5, 2023' at the beginning of the note content, then add a list of tasks: '1. Buy groceries, 2. Finish report, 3. Call mom'", "solution": "tap($note_content)\nset_text($note_content, 'October 5, 2023\\n1. Buy groceries\\n2. Finish report\\n3. Call mom')"}
{"task": "Tap the 'more options' button on the current note, then change the font size of the note content to large", "solution": "tap($more_options_note)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Edit the content in the note by typing 'Meeting notes: Discuss project updates and timelines', then highlight the text 'project updates and timelines' in the note", "solution": "tap($note_content)\nset_text($note_content, 'Meeting notes: Discuss project updates and timelines')\ntap($search_within_note)\nset_text($search_text, 'project updates and timelines')\ntap($prev_matched_text)"}
{"task": "Long tap the note content to select text for copying, then delete all text in the current note", "solution": "long_tap($note_content)\nset_text($note_content, '')"}
{"task": "Insert the date 'October 5, 2023' at the beginning of the note content, then edit the content in the note by typing 'Client follow-up details'", "solution": "tap($note_content)\nset_text($note_content, 'October 5, 2023\\nClient follow-up details')"}
{"task": "Search within the current note for the text 'deadline' and scroll to the previous matching text for '2023 Q4 goals' within the current note.", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\nset_text($search_text, '2023 Q4 goals')\ntap($prev_matched_text)"}
{"task": "Edit the content of the current note to add 'Project update: All tasks on track' and then tap the 'more options' button.", "solution": "set_text($note_content, get_text($note_content) + '\\nProject update: All tasks on track')\ntap($more_options_note)"}
{"task": "Tap the 'more options' button, search within the current note for the text 'deadline', and add a new paragraph stating 'Project update: All tasks on track'.", "solution": "tap($more_options_note)\ntap($search_within_note)\nset_text($search_text, 'deadline')\nset_text($note_content, get_text($note_content) + '\\nProject update: All tasks on track')"}
{"task": "Search within the current note for the text 'deadline', tap the 'more options' button for the current note, and edit the content to add 'Meeting agenda for tomorrow'.", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($more_options_note)\nset_text($note_content, get_text($note_content) + '\\nMeeting agenda for tomorrow')"}
{"task": "Scroll to the previous matching text for '2023 Q4 goals', then search within the current note for the text 'deadline', and add a new paragraph stating 'Project update: All tasks on track'.", "solution": "tap($prev_matched_text)\ntap($search_within_note)\nset_text($search_text, 'deadline')\nset_text($note_content, get_text($note_content) + '\\nProject update: All tasks on track')"}
{"task": "Customize the app colors and then enable auto light/dark theme for the app through the settings menu", "solution": "tap($settings)\ntap($set_colors)\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)"}
{"task": "Open the settings menu from the main screen, set the theme color of the app to dark, and then access more options for the current checklist", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()\ntap($switch_to_next_item)\ntap($more_options_checklist)"}
{"task": "Open the settings menu from the main screen, customize the app colors, and then access more options for the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($save_set_colors)\nback()\ntap($switch_to_prev_item)\ntap($more_options_note)"}
{"task": "Set the theme color of the app to light and then access more options for the current checklist", "solution": "tap($set_theme_color)\ntap($theme_color_light)\nback()\ntap($switch_to_next_item)\ntap($more_options_checklist)"}
{"task": "Open the more options menu for the current note and then customize the colors of the app by setting the theme color to blue", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($theme_color_custom)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Switch to the next checklist, then switch back to the previous note", "solution": "tap($switch_to_next_item)\ntap($switch_to_prev_item)"}
{"task": "Navigate to the next note and scroll to the previous item", "solution": "tap($switch_to_next_item)\ntap($switch_to_prev_item)"}
{"task": "Tell me the title of the current item and open more options in the current checklist", "solution": "title = get_text($item_title)\ntap($more_options_checklist)\ntitle"}
{"task": "Switch to the previous note and show me the more options for the current checklist", "solution": "tap($switch_to_prev_item)\ntap($more_options_checklist)"}
{"task": "Scroll to the previous item and tell me the title of the current item shown", "solution": "scroll($switch_item, 'up')\ntitle = get_text($item_title)\ntitle"}
{"task": "Open more options of the current checklist and sort the items of the current checklist by Custom", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match({'custom'}))\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings of the app, confirm the sort type of the current checklist, then go back from the settings page", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($sort_checklist_items_ok)\ntap($exit_settings)"}
{"task": "Open more options of the current note, access the settings of the app, and scroll the settings page", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Sort the items of the current checklist by Custom, confirm the sort type, then open more options of the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match({'custom'}))\ntap($sort_checklist_items_ok)\ntap($more_options_note)"}
{"task": "Open more options of the current checklist, open more options of the current note, and then access the settings of the app", "solution": "tap($more_options_checklist)\ntap($more_options_note)\ntap($settings)"}
{"task": "Create a new note titled 'Work Tasks', add a checklist item 'Send Email to Client', add another checklist item 'Prepare Presentation', and complete the note by tapping 'OK'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Work Tasks')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Send Email to Client')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Prepare Presentation')\ntap($add_checklist_item_ok)"}
{"task": "Open 'Meeting Notes' by tapping 'Open Note', then add a checklist item 'Send Follow-up Email'.", "solution": "tap($open_note)\nelement_list = $open_note_title_list\nmeeting_notes = element_list.match('Meeting Notes')\ntap(meeting_notes[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Send Follow-up Email')\ntap($add_checklist_item_ok)"}
{"task": "Scroll through the list of existing notes to find 'Travel Itinerary', open 'Travel Itinerary' by tapping 'Open Note', then add a checklist item 'Book Hotel in Paris'.", "solution": "tap($open_note)\nnote_list = $open_note_title_list\nwhile len(note_list.match('Travel Itinerary')) == 0:\n    scroll($open_note_title_list, 'down')\n    note_list = $open_note_title_list\ntope = note_list.match('Travel Itinerary')[0]\ntap(tope)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Book Hotel in Paris')\ntap($add_checklist_item_ok)"}
{"task": "Open the 'Meeting Notes' note and add a bullet point 'Discuss Q3 targets'.", "solution": "tap($open_note)\nmeeting_notes = $open_note_title_list.match('Meeting Notes')\ntap(meeting_notes[0])\nlong_tap($checklist_item)\nset_text($note_content, '\u2022 Discuss Q3 targets\\n')\ntap($save_note)"}
{"task": "Create a new note titled 'Shopping List' with a checklist and add items 'Milk', 'Eggs', and 'Bread'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Eggs')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)"}
{"task": "Open the note titled 'Daily Journal', scroll to the previous instance of 'expenses', and add the text 'Reminder: Buy groceries' at the beginning", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nidx = -1\nfor i, title in enumerate(note_titles):\n    if get_text(title) == 'Daily Journal':\n        idx = i\n        break\ntap(note_titles[idx])\ntap($search_within_note)\nset_text($search_text, 'expenses')\nwhile True:\n    tap($prev_matched_text)\n    if get_attributes($prev_matched_text)['selected']:\n        break\nback()\nset_text($note_content, 'Reminder: Buy groceries ' + get_text($note_content))\ntap($save_note)"}
{"task": "Create a new checklist note with the title 'Project Tasks' and add items 'Design Website', 'Develop Backend', and 'Test Application'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Tasks')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Design Website')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Develop Backend')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Test Application')\ntap($add_checklist_item_ok)"}
{"task": "Add a new note with the title 'Groceries List' and include 'Milk', 'Bread', 'Eggs', 'Butter'", "solution": "tap($create_note)\nset_text($add_note_title, 'Groceries List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Eggs')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Butter')\ntap($add_checklist_item_ok)"}
{"task": "Create a new text note titled 'Daily Journal' with an entry 'Today, I went for a 5-mile run and worked on my new coding project.'", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Today, I went for a 5-mile run and worked on my new coding project.')\ntap($save_note)"}
{"task": "Open a note titled 'Meeting Notes', search for 'budget discussion' within the current note, and close the search box", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nidx = -1\nfor i, title in enumerate(note_titles):\n    if get_text(title) == 'Meeting Notes':\n        idx = i\n        break\ntap(note_titles[idx])\ntap($search_within_note)\nset_text($search_text, 'budget discussion')\nback()"}
{"task": "Add a new checklist item 'Call with client at 3 PM' to the current note, then switch to the next note, and list all checklist items.", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call with client at 3 PM')\ntap($add_checklist_item_ok)\ntap($switch_to_next_item)\nchecklist_items = $checklist_item_list\n[item.get_text() for item in checklist_items]"}
{"task": "Switch to the next note, list all checklist items, then add a new checklist item 'Finish monthly report'.", "solution": "tap($switch_to_next_item)\nchecklist_items = $checklist_item_list\n[item.get_text() for item in checklist_items]\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Finish monthly report')\ntap($add_checklist_item_ok)"}
{"task": "Export the note 'Shopping List' as a file and then print the note titled 'Meeting Minutes'.", "solution": "tap($open_note)\nopen_notes = $open_note_title_list.match('Shopping List')\ntap(open_notes[0])\ntap($more_options_note)\ntap($export_as_file)\ntap($open_note)\nopen_notes = $open_note_title_list.match('Meeting Minutes')\ntap(open_notes[0])\ntap($more_options_note)\ntap($print_note)"}
{"task": "Delete the checklist 'Completed Tasks' and then export the checklist 'Daily Tasks' as a file.", "solution": "tap($open_note)\nopen_notes = $open_note_title_list.match('Completed Tasks')\ntap(open_notes[0])\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\ntap($open_note)\nopen_notes = $open_note_title_list.match('Daily Tasks')\ntap(open_notes[0])\ntap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Open the app settings from the note 'Journal Entry' and then delete the note 'Old Recipes'.", "solution": "tap($open_note)\nopen_notes = $open_note_title_list.match('Journal Entry')\ntap(open_notes[0])\ntap($more_options_note)\ntap($settings)\ntap($exit_settings)\ntap($open_note)\nopen_notes = $open_note_title_list.match('Old Recipes')\ntap(open_notes[0])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Scroll through the content in the note to review previous entries, then tap twice on 'meeting notes' to select and bold it", "solution": "\nscroll($note_content, 'up')\nscroll($note_content, 'up')\ntap($note_content)\ntap($note_content)\ntap($note_content)\n"}
{"task": "Tap the 'more options' button on the current note, then long tap the note content to select text for copying", "solution": "\ntap($more_options_note)\nlong_tap($note_content)\n"}
{"task": "Open the more options menu of the current note, then change the font size of the app to 75%", "solution": "\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()\n"}
{"task": "Check the current font size of the app, then access the font size settings, and change the font size of the app to 90%", "solution": "\ntap($settings)\ntext = get_text($current_font_size)\ntap($current_font_size)\ntap($font_size_90%)\nback()\n"}
{"task": "Open the Settings menu, then access the font size settings, and change the font size of the app to 75%", "solution": "\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()\n"}
{"task": "Confirm the sort type of the current checklist, go back from the settings page, and then scroll the settings page.", "solution": "tap($sort_checklist_items_ok)\nback()\nscroll($scroll_settings_page, 'down')"}
{"task": "Open the more options menu for the current note and set the font size to 75% in the Notes app", "solution": "tap($more_options_note)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Open the settings of the Notes app and show the current font size in the Notes app", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_font_size = get_text($current_font_size)\nprint(current_font_size)"}
{"task": "Open the more options menu for the current checklist and set the font size to 60% in the Notes app", "solution": "tap($more_options_checklist)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Open the settings of the Notes app and set the font size to 50% and then show the current font size in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)\ntap($current_font_size)\ncurrent_font_size = get_text($current_font_size)\nprint(current_font_size)"}
{"task": "Open the app settings and set the text color to black and the background color to white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_black_white.match({\"selected\": false})[0])\nback()\ntap($set_background_color)\ntap($theme_color_white.match({\"selected\": false})[0])\nback()\ntap($save_set_colors)\n"}
{"task": "Open the more options menu for the current checklist and set the primary color of the app to green", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_custom.match({\"selected\": false})[0])\nback()\n# Assuming green is set as custom\nback()\ntap($save_set_colors)\n"}
{"task": "Open the more options menu for the current note, open the app settings, and then customize the colors to set the theme color to dark mode", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark.match({\"selected\": false})[0])\nback()\ntap($save_set_colors)\n"}
{"task": "Open the app settings, set the text color to dark gray, and the primary color to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_dark_red.match({\"selected\": false})[0])\nback()\ntap($set_primary_color)\ntap($theme_color_red.match({\"selected\": false})[0])\nback()\ntap($save_set_colors)\n"}
{"task": "Customize the colors of the app by setting the theme color to dark blue, the text color to white, and the background color to dark gray", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom.match({\"selected\": false})[0])\n# Assuming dark blue\nback()\ntap($set_text_color)\ntap($theme_color_white.match({\"selected\": false})[0])\nback()\ntap($set_background_color)\ntap($theme_color_black_white.match({\"selected\": false})[0])\n# Assuming dark gray is black & white\nback()\ntap($save_set_colors)\n"}
{"task": "Tap the 'more options' button, add a new paragraph stating 'Project update: All tasks on track', and search within the current note for the text 'deadline'.", "solution": "tap($more_options_note)\nset_text($note_content, get_text($note_content) + '\\nProject update: All tasks on track')\ntap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Edit the content of the current note to add 'Meeting agenda for tomorrow', tap the 'more options' button, and scroll to the previous matching text for '2023 Q4 goals' within the current note.", "solution": "set_text($note_content, get_text($note_content) + 'Meeting agenda for tomorrow')\ntap($more_options_note)\ntap($search_within_note)\nset_text($search_text, '2023 Q4 goals')\ntap($prev_matched_text)"}
{"task": "Lock my 'Holiday plans' note, then create a shortcut for it, and finally open the file of my 'Meeting minutes' note", "solution": "tap($open_note)\n$open_note_title_list.match('Holiday plans')[0].tap()\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($create_shortcut)\ntap($open_note)\n$open_note_title_list.match('Meeting minutes')[0].tap()\ntap($more_options_note)\ntap($open_file)"}
{"task": "Create a shortcut for my 'Shopping checklist', lock it, and then export it as a file", "solution": "tap($open_note)\n$open_note_title_list.match('Shopping checklist')[0].tap()\ntap($more_options_checklist)\ntap($create_shortcut)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Export the 'Travel itinerary' note as a file, print the 'Class schedule' note, and then delete my 'Old recipes' note", "solution": "tap($open_note)\n$open_note_title_list.match('Travel itinerary')[0].tap()\ntap($more_options_note)\ntap($export_as_file)\ntap($open_note)\n$open_note_title_list.match('Class schedule')[0].tap()\ntap($more_options_note)\ntap($print_note)\ntap($open_note)\n$open_note_title_list.match('Old recipes')[0].tap()\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the note titled 'Grocery List' and move the selected item 'Buy milk' to the bottom of the checklist", "solution": "tap($open_note)\n$open_note_title_list.match('Grocery List')[0].tap()\nlong_tap($checklist_item_list.match('Buy milk')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Open the note titled 'Grocery List', rename the selected checklist item 'Buy eggs' to 'Buy organic eggs', and then move it to the bottom of the checklist", "solution": "tap($open_note)\n$open_note_title_list.match('Grocery List')[0].tap()\nlong_tap($checklist_item_list.match('Buy eggs')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy organic eggs')\ntap($rename_ok)\nlong_tap($checklist_item_list.match({'checked': False, 'text': 'Buy organic eggs'})[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Open the note titled 'Grocery List', delete the selected checklist item 'Call the doctor', and then rename the selected checklist item 'Buy eggs' to 'Buy farm-fresh eggs'", "solution": "tap($open_note)\n$open_note_title_list.match('Grocery List')[0].tap()\nlong_tap($checklist_item_list.match('Call the doctor')[0])\ntap($delete_selected_checklist_item)\nlong_tap($checklist_item_list.match('Buy eggs')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy farm-fresh eggs')\ntap($rename_ok)"}
{"task": "Open the note titled 'Grocery List', move the selected item 'Buy milk' to the bottom, rename the selected checklist item 'Buy eggs' to 'Buy cage-free eggs', and then delete the item 'Call the doctor'", "solution": "tap($open_note)\n$open_note_title_list.match('Grocery List')[0].tap()\nlong_tap($checklist_item_list.match('Buy milk')[0])\ntap($move_selected_item_to_the_buttom)\nlong_tap($checklist_item_list.match('Buy eggs')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy cage-free eggs')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Call the doctor')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Open the note titled 'Meeting Notes', then open the note titled 'Grocery List', and move the selected item 'Buy milk' to the bottom of the checklist", "solution": "tap($open_note)\n$open_note_title_list.match('Meeting Notes')[0].tap()\nback()\ntap($open_note)\n$open_note_title_list.match('Grocery List')[0].tap()\nlong_tap($checklist_item_list.match('Buy milk')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Open the more options menu of the current checklist, then open the Settings menu, and change the font size of the app to 90%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Check the current font size of the app, then open the more options menu of the current note", "solution": "tap($settings)\ntap($set_font_size)\ncurrent_font_size = get_text($current_font_size)\nback()\nback()\ntap($more_options_note)\n"}
{"task": "Open the more options menu of the current checklist, then change the font size of the app to 90%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Access the font size settings, then change the font size of the app to 75%, and check the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ncurrent_font_size = get_text($current_font_size)\nback()"}
{"task": "Open the Settings menu, then access the font size settings, and change the font size of the app to 90%, then check the current font size of the app.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\ncurrent_font_size = get_text($current_font_size)\nback()"}
{"task": "Add a new note titled 'Vacation Packing List', include sections 'Clothes', 'Toiletries', and 'Gadgets' with appropriate bullet points.", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Packing List')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Clothes:\\n- Shirts\\n- Pants\\n- Socks\\n- Shoes\\n\\nToiletries:\\n- Toothbrush\\n- Toothpaste\\n- Shampoo\\n- Conditioner\\n\\nGadgets:\\n- Phone\\n- Charger\\n- Headphones\\n- Power bank')\ntap($save_note)"}
{"task": "Confirm the new note titled 'Daily Journal' and add today's entry: 'Learned JSON formatting'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Learned JSON formatting')\ntap($save_note)"}
{"task": "Open the 'Project Ideas' note, add a new idea titled 'Mobile App for Fitness Tracking' and include details: 'Features: Step Counter, Calorie Tracker'.", "solution": "tap($open_note)\nnotes_titles = $open_note_title_list\nnotes_titles.match('Project Ideas')[0].tap()\nset_text($note_content, get_text($note_content) + '\\n\\nMobile App for Fitness Tracking\\nFeatures:\\n- Step Counter\\n- Calorie Tracker')\ntap($save_note)"}
{"task": "Create a new note titled 'Work Tasks' with a checklist; add tasks: 'Send report to Bob', 'Call Alice regarding Q2 plans'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Work Tasks')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Send report to Bob')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call Alice regarding Q2 plans')\ntap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Open 'Meeting Notes', add action items 'Schedule follow-up call', 'Email meeting minutes'.", "solution": "tap($open_note)\nnotes_titles = $open_note_title_list\nnotes_titles.match('Meeting Notes')[0].tap()\nset_text($note_content, get_text($note_content) + '\\n\\nAction Items:\\n- Schedule follow-up call\\n- Email meeting minutes')\ntap($save_note)"}
{"task": "Open the more options menu for the current note, open the settings of the Notes app, and set the font size to 90%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Open the more options menu for the current checklist, then open the settings of the Notes app, and set the font size to 75%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()"}
{"task": "Open the more options menu for the current note, set the font size to 60%, and then show the current font size in the Notes app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_60%)\nget_text($current_font_size)\nback()"}
{"task": "Set the font size to 90% in the Notes app, then open the more options menu for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()\ntap($more_options_checklist)"}
{"task": "Sort the checklist items by 'Title' and then confirm by tapping 'OK'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu for the current note, set the background color of the app to light blue, and customize the primary color to yellow", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\ntap(<light_blue_checkbox>)\ntap($set_primary_color)\ntap(<yellow_checkbox>)\ntap($save_set_colors)\nback()"}
{"task": "Set the theme color of the app to light mode, then open the more options menu for the current checklist and set the text color to dark blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\nback()\ntap($more_options_checklist)\ntap($set_colors)\ntap($set_text_color)\ntap(<dark_blue_checkbox>)\ntap($save_set_colors)\nback()"}
{"task": "Open the settings of the app and set the font size to 60% then return to the main screen", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)\nback()"}
{"task": "Open the more options for the current note and duplicate it, then set the font size of the app to 100%", "solution": "tap($more_options_note)\ntap($duplicate_note_button)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Open the settings and change the font size to 90%, then open the more options for the current checklist and delete it", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()\ntap($more_options_checklist)\ntap($delete_note)"}
{"task": "Add a new note with the title 'Travel Itinerary' and include 'Flight details: flight number A123, 10 AM, Gate 4B', 'Hotel reservation: Grand Plaza, 3 nights'", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Itinerary')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Flight details: flight number A123, 10 AM, Gate 4B\\nHotel reservation: Grand Plaza, 3 nights')\ntap($save_note)"}
{"task": "Create a new text note titled 'Workout Plan' and detail 'Monday: Chest and Triceps, Tuesday: Back and Biceps, Wednesday: Legs and Abs'", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Plan')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Monday: Chest and Triceps\\nTuesday: Back and Biceps\\nWednesday: Legs and Abs')\ntap($save_note)"}
{"task": "Open a note titled 'Conference Plan', search for 'keynote speaker', close the search box, and update the end time to '3:00 PM'", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nconference_plan_note = open_note_title_list.match('Conference Plan')[0]\ntap(conference_plan_note)\ntap($search_within_note)\nset_text($search_text, 'keynote speaker')\ntap($close_search_box)\nset_text($note_content, get_text($note_content) + '\\nEnd time: 3:00 PM')\ntap($save_note)"}
{"task": "Add a new note with the title 'Birthday Gift Ideas' and list 'Book: Atomic Habits, Watch: Apple Watch, Experience: Spa Day'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Birthday Gift Ideas')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Book: Atomic Habits\\nWatch: Apple Watch\\nExperience: Spa Day')\ntap($save_note)"}
{"task": "Search for the word 'meeting' within the current note, then find the next occurrence of 'deadline' and locate the previous instance of 'attachment'.", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\ntap($prev_matched_text)\nset_text($search_text, 'attachment')\ntap($prev_matched_text)\ntap($close_search_box)"}
{"task": "Lock my 'Work project' note, then open the file of my 'Weekly tasks' checklist, and create a shortcut for my 'Holiday plans' note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Work project')[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\nback()\ntap($open_note_title_list.match('Weekly tasks')[0])\ntap($more_options_checklist)\ntap($open_file)\nback()\ntap($open_note_title_list.match('Holiday plans')[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Create a shortcut for my 'Shopping checklist', print my 'Home maintenance checklist', then lock my 'Grocery list' checklist", "solution": "tap($open_note)\ntap($open_note_title_list.match('Shopping checklist')[0])\ntap($more_options_checklist)\ntap($create_shortcut)\nback()\ntap($open_note_title_list.match('Home maintenance checklist')[0])\ntap($more_options_checklist)\ntap($print_note)\nback()\ntap($open_note_title_list.match('Grocery list')[0])\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Lock my 'Grocery list' checklist, export the 'Books to read' checklist as a file, and delete my 'Christmas shopping checklist'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery list')[0])\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\nback()\ntap($open_note_title_list.match('Books to read')[0])\ntap($more_options_checklist)\ntap($export_as_file)\nback()\ntap($open_note_title_list.match('Christmas shopping checklist')[0])\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Print my 'Class schedule' note, then open the file of my 'Meeting minutes' note, and create a shortcut for my 'Holiday plans' note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Class schedule')[0])\ntap($more_options_note)\ntap($print_note)\nback()\ntap($open_note_title_list.match('Meeting minutes')[0])\ntap($more_options_note)\ntap($open_file)\nback()\ntap($open_note_title_list.match('Holiday plans')[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Export the 'Travel itinerary' note as a file, print my 'Home maintenance checklist', and then lock my 'Work project' note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Travel itinerary')[0])\ntap($more_options_note)\ntap($export_as_file)\nback()\ntap($open_note_title_list.match('Home maintenance checklist')[0])\ntap($more_options_checklist)\ntap($print_note)\nback()\ntap($open_note_title_list.match('Work project')[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the note titled 'Meeting Notes', then go back and open the note titled 'Grocery List' and rename the selected checklist item 'Buy eggs' to 'Buy free-range eggs'", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nmeeting_notes = open_notes.match('Meeting Notes')[0]\ntap(meeting_notes)\nback()\ntap($open_note)\ngrocery_list = open_notes.match('Grocery List')[0]\ntap(grocery_list)\nlong_tap($checklist_item_list.match('Buy eggs')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy free-range eggs')\ntap($rename_ok)"}
{"task": "Open the note titled 'Grocery List', delete the selected checklist item 'Call the doctor', and then rename the selected checklist item 'Buy milk' to 'Purchase milk'", "solution": "tap($open_note)\ngrocery_list = $open_note_title_list.match('Grocery List')[0]\ntap(grocery_list)\nlong_tap($checklist_item_list.match('Call the doctor')[0])\ntap($delete_selected_checklist_item)\nlong_tap($checklist_item_list.match('Buy milk')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase milk')\ntap($rename_ok)"}
{"task": "Open the note titled 'Meeting Notes', delete the selected checklist item 'Call the doctor' from 'Grocery List', and rename 'Buy eggs' to 'Buy brown eggs' in 'Grocery List'.", "solution": "tap($open_note)\nmeeting_notes = $open_note_title_list.match('Meeting Notes')[0]\ntap(meeting_notes)\nback()\ntap($open_note)\ngrocery_list = $open_note_title_list.match('Grocery List')[0]\ntap(grocery_list)\nlong_tap($checklist_item_list.match('Call the doctor')[0])\ntap($delete_selected_checklist_item)\nlong_tap($checklist_item_list.match('Buy eggs')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy brown eggs')\ntap($rename_ok)"}
{"task": "Open the settings of the Notes app, then show the information of the Notes app", "solution": "tap($more_options_note)\ntap($settings)\ntap($about)"}
{"task": "Rename the current note to 'Grocery List' and then open the settings of the Notes app", "solution": "tap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Add a new note titled 'Event Planning', create subsections 'Venue Options', 'Catering Services', 'Guest List', each with detailed bullet points.", "solution": "tap($create_note)\nset_text($add_note_title, 'Event Planning')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Venue Options:\\n- Option 1\\n- Option 2\\n\\nCatering Services:\\n- Service 1\\n- Service 2\\n\\nGuest List:\\n- Guest 1\\n- Guest 2')\ntap($save_note)"}
{"task": "Add a new checklist item with the text 'Buy milk' and then add a new checklist item with the text 'Complete homework'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Complete homework')\ntap($add_checklist_item_ok)"}
{"task": "Check the checklist item with the text 'Buy milk' and then uncheck the checklist item with the text 'Complete homework'", "solution": "tap($checklist_item_list.match('Buy milk')[0])\ntap($checklist_item_list.match('Complete homework')[0])"}
{"task": "Delete the checklist item with the text 'Buy milk' and then add a new checklist item with the text 'Call mom'", "solution": "long_tap($checklist_item_list.match('Buy milk')[0])\ntap($delete_selected_checklist_item)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call mom')\ntap($add_checklist_item_ok)"}
{"task": "Move the checklist item 'Call mom' to the bottom of the list and then add a new checklist item with the text 'Doctor appointment' at the top of the list", "solution": "long_tap($checklist_item_list.match('Call mom')[0])\ntap($move_selected_item_to_the_buttom)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Doctor appointment')\ntap($add_to_the_top)\ntap($add_checklist_item_ok)"}
{"task": "Print the checklist 'Project Checklist' and then export the note 'Shopping List' as a file.", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Project Checklist')[0]\ntap(note_to_open)\ntap($more_options_checklist)\nmore_options = $more_options_checklist_buttons\nprint_button = more_options.match('print')[0]\ntap(print_button)\ntap($open_note)\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Shopping List')[0]\ntap(note_to_open)\ntap($more_options_note)\nmore_options = $more_options_note_buttons\nexport_button = more_options.match('export as file')[0]\ntap(export_button)"}
{"task": "Delete the note 'Old Recipes' and print the note titled 'Meeting Minutes'.", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Old Recipes')[0]\ntap(note_to_open)\ntap($more_options_note)\nmore_options = $more_options_note_buttons\ndelete_button = more_options.match('delete note')[0]\ntap(delete_button)\ntap($delete_note_ok)\nback()\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Meeting Minutes')[0]\ntap(note_to_open)\ntap($more_options_note)\nmore_options = $more_options_note_buttons\nprint_button = more_options.match('print')[0]\ntap(print_button)"}
{"task": "Export the note 'Shopping List' as a file and open the app settings from the checklist 'House Cleaning Schedule'.", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Shopping List')[0]\ntap(note_to_open)\ntap($more_options_note)\nmore_options = $more_options_note_buttons\nexport_button = more_options.match('export as file')[0]\ntap(export_button)\nback()\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('House Cleaning Schedule')[0]\ntap(note_to_open)\ntap($more_options_checklist)\nsettings_button = $more_options_checklist_buttons.match('settings')[0]\ntap(settings_button)"}
{"task": "Delete the checklist 'Completed Tasks' and print the checklist 'Project Checklist'.", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Completed Tasks')[0]\ntap(note_to_open)\ntap($more_options_checklist)\nmore_options = $more_options_checklist_buttons\ndelete_button = more_options.match('delete note')[0]\ntap(delete_button)\ntap($delete_note_ok)\nback()\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Project Checklist')[0]\ntap(note_to_open)\ntap($more_options_checklist)\nmore_options = $more_options_checklist_buttons\nprint_button = more_options.match('print')[0]\ntap(print_button)"}
{"task": "Export the checklist 'Daily Tasks' as a file and then open the app settings from the note 'Journal Entry'.", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Daily Tasks')[0]\ntap(note_to_open)\ntap($more_options_checklist)\nmore_options = $more_options_checklist_buttons\nexport_button = more_options.match('export as file')[0]\ntap(export_button)\nback()\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Journal Entry')[0]\ntap(note_to_open)\ntap($more_options_note)\nsettings_button = $more_options_note_buttons.match('settings')[0]\ntap(settings_button)"}
{"task": "Open more options, then sort the checklist items by 'Date created', and confirm it by tapping 'OK'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Tap on 'more options', select 'Sort by', choose 'Custom', then confirm by tapping 'OK'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "First, tap on 'more options', afterwards tap on 'Sort by', then sort the list by 'Title', then tap 'OK' to confirm.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Tap 'more options', tap 'Sort by', choose 'Date created', then confirm the action by tapping 'OK'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "First tap 'more options', then tap 'Sort by', sort the checklist by 'Custom', and confirm by tapping 'OK'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current note and archive it, then set the font size of the app to 75%", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($exit_settings)"}
{"task": "Open the settings, set the font size to 75%, then open the more options for the current checklist and mark all items as complete", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($exit_settings)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Set the font size of the app to 100%, then open more options for the current note and lock it", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($exit_settings)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the settings of the app, set the font size to 90%, then open more options for the current checklist and add a new item 'Buy groceries'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\ntap($exit_settings)\ntap($more_options_checklist)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)"}
{"task": "Open the more options for the current note and change the status to 'In Progress', then open settings and set the font size to 100%.", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'In Progress')\ntap($rename_ok)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($exit_settings)"}
{"task": "Find the next occurrence of 'deadline' in the current note, then close the search box after finding 'budget'.", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Locate the previous instance of 'attachment' in the current note, then find the next occurrence of 'deadline' and close the search box after finding 'budget'.", "solution": "tap($search_within_note)\nset_text($search_text, 'attachment')\ntap($prev_matched_text)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Search for the word 'meeting' within the current note, then locate the previous instance of 'attachment' and find the next occurrence of 'deadline'.", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\nset_text($search_text, 'attachment')\ntap($prev_matched_text)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)"}
{"task": "Find the next occurrence of 'deadline' in the current note, then search for the word 'meeting' and close the search box after finding 'budget'.", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Locate the previous instance of 'attachment' in the current note, find the next occurrence of 'deadline', then search for the word 'meeting' and close the search box after finding 'budget'.", "solution": "tap($search_within_note)\nset_text($search_text, 'attachment')\ntap($prev_matched_text)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Open more options for the current note and enable the 'Use Incognito mode of keyboards' setting and the 'Show word count' option", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_show_word_count)"}
{"task": "Enable the 'Use Incognito mode of keyboards' setting, enable the 'Make links and emails clickable' setting, and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_make_links_and_emails_clickable)\nback()\ntap($more_options_checklist)"}
{"task": "Enable the use of monospaced font, then open more options for the current note and enable the 'Show word count' option", "solution": "tap($settings)\ntap($set_use_monospaced_font)\nback()\ntap($more_options_note)\ntap($settings)\ntap($set_show_word_count)"}
{"task": "Enable the 'Show word count' option, enable the 'Use Incognito mode of keyboards' setting, and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_show_word_count)\ntap($set_use_incognito_mode_of_keyboards)\nback()\ntap($more_options_checklist)"}
{"task": "Print the grocery list note and then delete the 'Meeting Notes' note", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if 'Grocery List' in get_text(open_note_titles[i]):\n        tap(open_note_titles[i])\n        break\ntap($more_options_note)\ntap($print_note)\nback()\ntap($open_note)\nfor i in range(len(open_note_titles)):\n    if 'Meeting Notes' in get_text(open_note_titles[i]):\n        tap(open_note_titles[i])\n        break\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Change the font size to 300%, then open the settings of the Notes app and verify the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('300%')[0])\ntap($settings)\ncurrent_font_size = get_text($current_font_size)\n"}
{"task": "Tap on the 'more options' button in the current note, adjust the font size to 250%, then switch it to 200% and show the current font size.", "solution": "tap($more_options_note)\ntap($set_font_size)\ntap($font_size_types.match('250%')[0])\ntap($set_font_size)\ntap($font_size_types.match('200%')[0])\ncurrent_font_size = get_text($current_font_size)\n"}
{"task": "Rename the current note to 'Meeting Agenda' and lock the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Agenda')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\n"}
{"task": "Open settings of the Notes app and then show information about the Notes app", "solution": "tap($settings)\ntap($about)\n"}
{"task": "Rename the current note to 'Vacation Plans', lock the note, and then delete the note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Vacation Plans')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\n"}
{"task": "Open the note titled 'Meeting Notes' and delete the checklist item titled 'Workout at 5 PM'", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nmeeting_notes = open_notes.match('Meeting Notes')[0]\ntap(meeting_notes)\nchecklist_items = $checklist_item_list\nworkout_item = checklist_items.match('Workout at 5 PM')[0]\nlong_tap(workout_item)\ntap($delete_selected_checklist_item)"}
{"task": "Show me the list of all checklist items and then delete the checklist item titled 'Buy groceries'", "solution": "checklist_items = $checklist_item_list\nfor item in checklist_items:\n    print(get_text(item))\nbuy_groceries_item = checklist_items.match('Buy groceries')[0]\nlong_tap(buy_groceries_item)\ntap($delete_selected_checklist_item)"}
{"task": "Open the note with the title 'Vacation Plans', add a new checklist item titled 'Book flights', and save the current note", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nvacation_plans = open_notes.match('Vacation Plans')[0]\ntap(vacation_plans)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Book flights')\ntap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Delete the checklist item titled 'Buy groceries', then open the note titled 'Meeting Notes' and save the current note", "solution": "checklist_items = $checklist_item_list\nbuy_groceries_item = checklist_items.match('Buy groceries')[0]\nlong_tap(buy_groceries_item)\ntap($delete_selected_checklist_item)\ntap($open_note)\nopen_notes = $open_note_title_list\nmeeting_notes = open_notes.match('Meeting Notes')[0]\ntap(meeting_notes)\ntap($save_note)"}
{"task": "Open the note titled 'Vacation Plans', delete the checklist item titled 'Workout at 5 PM', and show me the list of all checklist items", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nvacation_plans = open_notes.match('Vacation Plans')[0]\ntap(vacation_plans)\nchecklist_items = $checklist_item_list\nworkout_item = checklist_items.match('Workout at 5 PM')[0]\nlong_tap(workout_item)\ntap($delete_selected_checklist_item)\nfor item in checklist_items:\n    print(get_text(item))"}
{"task": "Show the information of the Notes app and then rename the current checklist to 'Work Tasks'", "solution": "tap($about)\ntap($back)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Work Tasks')\ntap($rename_ok)"}
{"task": "Rename the current note to 'Grocery List', show the information of the Notes app, and then open the settings of the Notes app", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($back)\ntap($about)\ntap($settings)"}
{"task": "Rename the current note to 'Grocery List' and rename the current checklist to 'Work Tasks'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Work Tasks')\ntap($rename_ok)"}
{"task": "Open the settings of the Notes app, then rename the current checklist to 'Work Tasks' and finally show the information of the Notes app", "solution": "tap($settings)\ntap($back)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Work Tasks')\ntap($rename_ok)\ntap($about)"}
{"task": "Show the information of the Notes app, rename the current note to 'Grocery List', and then open the settings of the Notes app", "solution": "tap($about)\ntap($back)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($settings)"}
{"task": "Open more options for the current note and set the font size to 75%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('75%')[0])"}
{"task": "Open the settings menu, then set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('125%')[0])"}
{"task": "Show the current font size, then set it to 100%", "solution": "tap($settings)\ntap($current_font_size)\nfont_size = get_text($current_font_size)\ntap($font_size_types.match('100%')[0])\nprint(font_size)"}
{"task": "Open more options for the current checklist and set the font size to 90%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('90%')[0])"}
{"task": "Open the settings menu and open more options for the current note", "solution": "tap($settings)\ntap($more_options_note)"}
{"task": "Open the more options menu in the current note and delete the current note, then confirm the deletion.", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the more options menu in the current checklist, remove all done items, and then sort the checklist items by title.", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu in the current checklist, sort the checklist items by date created, and remove all done items.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Open the more options menu in the current note, delete the current note, confirm the deletion, then create a new checklist and sort items by custom order.", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu in the current checklist, remove all done items, sort the checklist items by title, then sort them again by date created.", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Show the information of the Notes APP after opening the settings of the Notes APP", "solution": "tap($settings)\ntap($about)"}
{"task": "Delete the 'Meeting Notes' note and then print the grocery list note", "solution": "\ntap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Meeting Notes':\n        tap(note_titles[i])\n        tap($more_options_note)\n        tap($delete_note)\n        tap($delete_note_ok)\n        break\ntap($open_note)\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Grocery List':\n        tap(note_titles[i])\n        tap($more_options_note)\n        tap($print_note)\n        break"}
{"task": "Open the settings of the Notes APP, make sure the print option is enabled, and then print the grocery list note", "solution": "\ntap($settings)\nenable_print_option = True\nif enable_print_option:\n    tap($exit_settings)\ntap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Grocery List':\n        tap(note_titles[i])\n        tap($more_options_note)\n        tap($print_note)\n        break"}
{"task": "Show the information of the Notes APP after ensuring the 'Meeting Notes' note has been deleted", "solution": "\ntap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Meeting Notes':\n        tap(note_titles[i])\n        tap($more_options_note)\n        tap($delete_note)\n        tap($delete_note_ok)\n        break\ntap($settings)\ntap($about)"}
{"task": "Open the settings of the Notes APP, change the default font size to 14, and then show the information of the Notes APP", "solution": "\nenable_font_size_75 = True\nif enable_font_size_75:\n    tap($settings)\n    tap($set_font_size)\n    tap($font_size_75%)\ntap($save_set_colors)\ntap($about)"}
{"task": "Navigate to 'more options', select 'Sort by', choose 'Title', and tap 'OK' to set it.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match({'selected': false})[0])\ntap($sort_checklist_items_ok)"}
{"task": "Tap 'more options', tap 'Sort by', choose 'Date created' and then tap 'OK' to confirm.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match({'selected': false})[1])\ntap($sort_checklist_items_ok)"}
{"task": "Move the checklist item 'Read a Book' to the top of the list and rename it to 'Finish Book Chapter'", "solution": "long_tap($checklist_item_list.match('Read a Book')[0])\ntap($move_selected_item_to_the_top)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Finish Book Chapter')\ntap($rename_ok)"}
{"task": "Rename the checklist item 'Finish Report' to 'Complete Report' and move it to the bottom of the list", "solution": "long_tap($checklist_item_list.match('Finish Report')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Complete Report')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Complete Report')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Delete the checklist item 'Call Mom' and move 'Workout' to the top of the list", "solution": "long_tap($checklist_item_list.match('Call Mom')[0])\ntap($delete_selected_checklist_item)\nlong_tap($checklist_item_list.match('Workout')[0])\ntap($move_selected_item_to_the_top)"}
{"task": "Search for the word 'meeting' within the current note, find the next occurrence of 'deadline', locate the previous instance of 'attachment', and close the search box after finding 'budget'.", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\nset_text($search_text, 'attachment')\ntap($prev_matched_text)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Find the next occurrence of 'deadline' in the current note, locate the previous instance of 'attachment', search for the word 'meeting', and close the search box after finding 'budget'.", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\nset_text($search_text, 'attachment')\ntap($prev_matched_text)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Rename the note about the meeting to 'Team Meeting Notes' and then lock it", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Team Meeting Notes')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the checklist titled 'Grocery List' to 'Weekly Grocery List' and remove done items from it", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Grocery List':\n        tap(notes[i])\n        break\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Weekly Grocery List')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Lock the current note titled 'Personal Diary' and then rename it to 'Confidential Diary'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Personal Diary':\n        tap(notes[i])\n        break\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Confidential Diary')\ntap($rename_ok)"}
{"task": "Show information about the Notes app, then rename the current note to 'Book List'", "solution": "tap($about)\ntap($rename_note)\nset_text($rename_input, 'Book List')\ntap($rename_ok)"}
{"task": "Lock the current note and then delete the current note", "solution": "tap($lock_note)\ntap($lock_note_ok)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Rename the current note to 'Project Ideas' and then open settings of the Notes app", "solution": "tap($rename_note)\nset_text($rename_input, 'Project Ideas')\ntap($rename_ok)\ntap($settings)"}
{"task": "Delete the current note and then show information about the Notes app", "solution": "tap($delete_note)\ntap($delete_note_ok)\ntap($about)"}
{"task": "Open settings of the Notes app, rename the current note to 'Daily Tasks', and then lock the current note", "solution": "tap($settings)\nback()\ntap($rename_note)\nset_text($rename_input, 'Daily Tasks')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Show me the list of all checklist items, open the note titled 'Meeting Notes', and delete the checklist item titled 'Workout at 5 PM'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list.match('Meeting Notes')\ntap(open_note_titles[0])\nchecklist_items = $checklist_item_list\nall_titles = [get_text(item) for item in checklist_items]\ndelete_item = checklist_items.match('Workout at 5 PM')[0]\nlong_tap(delete_item)\ntap($delete_selected_checklist_item)\n"}
{"task": "Delete the checklist item titled 'Workout at 5 PM', then open the note with the title 'Vacation Plans' and save the current note", "solution": "checklist_items = $checklist_item_list\nopen_note_titles = $open_note_title_list.match('Vacation Plans')\ndelete_item = checklist_items.match('Workout at 5 PM')[0]\nlong_tap(delete_item)\ntap($delete_selected_checklist_item)\nback()\ntap($open_note)\ntap(open_note_titles[0])\nsave_note = $save_note\ntap(save_note)\n"}
{"task": "Open the note titled 'Meeting Notes', delete the checklist item titled 'Buy groceries', and then show me the list of all checklist items", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list.match('Meeting Notes')\ntap(open_note_titles[0])\nchecklist_items = $checklist_item_list\ndelete_item = checklist_items.match('Buy groceries')[0]\nlong_tap(delete_item)\ntap($delete_selected_checklist_item)\nall_titles = [get_text(item) for item in checklist_items]\nprint(all_titles)\n"}
{"task": "Export the current note as a PDF file and then print it", "solution": "tap($more_options_note)\ntap($export_as_file)\ntap($print_note)\n"}
{"task": "Open the file of the current checklist and delete it afterward", "solution": "tap($more_options_checklist)\ntap($open_file)\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\n"}
{"task": "Print the grocery list note, then delete the 'Meeting Notes' note, and finally open the settings of the Notes APP", "solution": "tap($open_note)\ntap($open_note_title_list.match('grocery list')[0])\ntext = get_text($note_content)\nprint(text)\nback()\ntap($open_note_title_list.match('Meeting Notes')[0])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\nback()\ntap($settings)"}
{"task": "Delete the 'Meeting Notes' note, print the grocery list note, and then show the information of the Notes APP", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\nback()\ntap($open_note_title_list.match('grocery list')[0])\ntext = get_text($note_content)\nprint(text)\nback()\ntap($more_options_note)\ntap($about)"}
{"task": "Open settings and customize the colors of the app, then set the theme to Dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()\nback()"}
{"task": "Open more options of the current note, then go to settings and choose the Black & White theme", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\nback()\nback()"}
{"task": "Open settings from the current note's more options, then customize the app colors and set the theme to Dark", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()\nback()"}
{"task": "Sort the checklist items by date created, then open the more options menu in the current checklist and remove all done items.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open the more options menu in the current note and delete the note, then create a new checklist, open the more options menu for the checklist, and sort the items by custom order.", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the checklist items by title, open the more options menu, and remove all done items.", "solution": "tap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Uncheck the third checklist item, then display all checklist items", "solution": "long_tap($checklist_item_list[2])\ntap($checklist_item_list[2])\nfor i in range(len($checklist_item_list)):\n    print(get_text($checklist_item_list[i]))"}
{"task": "Add a new checklist item 'Call the plumber', then sort checklist items alphabetically", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call the plumber')\ntap($add_checklist_item_ok)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Export the current checklist as a CSV file and save it to the Documents folder", "solution": "tap($more_options_checklist)\ntap($export_as_file)\nset_text($filename, 'current_checklist.csv')\ntap($save_to_folder)\nset_text($save_to_folder, 'Documents')\ntap($save_button)"}
{"task": "Print both the current note and the current checklist in one go", "solution": "tap($more_options_note)\ntap($print_note)\nback()\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Open the file of the current note, export it as a PDF, and email it to john@example.com", "solution": "tap($more_options_note)\ntap($open_file)\ntap($export_as_file)\nset_text($filename, 'current_note.pdf')\ntap($save_button)\nset_text($email_address, 'john@example.com')\ntap($send_button)"}
{"task": "Export the current note as a Markdown file, then delete it from the app", "solution": "tap($more_options_note)\ntap($export_as_file)\nset_text($filename, 'current_note.md')\ntap($save_button)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the file of the current checklist, print it, and then delete it", "solution": "tap($more_options_checklist)\ntap($open_file)\ntap($print_note)\nback()\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Show the current font size and then open the settings menu", "solution": "print(get_text($current_font_size))\ntap($settings)"}
{"task": "Open more options for the current note, then show the current font size and set it to 90%", "solution": "tap($more_options_note)\nprint(get_text($current_font_size))\ntap($font_size_90%)"}
{"task": "Open the settings menu, then show the current font size and set it to 100%.", "solution": "tap($settings)\nprint(get_text($current_font_size))\ntap($font_size_100%)"}
{"task": "Open the note titled 'Grocery List' and search for the word 'milk'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Grocery List':\n        tap(note_titles[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'milk')"}
{"task": "Save changes to my current note, then open the note titled 'Grocery List'", "solution": "tap($save_note)\ntap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Grocery List':\n        tap(note_titles[i])\n        break"}
{"task": "Open the settings of the app and set the theme color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'text': 'Blue'})[0])"}
{"task": "Customize the colors of the app, set the text color to black, and then save the customized colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\ntap($set_colors.match({'text': 'Black'})[0])\ntap($save_set_colors)"}
{"task": "Open the current note's more options and then open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app to set the theme color to dark mode, save the customized colors, and then close the color customization popup", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the more options for the current checklist and then customize the colors of the app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Rename the current checklist to 'Work Tasks', open the settings of the Notes app, and finally show the information of the Notes app.", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Work Tasks')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($settings)\ntap($about)"}
{"task": "Open the settings of the app and set the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Change the font size to 75% and then show the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($current_font_size)"}
{"task": "Open the more options for the current note and then set the font size to 60%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Open the settings of the app, set the font size to 75%, then open the more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($more_options_note)"}
{"task": "Delete the note named 'Old Recipe' and create a new note titled 'New Recipe'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nnotes_to_delete = notes.match('Old Recipe')\nif len(notes_to_delete) > 0:\n    tap(notes_to_delete[0])\n    tap($more_options_note)\n    tap($delete_note)\n    tap($delete_note_ok)\nback()\ntap($create_note)\nset_text($add_note_title, 'New Recipe')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Remove done items from the checklist called 'Work Tasks' and then rename it to 'Pending Work Tasks'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nchecklists = notes.match('Work Tasks')\nif len(checklists) > 0:\n    tap(checklists[0])\n    tap($more_options_checklist)\n    tap($remove_done_checklist_items)\n    tap($more_options_checklist)\n    tap($rename_note)\n    set_text($rename_input, 'Pending Work Tasks')\n    tap($rename_ok)\nback()"}
{"task": "Rename the note about the meeting to 'Team Meeting Notes', lock it, and then schedule a reminder for it tomorrow at 10 AM", "solution": "tap($open_note)\nnotes = $open_note_title_list\nmeeting_notes = notes.match('meeting')\nif len(meeting_notes) > 0:\n    tap(meeting_notes[0])\n    tap($more_options_note)\n    tap($rename_note)\n    set_text($rename_input, 'Team Meeting Notes')\n    tap($rename_ok)\n    tap($lock_note)\n    tap($lock_note_ok)\n# Assuming there is a feature to schedule reminders which isn't in listed elements."}
{"task": "Rename the checklist titled 'Grocery List' to 'Weekly Grocery List', remove done items from it, and share it with user 'john.doe@example.com'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nchecklists = notes.match('Grocery List')\nif len(checklists) > 0:\n    tap(checklists[0])\n    tap($more_options_checklist)\n    tap($rename_note)\n    set_text($rename_input, 'Weekly Grocery List')\n    tap($rename_ok)\n    tap($more_options_checklist)\n    tap($remove_done_checklist_items)\n    tap($more_options_checklist)\n    share_button = $more_option_checklist_buttons.match('share')[0]\n    tap(share_button)\n    set_text($share_text_input, 'john.doe@example.com')\n    tap($share_send_button)\nback()"}
{"task": "Lock the current note titled 'Personal Diary', rename it to 'Confidential Diary', and then move it to a folder named 'Private Notes'.", "solution": "tap($open_note)\nnotes = $open_note_title_list\npersonal_diary_note = notes.match('Personal Diary')\nif len(personal_diary_note) > 0:\n    tap(personal_diary_note[0])\n    tap($more_options_note)\n    tap($lock_note)\n    tap($lock_note_ok)\n    tap($rename_note)\n    set_text($rename_input, 'Confidential Diary')\n    tap($rename_ok)\n    tap($move_note_button)\n    folders = $folder_list.match('Private Notes')\n    if len(folders) > 0:\n        tap(folders[0])\nback()"}
{"task": "Move the checklist item 'Buy Groceries' to the top of the list and rename it to 'Grocery Shopping'", "solution": "long_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($move_selected_item_to_the_top)\nlong_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Grocery Shopping')\ntap($rename_ok)"}
{"task": "Rename the checklist item 'Meeting at 3PM' to 'Team Meeting at 3PM' and move it to the bottom of the list", "solution": "long_tap($checklist_item_list.match('Meeting at 3PM')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Team Meeting at 3PM')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Team Meeting at 3PM')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Move the checklist item 'Workout' to the bottom of the list, rename 'Finish Report' to 'Submit Final Report', then move 'Submit Final Report' to the top of the list", "solution": "long_tap($checklist_item_list.match('Workout')[0])\ntap($move_selected_item_to_the_buttom)\nlong_tap($checklist_item_list.match('Finish Report')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Submit Final Report')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Submit Final Report')[0])\ntap($move_selected_item_to_the_top)"}
{"task": "Delete the checklist item 'Dentist Appointment' and rename 'Buy Groceries' to 'Grocery Shopping'", "solution": "long_tap($checklist_item_list.match('Dentist Appointment')[0])\ntap($delete_selected_checklist_item)\nlong_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Grocery Shopping')\ntap($rename_ok)"}
{"task": "Move 'Team Meeting at 3PM' to the top of the list and delete 'Call Mom'", "solution": "long_tap($checklist_item_list.match('Team Meeting at 3PM')[0])\ntap($move_selected_item_to_the_top)\nlong_tap($checklist_item_list.match('Call Mom')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Check off the first checklist item and then show only unchecked checklist items", "solution": "tap($checklist_item_list[0])\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Move the fourth checklist item to the second position, then edit it to say 'Read a book'", "solution": "long_tap($checklist_item_list[3])\ntap($move_selected_item_to_the_top)\ntap($move_selected_item_to_the_top)\nlong_tap($checklist_item_list[1])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Read a book')\ntap($rename_ok)"}
{"task": "Remove the fifth checklist item, then add a new checklist item 'Schedule a dentist appointment'", "solution": "long_tap($checklist_item_list[4])\ntap($delete_selected_checklist_item)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Schedule a dentist appointment')\ntap($add_checklist_item_ok)"}
{"task": "Mark all checklist items as completed, then add a new checklist item 'Prepare birthday party'", "solution": "for i in range(len($checklist_item_list)):\n    if not get_attributes($checklist_item_list[i])['checked']:\n        tap($checklist_item_list[i])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Prepare birthday party')\ntap($add_checklist_item_ok)"}
{"task": "Edit the second checklist item to say 'Visit grandma', then check off the first and second checklist items", "solution": "long_tap($checklist_item_list[1])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Visit grandma')\ntap($rename_ok)\ntap($checklist_item_list[0])\ntap($checklist_item_list[1])"}
{"task": "Open settings and customize the colors, then set the theme to Dark and immediately switch to White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($theme_color_dark)\ntap($theme_color_white)\nback()\n"}
{"task": "Open more options of the current checklist, go to settings, and set the theme color to Black & White", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\nback()\n"}
{"task": "From the note's more options, open settings, then customize colors and set the theme to Dark red", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()\n"}
{"task": "Open settings from the more options of the current checklist, then set the theme to White and switch to Dark", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($theme_color_white)\ntap($theme_color_dark)\nback()\n"}
{"task": "Open settings, choose the White theme, and then switch to Dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($theme_color_white)\ntap($theme_color_dark_red)\nback()\n"}
{"task": "Set the text color of the app to green, close the color customization popup, and then reopen it", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\nset_text($theme_color_custom, 'green')\ntap($save_set_colors)\ntap($set_colors)"}
{"task": "Open the settings of the app, set the theme color to red, and then save and close the settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Customize the colors of the app, open more options for the current checklist, and save the customized colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\ntap($save_set_colors)\nback()"}
{"task": "Open the note titled 'Project Plan', rename the checklist item 'Shopping List' to 'Groceries List', then show all checklist items in the current note", "solution": "tap($open_note)\n$open_note_title_list.match('Project Plan')[0].tap()\nlong_tap($checklist_item.match('Shopping List')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Groceries List')\ntap($rename_ok)\n$checklist_item_list"}
{"task": "Open the note titled 'Meeting Notes', show the content of the checklist item 'Prepare Presentation', then rename the checklist item 'Call Mom' to 'Contact Mother'", "solution": "tap($open_note)\n$open_note_title_list.match('Meeting Notes')[0].tap()\ntap($checklist_item.match('Prepare Presentation')[0])\nlong_tap($checklist_item.match('Call Mom')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Contact Mother')\ntap($rename_ok)\ntap($checklist_item_list.match('Contact Mother'))\n"}
{"task": "Set the font size to 50%, open the more options for the current checklist, and then show the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)\ntap($sort_checklist_items_ok)\nback()\ntap($more_options_checklist)\nback()\ntap($settings)\ntap($current_font_size)\ncurrent_font_size = get_text($current_font_size)\nback()\nback()\nprint(current_font_size)"}
{"task": "Open the more options for the current note, set the font size to 60%, and then change it to 75%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_60%)\ntap($sort_checklist_items_ok)\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Open the settings of the app, set the font size to 75%, and then open the more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($sort_checklist_items_ok)\nback()\ntap($more_options_checklist)"}
{"task": "Set the font size to 60%, open the more options for the current note, and then show the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)\ntap($sort_checklist_items_ok)\nback()\ntap($more_options_note)\ntap($settings)\ntap($current_font_size)\ncurrent_font_size = get_text($current_font_size)\nback()\nback()\nprint(current_font_size)"}
{"task": "Open settings from note options and set theme to dark mode", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Export both the current note and the current checklist, save them to Google Drive, and notify the team", "solution": "tap($more_options_note)\ntap($export_as_file)\nset_text($open_note_title, 'Google Drive')\ntap($add_note_ok)"}
{"task": "Lock and confirm the lock of the current note after removing done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current note and confirm the deletion after sorting the items of the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open more options for the current note, lock the current note, and then confirm the lock", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Remove done items from the current checklist, sort the items, and then lock the current note", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Tap on the 'Search' button within the current note then input 'budget' in the search bar to find all related sections within the note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')"}
{"task": "Edit the content of the current note by typing 'Meeting notes for tomorrow's agenda' and then add a bullet point list under this text with items 'Discuss timeline', 'Review budget', and 'Assign tasks'", "solution": "set_text($note_content, \"Meeting notes for tomorrow's agenda\\n- Discuss timeline\\n- Review budget\\n- Assign tasks\")"}
{"task": "Tap on the 'More options' button to view more options for the current note and then select an option to share the note via email with Jane at jane.doe@example.com", "solution": "tap($more_options_note)\ntap($more_options_note_buttons.match({'text': 'share'}))\nset_text($share_email_input, 'jane.doe@example.com')"}
{"task": "Search within the current note for the keyword 'deadline' and scroll through the current note content to the bottom to find all mentions of the keyword", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\nscroll($note_content, 'down')"}
{"task": "Scroll through the current note content to the bottom and edit the note content to include a reminder 'Call John at 3pm' at the end of the note", "solution": "scroll($note_content, 'down')\nset_text($note_content, 'Call John at 3pm')"}
{"task": "Enable autosave notes and then go to settings to enable display save success messages", "solution": "tap($settings)\nif not get_attributes($set_autosave_notes)['checked']:\n    tap($set_autosave_notes)\nif not get_attributes($set_display_save_success_messages)['checked']:\n    tap($set_display_save_success_messages)"}
{"task": "Go to settings and disable display save success messages before enabling autosave notes", "solution": "tap($settings)\nif get_attributes($set_display_save_success_messages)['checked']:\n    tap($set_display_save_success_messages)\nif not get_attributes($set_autosave_notes)['checked']:\n    tap($set_autosave_notes)"}
{"task": "Open more options for the current note and then open more options for the current checklist", "solution": "tap($more_options_note)\nback()\ntap($more_options_checklist)"}
{"task": "Open more options for the current checklist and go to settings to enable autosave notes", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\nif not get_attributes($set_autosave_notes)['checked']:\n    tap($set_autosave_notes)"}
{"task": "Go to settings, enable autosave notes, and then disable display save success messages", "solution": "tap($settings)\nif not get_attributes($set_autosave_notes)['checked']:\n    tap($set_autosave_notes)\nif get_attributes($set_display_save_success_messages)['checked']:\n    tap($set_display_save_success_messages)"}
{"task": "Open the note titled 'Grocery List', search for the word 'bread', then save changes if any are made", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Grocery List':\n        tap(notes[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'bread')\nback()\ntap($save_note)"}
{"task": "Search for the word 'meeting' in my current note, save changes, then open the note titled 'Project Plan'", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\nback()\ntap($save_note)\ntap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Project Plan':\n        tap(notes[i])\n        break"}
{"task": "Open the note titled 'Grocery List', search for the word 'eggs', then save changes and close the note", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Grocery List':\n        tap(notes[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'eggs')\nback()\ntap($save_note)\nback()"}
{"task": "Save changes to my current note, search for the word 'deadline' in it, and open the note titled 'Grocery List'", "solution": "tap($save_note)\ntap($search_within_note)\nset_text($search_text, 'deadline')\nback()\ntap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Grocery List':\n        tap(notes[i])\n        break"}
{"task": "Search for the word 'invoice' in my current note, then save changes and open the note titled 'Meeting Notes'", "solution": "tap($search_within_note)\nset_text($search_text, 'invoice')\nback()\ntap($save_note)\ntap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Meeting Notes':\n        tap(notes[i])\n        break"}
{"task": "Export my notes and then import notes from my backup file named 'NotesBackup.zip'", "solution": "tap($settings)\ntap($export_notes)\ntap($import_notes)\nset_text($import_notes, 'NotesBackup.zip')"}
{"task": "Open more options for my current checklist and export it as 'ShoppingList.pdf'", "solution": "tap($more_options_checklist)\ntap($export_as_file)\nset_text($export_as_file, 'ShoppingList.pdf')"}
{"task": "Open the app settings and then change the theme to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open more options for my current note and duplicate it, then rename the duplicate to 'MeetingNotes'", "solution": "tap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'MeetingNotes')\ntap($rename_ok)"}
{"task": "Import notes from a file named 'WorkNotes.zip' and then open more options for the imported checklist titled 'ProjectTasks'", "solution": "tap($settings)\ntap($import_notes)\nset_text($import_notes, 'WorkNotes.zip')\ntap($open_note)\ntap($open_note_title_list.match('ProjectTasks')[0])\ntap($more_options_note)"}
{"task": "Display all checklist items, then move the third checklist item to the first position, and finally sort the items alphabetically.", "solution": "\ntap($checklist_item_list)\nlong_tap($checklist_item[2])\ntap($move_selected_item_to_the_top)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\n"}
{"task": "Open the note titled 'Grocery List', change 'Buy milk' to 'Buy almond milk' and save it, then search for the word 'eggs' within it", "solution": "\ntap($open_note)\nnotes = $open_note_title_list\nidx = -1\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Grocery List':\n        idx = i\n        break\ntap(notes[idx])\nset_text($note_content, get_text($note_content).replace('Buy milk', 'Buy almond milk'))\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'eggs')\n"}
{"task": "Open the note titled 'Meeting Minutes' and search for the phrase 'budget allocation', then access more options for the note and save it", "solution": "\ntap($open_note)\nnotes = $open_note_title_list\nidx = -1\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Meeting Minutes':\n        idx = i\n        break\ntap(notes[idx])\ntap($search_within_note)\nset_text($search_text, 'budget allocation')\ntap($more_options_note)\ntap($save_note)\n"}
{"task": "Open the note titled 'Travel Itinerary', view all content, then access more options and save without changes", "solution": "\ntap($open_note)\nnotes = $open_note_title_list\nidx = -1\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Travel Itinerary':\n        idx = i\n        break\ntap(notes[idx])\ntap($more_options_note)\ntap($save_note)\n"}
{"task": "Search for the word 'deadline' within the current note, then open the note titled 'Project Plan' and add 'Finalize budget report' to the content before saving it", "solution": "\ntap($search_within_note)\nset_text($search_text, 'deadline')\ntap($open_note)\nnotes = $open_note_title_list\nidx = -1\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Project Plan':\n        idx = i\n        break\ntap(notes[idx])\nnote_content = get_text($note_content)\nnew_content = note_content + '\\nFinalize budget report'\nset_text($note_content, new_content)\ntap($save_note)\n"}
{"task": "Tap on 'Search' and input 'project deliverables' to find all related sections within the note and then tap on 'More options' to copy the found sections", "solution": "tap($search_within_note)\nset_text($search_text, 'project deliverables')\ntap($close_search_box)\ntap($more_options_note)"}
{"task": "Edit the content of the current note by typing 'Reminder to review the budget report' and then add a bullet point list under this text with items 'Check the total expenses', 'Review categories of spending', and 'Compare with last month'", "solution": "set_text($note_content, 'Reminder to review the budget report\\n- Check the total expenses\\n- Review categories of spending\\n- Compare with last month')\ntap($save_note)"}
{"task": "Search within the current note for the phrase 'project deliverables' and then edit the note to add a comment 'Update required by end of the week' next to each found section.", "solution": "tap($search_within_note)\nset_text($search_text, 'project deliverables')\ntap($next_matchhed_text)\nfor _ in range(len($note_content.match('project deliverables'))):\n    next_matchhed_text()\n    set_text($note_content, get_text($note_content) + ' Update required by end of the week')\ntap($save_note)"}
{"task": "Open the settings page in the Notes app and then scroll through the settings page until you find the font size option to adjust the font size to medium.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Open the settings page in the Notes app and customize the colors to a dark theme before changing the widget colors to match the new theme.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()\ntap($set_widget_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()"}
{"task": "Customize colors from checklist options and open settings to enable auto light/dark mode", "solution": "tap($open_note)\ntap($more_options_checklist)\ntap($set_colors)\nback()\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)"}
{"task": "Open settings from note options and switch to dark red mode theme", "solution": "tap($open_note)\ntap($more_options_note)\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "In checklist options, customize colors and set theme to light mode", "solution": "tap($open_note)\ntap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Open settings from note options, customize colors and then set theme to dark red mode", "solution": "tap($open_note)\ntap($more_options_note)\ntap($settings)\ntap($set_colors)\nback()\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "From checklist options, open settings, switch to dark mode theme and then customize colors", "solution": "tap($open_note)\ntap($more_options_checklist)\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()\ntap($set_colors)"}
{"task": "Delete the checklist item 'Finish Homework', then open the note titled 'Project Plan', and rename the checklist item 'Shopping List' to 'Groceries List'", "solution": "long_tap($checklist_item_list.match('Finish Homework')[0])\ntap($delete_selected_checklist_item)\ntap($open_note)\ntap($open_note_title_list.match('Project Plan')[0])\nlong_tap($checklist_item_list.match('Shopping List')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Groceries List')\ntap($rename_ok)"}
{"task": "Rename the checklist item 'Buy Groceries' to 'Purchase Groceries', then delete the checklist item 'Workout at 5 PM', and show all checklist items in the current note", "solution": "long_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase Groceries')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Workout at 5 PM')[0])\ntap($delete_selected_checklist_item)\nfor item in $checklist_item_list:\n    print(get_text(item))"}
{"task": "Open the note titled 'Meeting Notes', delete the checklist item 'Review Quarterly Report', then show the content of the checklist item 'Prepare Presentation'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])\nlong_tap($checklist_item_list.match('Review Quarterly Report')[0])\ntap($delete_selected_checklist_item)\nprint(get_text($checklist_item_list.match('Prepare Presentation')[0]))"}
{"task": "Rename the checklist item 'Call Mom' to 'Contact Mother', then open the note titled 'Project Plan' and delete the checklist item 'Review Quarterly Report'", "solution": "long_tap($checklist_item_list.match('Call Mom')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Contact Mother')\ntap($rename_ok)\ntap($open_note)\ntap($open_note_title_list.match('Project Plan')[0])\nlong_tap($checklist_item_list.match('Review Quarterly Report')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Open the note titled 'Project Plan', show all checklist items in the current note, then rename the checklist item 'Shopping List' to 'Groceries List'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Plan')[0])\nfor item in $checklist_item_list:\n    print(get_text(item))\nlong_tap($checklist_item_list.match('Shopping List')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Groceries List')\ntap($rename_ok)"}
{"task": "Open more options for the current checklist, remove done items, and sort the remaining tasks", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('remove done items')[0])\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('sort by')[0])\n# Assuming sorting by title for demonstration\ntap($sort_checklist_items_types.match('Title')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Lock the current note, confirm the lock, then delete the current note and confirm the deletion", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('lock note')[0])\ntap($lock_note_ok)\ntap($more_options_note)\ntap($more_option_note_buttons.match('delete note')[0])\ntap($delete_note_ok)"}
{"task": "Open more options for the current note, sort the items in the checklist, and then remove the done items", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('sort by')[0])\n# Assuming sorting by title for demonstration\ntap($sort_checklist_items_types.match('Title')[0])\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($more_option_note_buttons.match('remove done items')[0])"}
{"task": "Sort the items of the current checklist, then lock the current note and confirm the lock", "solution": "tap($more_options_checklist)\ntap($more_option_note_buttons.match('sort by')[0])\n# Assuming sorting by title for demonstration\ntap($sort_checklist_items_types.match('Title')[0])\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($more_option_note_buttons.match('lock note')[0])\ntap($lock_note_ok)"}
{"task": "Insert the date '2023-10-15' at the beginning of the current note, then underline the title 'Shopping List', and finally bold the word 'important' throughout the note.", "solution": "set_text($note_content, '2023-10-15 ' + get_text($note_content))\n# Underline and bold operations are typically text editor dependent and may require additional steps that simulator can't handle via simple API. This step assumes placeholder actions.\n# Let's assume underline and bold are settings on selected text, a UI action otherwise unavailable in the current simulation environment.\n# Placeholder for underline 'Shopping List'\n# Placeholder for bold 'important'"}
{"task": "Disable autosave notes, go to settings, and enable display save success messages", "solution": "tap($settings)\nelem_list = $set_autosave_notes\nautosave_attrs = get_attributes(elem_list[0])\nif autosave_attrs[\"selected\"] == True:\n    tap($set_autosave_notes)\nattrs = get_attributes($set_display_save_success_messages)\nif attrs[\"selected\"] == False:\n    tap($set_display_save_success_messages)"}
{"task": "Enable display save success messages first, then enable autosave notes, and finally open more options for the current note", "solution": "attrs = get_attributes($set_display_save_success_messages)\nif attrs[\"selected\"] == False:\n    tap($set_display_save_success_messages)\nattrs = get_attributes($set_autosave_notes)\nif attrs[\"selected\"] == False:\n    tap($set_autosave_notes)\ntap($more_options_note)"}
{"task": "Open more options for the current checklist, go to settings, disable display save success messages, and then enable autosave notes", "solution": "tap($more_options_checklist)\ntap($settings)\nattrs = get_attributes($set_display_save_success_messages)\nif attrs[\"selected\"] == True:\n    tap($set_display_save_success_messages)\nattrs = get_attributes($set_autosave_notes)\nif attrs[\"selected\"] == False:\n    tap($set_autosave_notes)"}
{"task": "Show the information of the app, then lock the current note and confirm locking the current note", "solution": "tap($more_options_note)\ntap($about)\nback()\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Meeting Notes', confirm the new name 'Meeting Notes' for the current note, then lock the current note, and confirm locking the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Export my notes and then send them via email to john.doe@example.com with the subject 'My Notes'", "solution": "tap($open_note)\ntap($more_options_note)\ntap($export_as_file)\n# Add here the steps for sending via email, as the functionality to send email is not covered in the provided APIs"}
{"task": "Open more options for my current checklist and rearrange the tasks alphabetically, then export it", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($export_as_file)"}
{"task": "Open the app settings, enable notifications for reminders, and then open more options for my current note to set a reminder for tomorrow at 9 AM", "solution": "tap($settings)\n# Scroll if necessary for enabling notifications for reminders\n# The specific steps for enabling notifications is not covered in the provided APIs\nback()\ntap($more_options_note)\ntap($export_as_file)\n# Add here the steps for setting a reminder for tomorrow at 9 AM, as the functionality for reminders is not covered in the provided APIs"}
{"task": "Open the settings of the Notes app and enable line wrap", "solution": "tap($settings)\ntap($set_enable_line_wrap)\nback()"}
{"task": "Open the settings of the Notes app, use the incognito mode of keyboards, and then set the alignment to center", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_alignment)\n# Add here the steps necessary to set the alignment to 'center', depending on the available options\nback()"}
{"task": "Open settings to enable showing a note picker on startup, then export current notes", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($export_notes)"}
{"task": "Open more options for the current note, then open settings and enable displaying save success messages", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_display_save_success_messages)"}
{"task": "Open settings and disable autosave notes, then open more options for the current checklist", "solution": "tap($settings)\ntap($set_autosave_notes)\nback()\ntap($more_options_checklist)"}
{"task": "Export current notes, then open settings to enable showing a note picker on startup", "solution": "tap($export_notes)\ntap($settings)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open settings to enable displaying save success messages, then export current notes", "solution": "tap($settings)\ntap($set_display_save_success_messages)\nback()\ntap($export_notes)"}
{"task": "Open the note titled 'Grocery List', search for the word 'apples', save changes if any are made, and search for the word 'bananas' in the same note.", "solution": "tap($open_note)\nset_text($open_note_title_list.match({'text': 'Grocery List'})[0])\ntap($open_note_title_list.match({'text': 'Grocery List'})[0])\ntap($search_within_note)\nset_text($search_text, 'apples')\ntap($search_text)\ntap($close_search_box)\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'bananas')\ntap($search_text)"}
{"task": "Open more options in the current checklist and then sort the items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by date created, then open more options and sort by custom", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options in the current checklist, sort the items by custom, and then sort them by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by date created, open more options, and sort by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Access more options for the current note and then change the widget colors in the Notes app to blue.", "solution": "tap($more_options_note)\ntap($set_widget_colors)\ntap($set_background_color)\nset_text($background_color, 'blue')\ntap($save_set_colors)"}
{"task": "Access more options for the current checklist, then open the settings page in the Notes app to adjust the font size to large.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)\nback()"}
{"task": "Open the settings page in the Notes app, scroll through the settings, and customize the colors to a high-contrast theme for better readability.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_background_color)\nset_text($background_color, 'black')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($text_color, 'white')\ntap($save_set_colors)"}
{"task": "Customize the colors of the Notes app to green, then adjust the font size to small to fit more content on the screen.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($background_color, 'green')\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_50%)\nback()"}
{"task": "Access more options for the current checklist, then open the settings page in the Notes app to change the widget colors to red.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_widget_colors)\ntap($set_background_color)\nset_text($background_color, 'red')\ntap($save_set_colors)\nback()"}
{"task": "Open the settings of the Notes APP, set the font size to 125%, then open the more options menu for the current note.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($exit_settings)\ntap($more_options_note)"}
{"task": "Open the more options menu for the current checklist, then open the settings of the Notes APP, and set the font size to 175%.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_175%)"}
{"task": "Show the current font size in the Notes APP settings, then set the font size to 100%, and show the current font size again.", "solution": "tap($settings)\ntap($current_font_size)\nget_text($current_font_size)\ntap($exit_settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($exit_settings)\ntap($current_font_size)\nget_text($current_font_size)"}
{"task": "Set the font size to 125% in the Notes APP settings, then open the more options menu for the current note.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($exit_settings)\ntap($more_options_note)"}
{"task": "Open the more options menu for the current note, then show the current font size in the Notes APP settings, and finally set the font size to 175%.", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\nget_text($current_font_size)\ntap($exit_settings)\ntap($set_font_size)\ntap($font_size_175%)"}
{"task": "Open more options for the current checklist, then open settings and disable autosave notes", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_autosave_notes.match({'selected': true}))"}
{"task": "Open more options for the current note, then export current notes", "solution": "tap($more_options_note)\ntap($export_as_file)"}
{"task": "Open settings and enable showing a note picker on startup, then disable autosave notes", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup.match({'selected': false}))\ntap($set_autosave_notes.match({'selected': true}))"}
{"task": "Search for the text 'meeting notes' within the current note and then go to the previous occurrence of the word 'project' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')\ntap($prev_matched_text.match({'text': 'project'}))"}
{"task": "Find the next instance of the term 'deadline' within the current note, close the search box, and then create a new checklist note titled 'Weekend Tasks'", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\ntap($close_search_box)\ntap($create_note)\nset_text($add_note_title, 'Weekend Tasks')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Rename the checklist item 'Buy Groceries' to 'Purchase Groceries', open the note titled 'Meeting Notes', show the content of the checklist item 'Prepare Presentation'", "solution": "long_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase Groceries')\ntap($rename_ok)\ntap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])\nget_text($checklist_item_list.match('Prepare Presentation')[0])"}
{"task": "Lock the current note and then export it as a file", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Open the file of the current checklist and print it", "solution": "tap($more_options_checklist)\ntap($open_file)\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Export the current note as a file and then delete the note", "solution": "tap($more_options_note)\ntap($export_as_file)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Lock the current checklist and open its file", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($open_file)"}
{"task": "Set the theme color to light mode, then open more options of the current note and share it", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\nback()\ntap($more_options_note)\ntap($share)"}
{"task": "Open settings, navigate to customize colors, set the primary color to red, then open more options of the current checklist", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_primary_color)\ntap({\"text\": \"Red\"})\nback()\ntap($more_options_checklist)"}
{"task": "Customize the colors of the app to blue, then set the theme color to dark mode, and finally set the app icon color to green", "solution": "tap($set_colors)\ntap($set_primary_color)\ntap({\"text\": \"Blue\"})\nback()\ntap($set_theme_color)\ntap($theme_color_dark)\nback()\ntap($set_app_icon_color)\ntap({\"text\": \"Green\"})\nback()"}
{"task": "Set the primary color to blue, open settings, navigate to TODO settings, then open more options of the current note and duplicate it", "solution": "tap($set_colors)\ntap($set_primary_color)\ntap({\"text\": \"Blue\"})\nback()\ntap($settings)\n# Note: 'TODO settings' is not defined in the UI elements\nscroll($scroll_settings_page, 'down')\nback()\ntap($more_options_note)\ntap({\"text\": \"Duplicate note\"})"}
{"task": "Open the note titled 'Shopping List' and move the checklist item 'Buy Milk' to the top", "solution": "tap($open_note)\nset_text($open_note_title_list.match('Shopping List')[0], 'Shopping List')\ntap($open_note_title_list.match('Shopping List')[0])\nlong_tap($checklist_item_list.match('Buy Milk')[0])\ntap($move_selected_item_to_the_top)"}
{"task": "Open the settings of the Notes app, customize the colors to a dark theme, and close the popup window after setting colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open more options of the current note and enable line wrap", "solution": "tap($more_options_note)\ntap($set_enable_line_wrap)\nback()"}
{"task": "Open more options of the current checklist and use the incognito mode of keyboards", "solution": "tap($more_options_checklist)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Open the settings of the Notes app, customize the colors to blue, set the alignment to justify, and close the popup window after setting colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_text_color)\ntap($theme_color_custom.match({'text': 'blue'}))\ntap($save_set_colors)\ntap($set_alignment)\ntap($theme_color_custom.match({'text': 'justify'}))\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Open the settings of the Notes app and then enable line wrap followed by setting the alignment to left", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($theme_color_custom.match({'text': 'left'}))\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Edit the content of the current note to add 'Don't forget to buy milk', then save the note with the current content, and open more options for the current note.", "solution": "set_text($note_content, get_text($note_content) + \"\\nDon't forget to buy milk\")\ntap($save_note)\ntap($more_options_note)"}
{"task": "Search within the current note for the word 'meeting', then change the first sentence in the current note to 'The meeting is rescheduled to 3 PM', and save the note with the current content.", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($prev_matched_text)\n# Assuming we need to get the current content\ntxt = get_text($note_content)\nsentences = txt.split('.')\nfirst_sent = 'The meeting is rescheduled to 3 PM. '\nremaining_content = '.'.join(sentences[1:]).strip()\nset_text($note_content, first_sent + remaining_content)\ntap($save_note)"}
{"task": "Delete the last paragraph in the current note, then replace every occurrence of 'urgent' with 'important' in the current note, and finally save the note with the current content.", "solution": "txt = get_text($note_content)\nparagraphs = txt.split('\\n')\nnew_content = '\\n'.join(paragraphs[:-1]).replace('urgent', 'important')\nset_text($note_content, new_content)\ntap($save_note)"}
{"task": "Insert the date '2023-10-15' at the beginning of the current note, then bold the word 'important', and finally underline the title 'Shopping List'.", "solution": "txt = get_text($note_content)\nupdated_content = '2023-10-15\\n' + txt\nset_text($note_content, updated_content)\n# Assuming there is a method to bold text, but it's not provided above\n# Therefore, this part is illustrative and assumes relevant method exists\nbold_word('important')\nunderline_title('Shopping List')"}
{"task": "Edit the content of the current note to add 'Don't forget to buy milk', then search within the current note for the word 'important', and replace each occurrence of 'important' with 'critical'.", "solution": "set_text($note_content, get_text($note_content) + \"\\nDon't forget to buy milk\")\ntap($search_within_note)\nset_text($search_text, 'important')\n# Assuming replace_all method exists for demonstration purpose\nreplace_all('important', 'critical')"}
{"task": "Open the settings page in the Notes app and scroll through it to find and customize the colors of the Notes app to a pastel theme before exiting.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()"}
{"task": "Import all notes from your Google account to the app, then enable automatic backups in the settings.", "solution": "tap($settings)\ntap($import_notes)\ntap($exit_settings)\ntap($settings)\nscroll($scroll_settings_page, 'down')\nset($set_enable_automatic_backups, True)\nback()"}
{"task": "Open the settings of the Notes app, enable automatic backups, and then return to the home screen.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\nset($set_enable_automatic_backups, True)\nback()"}
{"task": "Import notes to the app, open the more options menu for the current checklist, and share it with John via email.", "solution": "tap($import_notes)\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('share'))\nset_text($share_email_input, 'john@example.com')\ntap($share_ok)"}
{"task": "Access the more options menu for the current note, duplicate the note, and then move the duplicate to a different folder.", "solution": "tap($more_options_note)\ntap($duplicate_note)\ntap($move_note_to_folder)"}
{"task": "Open the settings of the Notes app, use the incognito mode of keyboards, then customize the colors to red, and close the popup window after setting colors", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Open the current note and change the font size to 150%", "solution": "tap($note_content)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Open the settings of the app and check the current font size", "solution": "tap($settings)\ntap($current_font_size)"}
{"task": "Open the more options menu for the current note and then change the font size to 175%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_175%)"}
{"task": "Open the current checklist's more options menu, change the font size to 125%, and then open the settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($settings)"}
{"task": "Open more options in the current checklist, sort the items by title, then sort them by date created, and finally sort by custom", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by custom, then open more options, sort by title, and finally by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options in the current checklist, sort the items by date created, sort by custom, and then sort by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by title, then open more options, sort by date created, and finally sort by custom.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings of the app and increase the font size of the app to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\nback()"}
{"task": "Open the settings of the Notes APP, set the font size to 150%, then switch to the more options menu for the current checklist.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($exit_settings)\ntap($more_options_checklist)"}
{"task": "Open the note titled 'Vacation Ideas', then search for the keyword 'beach' within the current note, and go to the next instance of the matching text 'hotel'.", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nfor idx in range(len(open_note_title_list)):\n    if get_text(open_note_title_list[idx]) == 'Vacation Ideas':\n        tap(open_note_title_list[idx])\n        break\ntap($search_within_note)\nset_text($search_text, 'beach')\ntap($next_matchhed_text)\nset_text($search_text, 'hotel')\ntap($next_matchhed_text)"}
{"task": "Create a note titled 'Project Plan' and set it as a checklist, then add a new note with the title 'Grocery List'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($checklist_type)\ntap($add_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)"}
{"task": "Open the note titled 'Weekly Goals' and update it by setting it as a text note, then search for the keyword 'exercise' within the current note.", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nfor idx in range(len(open_note_title_list)):\n    if get_text(open_note_title_list[idx]) == 'Weekly Goals':\n        tap(open_note_title_list[idx])\n        break\nif get_attributes($text_note_type)['selected'] == False:\n    tap($text_note_type)\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'exercise')"}
{"task": "Add a new note with the title 'Grocery List', then search for the keyword 'milk', and close the search box for matching text within the current note.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'milk')\ntap($close_search_box)"}
{"task": "Open the settings of the app and then lock the current note", "solution": "tap($settings)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Print the current note and then delete it", "solution": "tap($print_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Export the current checklist as a file and then print it", "solution": "tap($export_as_file)\ntap($print_note)"}
{"task": "Lock the current note and the current checklist, then open the settings of the app.", "solution": "tap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\ntap($settings)"}
{"task": "Show the title of the current note and then display all items in the current checklist", "solution": "title = get_text($item_title)\nprint('Title:', title)\nfor i in range(len($checklist_item_list)):\n    item = get_text($checklist_item_list[i])\n    print('Item', i + 1, item)"}
{"task": "Open the settings of the Notes app, change the theme to dark mode, and then enable automatic backups.", "solution": "tap($settings)\ntap($set_colors)\ntap($theme_color_custom).match('Dark')\ntap($save_set_colors)\ntap($exit_settings)\ntap($set_enable_automatic_backups)"}
{"task": "Import notes from your Dropbox account to the app, then access the more options menu for each note and organize them into folders.", "solution": "tap($settings)\ntap($import_notes)\nback()\nfor i in range(len($open_note_title_list)):\n    tap($open_note_title_list[i])\n    tap($more_options_note)\n    # Assuming there is an option to organize into folders\n    tap($organize_into_folders)\n    back()"}
{"task": "Open the more options menu for the current checklist, mark all items as complete, and then delete the checklist.", "solution": "tap($more_options_checklist)\n# Assuming there is an option to mark all items as complete\ntap($mark_all_complete)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Import notes from your previous device to the app, then open the more options menu for the current note, add it to a new collection, and enable automatic backups in the settings.", "solution": "tap($settings)\ntap($import_notes)\nback()\ntap($more_options_note)\ntap($add_to_collection)\n# Assuming popup window opens to add collection name\nset_text($collection_name, 'New Collection')\ntap($confirm_add_collection)\ntap($settings)\ntap($set_enable_automatic_backups)"}
{"task": "Open the settings in the Notes app and set the font size to large, then show the word count", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($exit_settings)\ntap($set_show_word_count)"}
{"task": "Change the first sentence in the current note to 'The meeting is rescheduled to 3 PM', then underline the title 'Shopping List', and save the note with the current content.", "solution": "tap($note_content)\nnote_text = get_text($note_content)\nnew_text = note_text.replace(note_text.split('.')[0], 'The meeting is rescheduled to 3 PM')\nset_text($note_content, new_text)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\nset_text($rename_input, '___')\ntap($rename_ok)\ntap($save_note)"}
{"task": "Insert the date '2023-10-15' at the beginning of the current note, then delete the last paragraph, and replace every occurrence of 'urgent' with 'important'.", "solution": "tap($note_content)\nnote_text = get_text($note_content)\nnew_text = '2023-10-15 ' + note_text\nnew_text = '\\n'.join(new_text.split('\\n')[:-1]) + new_text.split('\\n')[-1].replace('urgent', 'important')\nset_text($note_content, new_text)\ntap($save_note)"}
{"task": "Open more options for the current checklist and change the font size to 250%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($sort_checklist_items_ok)"}
{"task": "Set the app to place the cursor at the end of the note, then open more options for the current note and change the font size to 300%", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\nback()\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($sort_checklist_items_ok)"}
{"task": "Open the app settings, set the app to show the keyboard on startup, and check the current font size of the app", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\nfont_size = get_text($current_font_size)\nprint(f'Current font size: {font_size}')"}
{"task": "Open the note titled 'Shopping List' and delete the checklist item 'Old Task'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Shopping List')[0])\ntap($checklist_item_list.match('Old Task')[0])\nlong_tap($checklist_item_list.match('Old Task')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Open the note titled 'Shopping List' and rename the checklist item 'Clean the kitchen' to 'Clean the house'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Shopping List')[0])\nlong_tap($checklist_item_list.match('Clean the kitchen')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Clean the house')\ntap($rename_ok)"}
{"task": "Open the note titled 'Work Tasks', rename the checklist item 'Meeting at 3 PM' to 'Team Meeting' and then move the checklist item 'Email Client' to the bottom", "solution": "tap($open_note)\ntap($open_note_title_list.match('Work Tasks')[0])\nlong_tap($checklist_item_list.match('Meeting at 3 PM')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Team Meeting')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Email Client')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Open the note titled 'Vacation Plans' and add a new checklist item 'Book Hotel'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Vacation Plans')[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Book Hotel')\ntap($add_checklist_item_ok)"}
{"task": "Open the note titled 'Work Tasks' and delete the checklist item 'Review Report' then move the checklist item 'Finish Assignment' to the bottom", "solution": "tap($open_note)\ntap($open_note_title_list.match('Work Tasks')[0])\nlong_tap($checklist_item_list.match('Review Report')[0])\ntap($delete_selected_checklist_item)\nlong_tap($checklist_item_list.match('Finish Assignment')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Create a new note titled 'Grocery List' and then search for the text 'meeting notes' within the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'meeting notes')"}
{"task": "Open the note titled 'Travel Plans' and find the next instance of the term 'deadline' within the current note", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_idx = -1\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Travel Plans':\n        note_idx = i\n        break\nif note_idx != -1:\n    tap(note_titles[note_idx])\ntap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)"}
{"task": "Create a new note titled 'Grocery List', close the search box, and then find the next instance of the term 'deadline' within the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)\nb = get_attributes($close_search_box)['checked']\nif b == False:\n    tap($close_search_box)\ntap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text"}
{"task": "Search for the text 'meeting notes' within the current note, find the next instance of the term 'deadline', and then go to the previous occurrence of the word 'project'", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')\ntap($next_matchhed_text)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\nset_text($search_text, 'project')\ntap($prev_matched_text)"}
{"task": "Create a new checklist note titled 'Weekend Tasks' and search for the text 'meeting notes' within the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Tasks')\ntap($add_note_types)\ntap($checklist_type)\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'meeting notes')"}
{"task": "Open the more options for the current checklist and enable the setting to place the cursor to the end of notes", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($exit_settings)"}
{"task": "Increase the font size of the app to 200% and then open the more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($more_options_note)"}
{"task": "Enable the setting to place the cursor to the end of notes and then increase the font size of the app to 300%", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_font_size)\ntap($font_size_300%)\ntap($exit_settings)"}
{"task": "Open the more options for the current note and then open the more options for the current checklist", "solution": "tap($more_options_note)\nback()\ntap($more_options_checklist)"}
{"task": "Increase the font size of the app to 300% and then open the more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($more_options_checklist)"}
{"task": "Make links and emails clickable in the Notes app and open more options for the current note", "solution": "tap($set_make_links_and_emails_clickable)\ntap($more_options_note)"}
{"task": "Open the settings in the Notes app, set the font size to large, and make links and emails clickable", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Show the word count in the Notes app, then open more options for the current note and open more options for the current checklist", "solution": "tap($set_show_word_count)\ntap($more_options_note)\ntap($more_options_checklist)"}
{"task": "Open the settings in the Notes app, set the font size to large, show the word count, and make links and emails clickable", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($set_show_word_count)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Open more options for the current note in the Notes app and show the word count", "solution": "tap($more_options_note)\ntap($set_show_word_count)"}
{"task": "Change the font size to 200%, check the current font size of the app, and then revert it back to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\nback()\nsize_selected = get_text($current_font_size)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Open the more options menu for the current note and then for the current checklist", "solution": "tap($more_options_note)\nback()\ntap($more_options_checklist)"}
{"task": "Open the settings, change the font size to 175%, and then open the more options menu for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nback()\ntap($more_options_note)"}
{"task": "Open the more options menu for the current checklist, check the current font size of the app, and then change the font size to 125%", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\ntap($set_font_size)\nback()\nsize_selected = get_text($current_font_size)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Open the Notes app and create a new note titled 'Meeting Notes', then add the content 'Discuss Q3 targets and prepare slides.'", "solution": "tap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Meeting Notes')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Discuss Q3 targets and prepare slides.')\ntap($save_note)"}
{"task": "Open more options for the current checklist, then set the app to place the cursor at the end of the note and open more options for the current note", "solution": "tap($more_options_checklist); tap($settings); tap($set_place_cursor_to_the_end_of_note); tap($exit_settings); back(); tap($more_options_note)"}
{"task": "Change the font size to 250% and set the app to place the cursor at the end of the note", "solution": "tap($settings); tap($current_font_size); tap($font_size_250%); tap($exit_settings); tap($settings); tap($set_place_cursor_to_the_end_of_note); tap($exit_settings)"}
{"task": "Open the app settings and set the app to show the keyboard on startup, then change the font size to 300% and check the current font size of the app", "solution": "tap($settings); tap($set_show_keyboard_on_startup); scroll($scroll_settings_page, 'down'); tap($current_font_size); tap($font_size_300%); get_text($current_font_size); tap($exit_settings)"}
{"task": "Open more options for the current note, open more options for the current checklist, and set the app to place the cursor at the end of the note", "solution": "tap($more_options_note); back(); tap($more_options_checklist); tap($settings); tap($set_place_cursor_to_the_end_of_note); tap($exit_settings)"}
{"task": "Open more options for the current note and change the font size to 250%, then set the app to show the keyboard on startup", "solution": "tap($more_options_note); tap($settings); tap($current_font_size); tap($font_size_250%); tap($exit_settings); tap($settings); tap($set_show_keyboard_on_startup); tap($exit_settings)"}
{"task": "Open the note titled 'Travel Plans', search for the text 'meeting notes', and then find the next instance of the term 'deadline' within the current note", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_titles_match = note_titles.match('Travel Plans')\nif len(note_titles_match) > 0:\n    tap(note_titles_match[0])\n    tap($search_within_note)\n    set_text($search_text, 'meeting notes')\n    tap($next_matchhed_text)\n    set_text($search_text, 'deadline')\n    tap($next_matchhed_text)\n"}
{"task": "Export the current note as a file and email it to john.doe@example.com", "solution": "tap($more_options_note)\ntap($export_as_file)\n# Assuming the file is exported and a default email UI interaction is provided\n# Placeholder for actual email sending functionality\nset_text('email_input_field_selector', 'john.doe@example.com')\ntap('send_email_button_selector')\n"}
{"task": "Open the file of the current note, then print the current note", "solution": "tap($more_options_note)\ntap($open_file)\ntap($more_options_note)\ntap($print_note)\n"}
{"task": "Delete the current note and open the app settings", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($settings)\n"}
{"task": "Export the current note, then save the exported file to Google Drive", "solution": "tap($more_options_note)\ntap($export_as_file)\n# Placeholder for saving to Google Drive\n# Assuming the file manager of Google Drive interaction\n# tap and navigate through the Google Drive app\n"}
{"task": "Create a note titled 'Project Plan' and set it as a checklist, then add the following items: 'Define scope', 'Create timeline', 'Assign tasks'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Define scope')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Create timeline')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Assign tasks')\ntap($add_checklist_item_ok)"}
{"task": "Open the note titled 'Vacation Ideas', then search for the keyword 'flight', and go to the next instance of the matching text 'schedule'.", "solution": "tap($open_note)\ntitles = $open_note_title_list\nfor i in range(len(titles)):\n    if get_text(titles[i]) == 'Vacation Ideas':\n        tap(titles[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'flight')\ntap($next_matchhed_text)\nset_text($search_text, 'schedule')\ntap($next_matchhed_text)"}
{"task": "Add a new note with the title 'Grocery List' and list the following items: 'Apples', 'Bananas', 'Carrots', then create a note titled 'Weekly Goals' and set it as a text note.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Apples')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bananas')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Carrots')\ntap($add_checklist_item_ok)\ntap($create_note)\nset_text($add_note_title, 'Weekly Goals')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a note titled 'Project Plan' and set it as a checklist, then search for the keyword 'tasks', and add the following items to the checklist: 'Task 1 description', 'Task 2 description', 'Task 3 description'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($checklist_type)\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'tasks')\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Task 1 description')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Task 2 description')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Task 3 description')\ntap($add_checklist_item_ok)"}
{"task": "Switch to the next item and show the title of the current item", "solution": "tap($switch_to_next_item)\ntitle = get_text($item_title)\nprint(title)"}
{"task": "Switch to the next checklist item, show its title, and then display all items in its checklist", "solution": "tap($switch_to_next_item)\ntitle = get_text($item_title)\nchecklist_items = [get_text(item) for item in $checklist_item_list]\nprint(f'Title: {title}')\nprint(f'Checklist Items: {checklist_items}')"}
{"task": "Switch to the previous note, show its title, switch to the next note, and display all items in the checklist of this next note", "solution": "tap($switch_to_prev_item)\ntitle = get_text($item_title)\ntap($switch_to_next_item)\nchecklist_items = [get_text(item) for item in $checklist_item_list]\nprint(f'Title: {title}')\nprint(f'Checklist Items: {checklist_items}')"}
{"task": "Display all items in the current checklist and then switch to the next checklist item", "solution": "checklist_items = [get_text(item) for item in $checklist_item_list]\ntap($switch_to_next_item)\nprint(f'Checklist Items: {checklist_items}')"}
{"task": "Switch to the previous note, show its title, display all items in its checklist, then switch to the next note and display its checklist items", "solution": "tap($switch_to_prev_item)\ntitle = get_text($item_title)\nchecklist_items_1 = [get_text(item) for item in $checklist_item_list]\ntap($switch_to_next_item)\nchecklist_items_2 = [get_text(item) for item in $checklist_item_list]\nprint(f'Title: {title}')\nprint(f'Checklist Items Previous Note: {checklist_items_1}')\nprint(f'Checklist Items Next Note: {checklist_items_2}')"}
{"task": "Show the title of the current note, then switch to the next checklist item, switch back to the previous one, and display all its checklist items", "solution": "title = get_text($item_title)\ntap($switch_to_next_item)\ntap($switch_to_prev_item)\nchecklist_items = [get_text(item) for item in $checklist_item_list]\nprint(f'Title: {title}')\nprint(f'Checklist Items: {checklist_items}')"}
{"task": "Open the note titled 'Shopping List', rename the checklist item 'Clean the kitchen' to 'Tidy the house' and move the checklist item 'Buy Milk' to the top", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_title_elements = open_note_titles.match('Shopping List')\ntap(note_title_elements[0])\nchecklist_items = $checklist_item_list\nchecklist_item_elements = checklist_items.match(\"Clean the kitchen\")\nlong_tap(checklist_item_elements[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Tidy the house')\ntap($rename_ok)\nchecklist_item_elements = checklist_items.match(\"Buy Milk\")\nlong_tap(checklist_item_elements[0])\ntap($move_selected_item_to_the_top)"}
{"task": "Open the note titled 'Work Tasks', move the checklist item 'Email Client' to the bottom and then rename the checklist item 'Meeting at 3 PM' to 'Team Meeting' and then delete the checklist item 'Review Report'.", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_title_elements = open_note_titles.match('Work Tasks')\ntap(note_title_elements[0])\nchecklist_items = $checklist_item_list\nchecklist_item_elements = checklist_items.match(\"Email Client\")\nlong_tap(checklist_item_elements[0])\ntap($move_selected_item_to_the_buttom)\nchecklist_item_elements = checklist_items.match(\"Meeting at 3 PM\")\nlong_tap(checklist_item_elements[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Team Meeting')\ntap($rename_ok)\nchecklist_item_elements = checklist_items.match(\"Review Report\")\nlong_tap(checklist_item_elements[0])\ntap($delete_selected_checklist_item)"}
{"task": "Turn on autosave for notes and export all notes", "solution": "tap($settings)\nset_attributes = get_attributes($set_autosave_notes)\nif not set_attributes['checked']:\n    tap($set_autosave_notes)\nback()\ntap($export_notes)"}
{"task": "Turn off display of save success messages, import notes from a file, and then turn on display of save success messages", "solution": "tap($settings)\nset_attributes = get_attributes($set_display_save_success_messages)\nif set_attributes['checked']:\n    tap($set_display_save_success_messages)\nback()\ntap($import_notes)\ntap($settings)\nset_attributes = get_attributes($set_display_save_success_messages)\nif not set_attributes['checked']:\n    tap($set_display_save_success_messages)\nback()"}
{"task": "Export all notes and then turn off autosave for notes", "solution": "tap($export_notes)\ntap($settings)\nset_attributes = get_attributes($set_autosave_notes)\nif set_attributes['checked']:\n    tap($set_autosave_notes)\nback()"}
{"task": "Switch to the previous item twice and then show the title of the current item", "solution": "tap($switch_to_prev_item)\ntap($switch_to_prev_item)\ntitle = get_text($item_title)\nprint(title)"}
{"task": "Show the title of the current item three times consecutively", "solution": "title = get_text($item_title)\nprint(title)\nprint(title)\nprint(title)"}
{"task": "Switch to the previous item, switch to the next item, and then show the title of the current item", "solution": "tap($switch_to_prev_item)\ntap($switch_to_next_item)\ntitle = get_text($item_title)\nprint(title)"}
{"task": "Switch to the next item twice and then show the title of the current item", "solution": "tap($switch_to_next_item)\ntap($switch_to_next_item)\ntitle = get_text($item_title)\nprint(title)"}
{"task": "Switch to the previous item, show the title of the current item, switch to the next item, and show the title of that item", "solution": "tap($switch_to_prev_item)\ntitle_prev = get_text($item_title)\nprint(title_prev)\ntap($switch_to_next_item)\ntitle_next = get_text($item_title)\nprint(title_next)"}
{"task": "Open the settings of the app, change the font size to 300%, and set show a note picker on startup", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open the more options of the current note, change the font size to 250%, and set show keyboard on startup", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($set_show_keyboard_on_startup)\nback()"}
{"task": "Rename the selected checklist item to 'Buy Groceries' and then save the current note", "solution": "long_tap($checklist_item_list[<idx>].match({'checked': True}))\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy Groceries')\ntap($rename_ok)\ntap($save_note)"}
{"task": "Delete the checklist item labeled 'Take out trash' and then search for 'birthday' within the current note", "solution": "long_tap($checklist_item_list.match('Take out trash')[0])\ntap($delete_selected_checklist_item)\ntap($search_within_note)\nset_text($search_text, 'birthday')"}
{"task": "Open the note titled 'Holiday Plans' and rename the selected checklist item to 'Book Flights'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Holiday Plans')[0])\nlong_tap($checklist_item_list[<idx>].match({'checked': True}))\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Book Flights')\ntap($rename_ok)"}
{"task": "Increase the font size of the app to 250%, enable the setting to place the cursor to the end of notes, and then open the more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($set_place_cursor_to_the_end_of_note)\ntap($more_options_note)"}
{"task": "Open the settings of the app, increase the font size of the app to 200%, and then enable the setting to place the cursor to the end of notes.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Change text color of the Notes APP to purple and set the background color to light yellow", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\n# Assuming there is a selector for purple color e.g., $color_purple\ntap($color_purple)\ntap($save_set_colors)\ntap($set_background_color)\n# Assuming there is a selector for light yellow color e.g., $color_light_yellow\ntap($color_light_yellow)\ntap($save_set_colors)"}
{"task": "Set the primary color to green and open the more options of the current checklist", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\n# Assuming there is a selector for green color e.g., $color_green\ntap($color_green)\ntap($save_set_colors)\nback()\nback()\ntap($more_options_checklist)"}
{"task": "Customize the colors in the Notes APP and change background color of the Notes APP to grey", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\n# Assuming there is a selector for grey color e.g., $color_grey\ntap($color_grey)\ntap($save_set_colors)"}
{"task": "Print the current note and then show information about the app", "solution": "tap($print_note)\ntap($about)"}
{"task": "Open the file of the current note, review its content, and then delete it", "solution": "tap($open_file)\n# review content\nback()\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Export the current note as a file, email it to jane.doe@example.com, and then delete the note", "solution": "tap($export_as_file)\n# email the file\n# Assume the email program opens up and we send the email\nback()\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the app settings, change the theme to dark mode, and then show information about the app.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($about)"}
{"task": "Open 'more options' in the current note, tap 'Settings', and then check 'Show word count', 'Make links and emails clickable' and 'Use monospaced font'", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_word_count)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)"}
{"task": "Open the settings in the Notes app and make links and emails clickable, then open more options for the current checklist", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_make_links_and_emails_clickable)\nback()\ntap($more_options_checklist)"}
{"task": "Set the font size to large in the Notes app settings and open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('150%')[0])\nback()\ntap($more_options_checklist)"}
{"task": "Customize the colors of the app and then set the theme of the app to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Dark red')[0])\ntap($save_set_colors)\nback()\nback()"}
{"task": "Open the settings of the app, customize the colors, and set the theme of the app to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Dark')[0])\ntap($save_set_colors)\nback()\nback()"}
{"task": "Open the more options for the current note and then set the theme of the app to light", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Light')[0])\ntap($save_set_colors)\nback()\nback()\nback()"}
{"task": "Switch to the next note, show its title, then return to the current note, and display all items in the current checklist", "solution": "tap($switch_to_next_item)\ncurrent_title = get_text($item_title)\ntap($switch_to_prev_item)\nchecklist_items = $checklist_item_list\nall_items = [get_text(item) for item in checklist_items]\nprint('Title:', current_title, 'Checklist Items:', all_items)"}
{"task": "Show the title of the current note, then switch to the next checklist item, and display all items in its checklist", "solution": "current_title = get_text($item_title)\nprint('Title:', current_title)\ntap($switch_to_next_item)\nchecklist_items = $checklist_item_list\nall_items = [get_text(item) for item in checklist_items]\nprint('Checklist Items:', all_items)"}
{"task": "Open the settings menu and customize the app colors by setting the text color to blue and the background color to yellow", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'blue')\nset_text($set_background_color, 'yellow')\ntap($save_set_colors)\nback()"}
{"task": "Open the more options for the current note, set the text color to blue, and then change the background color to yellow", "solution": "tap($more_options_note)\ntap($set_text_color)\nset_text($set_text_color, 'blue')\nset_text($set_background_color, 'yellow')\nback()"}
{"task": "Open the theme color settings and apply the 'Auto light/dark' theme color, then update the primary color to green", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)\nback()"}
{"task": "Open the Notes app and add a new note titled 'Shopping List', then add the items 'Milk, Bread, Eggs, Coffee'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Eggs')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Coffee')\ntap($add_checklist_item_ok)"}
{"task": "Open the Notes app, rename the current 'Work Notes' to 'Project Ideas', and add the content 'Brainstorm app features'.", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Ideas')\ntap($rename_ok)\nset_text($note_content, 'Brainstorm app features')\ntap($save_note)"}
{"task": "Create a new note with the title 'Vacation Plans' and add the content 'Book flights, Reserve hotel, Plan itinerary'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Plans')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Book flights, Reserve hotel, Plan itinerary')\ntap($save_note)"}
{"task": "In the Notes app, rename the note 'Todo List' to 'My Tasks', then add the tasks 'Call plumber, Finish report, Send email to team'.", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nnote_idx = None\nfor idx in range(len(open_note_title_list)):\n    if get_text(open_note_title_list[idx]) == 'Todo List':\n        note_idx = idx\n        break\ntap(open_note_title_list[note_idx])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'My Tasks')\ntap($rename_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call plumber')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Finish report')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Send email to team')\ntap($add_checklist_item_ok)"}
{"task": "Open the Notes app, create a new note titled 'Weekly Goals', and list the goals 'Finish reading book, Exercise 3 times, Complete budget review'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekly Goals')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Finish reading book')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Exercise 3 times')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Complete budget review')\ntap($add_checklist_item_ok)"}
{"task": "Open more options for the current note and then turn on autosave for notes", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_autosave_notes)\nback()"}
{"task": "Open more options for the current checklist, turn off autosave for notes, and then export all notes", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_autosave_notes)\nback()\ntap($export_notes)\nback()"}
{"task": "Turn on display of save success messages, open the settings menu, and then turn off autosave for notes", "solution": "tap($settings)\ntap($set_display_save_success_messages)\ntap($set_autosave_notes)\nback()"}
{"task": "Import notes from a file, then turn on autosave for notes, and finally turn off display of save success messages", "solution": "tap($settings)\ntap($import_notes)\ntap($set_autosave_notes)\ntap($set_display_save_success_messages)\nback()"}
{"task": "Turn off autosave for notes, then open more options for the current note, and finally export all notes", "solution": "tap($settings)\ntap($set_autosave_notes)\nback()\ntap($more_options_note)\ntap($export_notes)\nback()"}
{"task": "Set the app icon color to red and change text color of the Notes APP to purple", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'red')\ntap($current_font_size)\nset_text($set_text_color, 'purple')\ntap($save_set_colors)"}
{"task": "Change primary color of the Notes APP to orange and open the settings of the Notes APP", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'orange')\ntap($save_set_colors)"}
{"task": "Set the background color to light yellow and customize the colors in the Notes APP", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'light yellow')\ntap($save_set_colors)"}
{"task": "Set the text color to blue and change the app icon color of the Notes APP to navy blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'blue')\ntap($set_app_icon_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'navy blue')\ntap($save_set_colors)"}
{"task": "Open the more options of the current note and set the primary color to green", "solution": "tap($more_options_note)\ntap($set_primary_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'green')\ntap($save_set_colors)"}
{"task": "Switch to the next item three times and then show the title of the current item", "solution": "for _ in range(3):\n    tap($switch_to_next_item)\ncurrent_title = get_text($item_title)\nprint(current_title)"}
{"task": "Show the title of the current item, switch to the previous item, and show the title again", "solution": "current_title = get_text($item_title)\nprint(current_title)\ntap($switch_to_prev_item)\nnew_title = get_text($item_title)\nprint(new_title)"}
{"task": "Open the note titled 'Grocery List' and rename the checklist item 'Buy Milk' to 'Purchase Milk' then move the checklist item 'Finish Report' to the bottom of the list", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Grocery List':\n        tap(notes[i])\n        break\nchecklist_items = $checklist_item_list\nfor i in range(len(checklist_items)):\n    if get_text(checklist_items[i]) == 'Buy Milk':\n        long_tap(checklist_items[i])\n        tap($rename_selected_checklist_item)\n        set_text($rename_input, 'Purchase Milk')\n        tap($rename_ok)\n    elif get_text(checklist_items[i]) == 'Finish Report':\n        long_tap(checklist_items[i])\n        tap($move_selected_item_to_the_buttom)\n        break"}
{"task": "Open the note titled 'Holiday Plans', rename the checklist item 'Book Flights' to 'Reserve Flights' and delete the checklist item 'Pay Bills'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Holiday Plans':\n        tap(notes[i])\n        break\nchecklist_items = $checklist_item_list\nfor i in range(len(checklist_items)):\n    if get_text(checklist_items[i]) == 'Book Flights':\n        long_tap(checklist_items[i])\n        tap($rename_selected_checklist_item)\n        set_text($rename_input, 'Reserve Flights')\n        tap($rename_ok)\n    elif get_text(checklist_items[i]) == 'Pay Bills':\n        long_tap(checklist_items[i])\n        tap($delete_selected_checklist_item)\n        break"}
{"task": "Open the note titled 'Meeting Minutes', move the checklist item 'Finish Report' to the bottom of the list and save the note titled 'Daily Journal'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Meeting Minutes':\n        tap(notes[i])\n        break\nchecklist_items = $checklist_item_list\nfor i in range(len(checklist_items)):\n    if get_text(checklist_items[i]) == 'Finish Report':\n        long_tap(checklist_items[i])\n        tap($move_selected_item_to_the_buttom)\n        break\nback()\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Daily Journal':\n        tap(notes[i])\n        break\ntap($save_note)"}
{"task": "Open the Notes app and create a new note titled 'Birthday Party', then add the content 'Send invitations, Order cake, Decorate house'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Birthday Party')\ntap($text_note_type)\ntap($add_note_ok)\ntap($note_content)\nset_text($note_content, 'Send invitations, Order cake, Decorate house')\ntap($save_note)"}
{"task": "In the Notes app, rename the note 'Old Notes' to 'Archived Ideas', then move it to the 'Archives' folder.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nold_note = note_titles.match('Old Notes')[0]\ntap(old_note)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Archived Ideas')\ntap($rename_ok)\ntap($settings)\ntap($folder)\nset_text($move_to_folder, 'Archives')\ntap($save_note)"}
{"task": "Open the note's settings and set the font size to 150%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Open the options for the current note and then open the settings of the app from more options of the note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the options for the current checklist and set the font size to 175%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nback()"}
{"task": "Save the current note and then open the note titled 'Meeting Agenda'", "solution": "tap($save_note)\ntap($open_note)\ntap($open_note_title_list.match('Meeting Agenda')[0])"}
{"task": "Search for 'birthday' within the current note, and then delete the checklist item labeled 'Find Venue'", "solution": "tap($search_within_note)\nset_text($search_text, 'birthday')\ntap($more_options_checklist)\ntap($checklist_item_list.match('Find Venue')[0])\ntap($delete_selected_checklist_item_ok)"}
{"task": "Rename the selected checklist item to 'Call Mom', save the current note, and then open the note titled 'Family Reunion'", "solution": "long_tap($checklist_item_list.match({'selected': true})[0])\nset_text($rename_input, 'Call Mom')\ntap($rename_ok)\ntap($save_note)\ntap($open_note)\ntap($open_note_title_list.match('Family Reunion')[0])"}
{"task": "Delete the checklist item labeled 'Pay Bills', search for 'appointment' within the current note, and then save the note", "solution": "tap($checklist_item_list.match('Pay Bills')[0])\ntap($delete_selected_checklist_item_ok)\ntap($search_within_note)\nset_text($search_text, 'appointment')\ntap($save_note)"}
{"task": "Open the note titled 'Travel Packing List', rename the selected checklist item to 'Pack Passport', and save the current note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Travel Packing List')[0])\nlong_tap($checklist_item_list.match({'selected': true})[0])\nset_text($rename_input, 'Pack Passport')\ntap($rename_ok)\ntap($save_note)"}
{"task": "Switch to the next note and show the title of the current note.", "solution": "tap($switch_to_next_item)\nget_text($item_title)"}
{"task": "Switch to the previous note, show the checklist items in the current list, and show the content of the first checklist item.", "solution": "tap($switch_to_prev_item)\nfor checklist_item in $checklist_item_list:\n\tprint(get_text(checklist_item))\nget_text($checklist_item_list[0])"}
{"task": "Show the title of the current note and then switch to the next note.", "solution": "print(get_text($item_title))\ntap($switch_to_next_item)"}
{"task": "Switch to the next note, show the checklist items in the current list, and show the content of the second checklist item.", "solution": "tap($switch_to_next_item)\nfor checklist_item in $checklist_item_list:\n\tprint(get_text(checklist_item))\nget_text($checklist_item_list[1])"}
{"task": "Switch to the next note, show the checklist items in the current list, and then show the content of the third checklist item.", "solution": "tap($switch_to_next_item)\nfor checklist_item in $checklist_item_list:\n\tprint(get_text(checklist_item))\nget_text($checklist_item_list[2])"}
{"task": "Customize the app colors by setting the text color to blue and the app icon color to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\nset_text($theme_color_custom, 'blue')\ntap($save_set_colors)\ntap($set_app_icon_color)\nset_text($theme_color_custom, 'red')\ntap($save_set_colors)"}
{"task": "Open the settings menu and change the background color to yellow before setting the theme color to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($theme_color_custom, 'yellow')\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open the more options for the current checklist and set the app icon color to red", "solution": "tap($more_options_checklist)\ntap($set_app_icon_color)\nset_text($theme_color_custom, 'red')\ntap($save_set_colors)"}
{"task": "Open the theme color settings, apply the 'Auto light/dark' theme color, and then set the text color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\ntap($set_text_color)\nset_text($theme_color_custom, 'blue')\ntap($save_set_colors)"}
{"task": "Open the settings menu and update the primary color to green followed by opening the more options for the current note and setting the theme color to dark mode.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($theme_color_custom, 'green')\ntap($save_set_colors)\nback()\ntap($more_options_note)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open the settings menu, then enable clickable links and emails followed by enabling monospaced font", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)"}
{"task": "Open the settings menu, enable Incognito mode for keyboards, and then enable line wrap", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_enable_line_wrap)"}
{"task": "Open the more options menu for the current note, then open the settings menu and customize the app colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Open the settings menu, change the alignment settings, then enable line wrap", "solution": "tap($settings)\ntap($set_alignment)\ntap($set_enable_line_wrap)"}
{"task": "Open the more options menu for the current checklist, followed by opening the settings menu and enabling Incognito mode for keyboards", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open the more options for the current note, open the settings of the app, and then set the theme of the app to dark", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Dark')[0])\ntap($save_set_colors)"}
{"task": "Open the more options for the current checklist, customize the colors of the app, and set the theme of the app to white", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('White')[0])\ntap($save_set_colors)"}
{"task": "Customize the colors of the app, then open the more options for the current checklist and set the theme of the app to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($close_set_colors)\ntap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Dark')[0])\ntap($save_set_colors)"}
{"task": "Open the settings of the app, set the theme of the app to light, and then customize the colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Light')[0])\ntap($save_set_colors)\ntap($set_colors)"}
{"task": "Set the theme color of the app, customize the colors, and open the more options for the current checklist", "solution": "tap($set_theme_color)\ntap($set_colors)\ntap($close_set_colors)\ntap($more_options_checklist)"}
{"task": "Open 'more options' in the current checklist, tap 'Settings', uncheck both 'Show word count' and 'Make links and emails clickable', and then display the current font size", "solution": "tap($more_options_checklist)\ntap($settings)\nif get_attributes($set_show_word_count)[\"checked\"]:\n    tap($set_show_word_count)\nif get_attributes($set_make_links_and_emails_clickable)[\"checked\"]:\n    tap($set_make_links_and_emails_clickable)\ntap($current_font_size)\ncurrent_font_size = get_text($font_size_types.match({\"selected\": true})[0])\nprint(current_font_size)"}
{"task": "Tap 'Settings' from 'more options' in the current note, check 'Show word count', then without leaving the settings, also check 'Use monospaced font' and display the current font size", "solution": "tap($more_options_note)\ntap($settings)\nif not get_attributes($set_show_word_count)[\"checked\"]:\n    tap($set_show_word_count)\nif not get_attributes($set_use_monospaced_font)[\"checked\"]:\n    tap($set_use_monospaced_font)\ntap($current_font_size)\ncurrent_font_size = get_text($font_size_types.match({\"selected\": true})[0])\nprint(current_font_size)"}
{"task": "Open 'more options' in the current checklist, go to 'Settings', ensure all checkboxes ('Show word count', 'Make links and emails clickable', 'Use monospaced font') are checked, then confirm the settings by displaying the current font size", "solution": "tap($more_options_checklist)\ntap($settings)\nif not get_attributes($set_show_word_count)[\"checked\"]:\n    tap($set_show_word_count)\nif not get_attributes($set_make_links_and_emails_clickable)[\"checked\"]:\n    tap($set_make_links_and_emails_clickable)\nif not get_attributes($set_use_monospaced_font)[\"checked\"]:\n    tap($set_use_monospaced_font)\ntap($current_font_size)\ncurrent_font_size = get_text($font_size_types.match({\"selected\": true})[0])\nprint(current_font_size)"}
{"task": "In the current note, tap 'more options', go to 'Settings', check 'Make links and emails clickable', uncheck 'Use monospaced font', and check 'Show word count'", "solution": "tap($more_options_note)\ntap($settings)\nif not get_attributes($set_make_links_and_emails_clickable)[\"checked\"]:\n    tap($set_make_links_and_emails_clickable)\nif get_attributes($set_use_monospaced_font)[\"checked\"]:\n    tap($set_use_monospaced_font)\nif not get_attributes($set_show_word_count)[\"checked\"]:\n    tap($set_show_word_count)"}
{"task": "Open 'more options' in the current checklist, tap 'Settings', first uncheck all checkboxes ('Show word count', 'Make links and emails clickable', 'Use monospaced font'), then check 'Show word count' only", "solution": "tap($more_options_checklist)\ntap($settings)\nif get_attributes($set_show_word_count)[\"checked\"]:\n    tap($set_show_word_count)\nif get_attributes($set_make_links_and_emails_clickable)[\"checked\"]:\n    tap($set_make_links_and_emails_clickable)\nif get_attributes($set_use_monospaced_font)[\"checked\"]:\n    tap($set_use_monospaced_font)\ntap($set_show_word_count)"}
{"task": "Open app settings from the more options in the current checklist and then customize the app's colors through the settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the app's theme color to auto light/dark after opening theme settings and then switch the app's theme to light mode through the theme settings", "solution": "tap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($theme_color_light)"}
{"task": "Switch the app's theme color to dark from the theme settings and then change the theme color to dark red using the theme settings menu", "solution": "tap($theme_color_dark)\ntap($theme_color_dark_red)"}
{"task": "Open more options in the current note, go to settings, and set the app's theme to white through the theme settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Open app settings from the more options in the current checklist and then switch the app's theme to black and white using the theme settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Open the settings menu, enable clickable links and emails, enable monospaced font, and then customize the app colors", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)\ntap($set_colors)"}
{"task": "Open the settings menu, enable line wrap, then close the customize colors popup window", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_colors)\ntap($close_set_colors)"}
{"task": "Open the more options menu for the current note, then open the settings menu and change the alignment settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_alignment)"}
{"task": "Open the settings of the notes app and enable line wrap", "solution": "tap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Open more options for the current note and then customize the colors of the notes app", "solution": "tap($more_options_note)\ntap($set_colors)"}
{"task": "View the current font size of the app and set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Set the app's font size to 250% and then set the font size of the current note to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($close_set_colors)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Open the note's settings and change the font size to 175%, then view the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($current_font_size)"}
{"task": "Open the options for the current note and set the font size to 200% in the settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Open the note's settings and set the font size to 150%, then change it to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($current_font_size)\ntap($font_size_175%)"}
{"task": "Switch to the previous note and then show the content of the first and second checklist items.", "solution": "tap($switch_to_prev_item)\nlong_tap($checklist_item_list[0])\ncontent_first_item = get_text($checklist_item)\nlong_tap($checklist_item_list[1])\ncontent_second_item = get_text($checklist_item)\nprint(content_first_item, content_second_item)"}
{"task": "Show the checklist items in the current list, show the content of the second checklist item, and then switch to the next note.", "solution": "checklist_items = $checklist_item_list\nfor item in checklist_items:\n    print(get_text(item))\nlong_tap(checklist_items[1])\ncontent_second_item = get_text($checklist_item)\nprint(content_second_item)\ntap($switch_to_next_item)"}
{"task": "Switch to the next note, show the title of the current note, and then switch to the previous note.", "solution": "tap($switch_to_next_item)\ntitle = get_text($item_title)\nprint(title)\ntap($switch_to_prev_item)"}
{"task": "Open the more options for the current note and customize the app colors to blue and white", "solution": "tap($more_options_note)\ntap($set_colors)\nset_text($set_background_color, 'white')\nset_text($set_text_color, 'blue')\ntap($save_set_colors)"}
{"task": "Open the settings from the more options of the current checklist and set the app font size to 14pt", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Open the more options menu for the current note and then enable the option to autosave notes", "solution": "tap($more_options_note)\ntap($settings)\nif not get_attributes($set_autosave_notes)[\"checked\"]:\n    tap($set_autosave_notes)"}
{"task": "Open the settings menu and then enable the option to show the keyboard on startup", "solution": "tap($settings)\nif not get_attributes($set_show_keyboard_on_startup)[\"checked\"]:\n    tap($set_show_keyboard_on_startup)"}
{"task": "Open the settings menu, enable the option to autosave notes, and then enable the option to place the cursor at the end of the note", "solution": "tap($settings)\nif not get_attributes($set_autosave_notes)[\"checked\"]:\n    tap($set_autosave_notes)\nif not get_attributes($set_place_cursor_to_the_end_of_note)[\"checked\"]:\n    tap($set_place_cursor_to_the_end_of_note)"}
{"task": "Open the more options menu for the current checklist and then open the settings menu to enable the option to show the keyboard on startup", "solution": "tap($more_options_checklist)\ntap($settings)\nif not get_attributes($set_show_keyboard_on_startup)[\"checked\"]:\n    tap($set_show_keyboard_on_startup)"}
{"task": "Open the settings menu, enable the option to place the cursor at the end of the note, then enable the option to show a note picker on startup", "solution": "tap($settings)\nif not get_attributes($set_place_cursor_to_the_end_of_note)[\"checked\"]:\n    tap($set_place_cursor_to_the_end_of_note)\nif not get_attributes($set_show_a_note_picker_on_startup)[\"checked\"]:\n    tap($set_show_a_note_picker_on_startup)"}
{"task": "Create a new note entitled 'Project Roadmap' and type 'Milestone 1: Research, Milestone 2: Development, Milestone 3: Testing' then save it", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Roadmap')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Milestone 1: Research, Milestone 2: Development, Milestone 3: Testing')\ntap($save_note)"}
{"task": "Switch to the next note in the list, then scroll to the previous item in the checklist", "solution": "tap($switch_to_next_item)\nscroll($switch_item, 'up')"}
{"task": "Open the note titled 'Workout Routine', open more options for the current checklist, then scroll to the previous item", "solution": "tap($open_note)\n$open_note_title_list.match('Workout Routine')[0]\ntap($more_options_checklist)\nscroll($switch_item, 'up')"}
{"task": "Create a new note entitled 'Holiday Packing List' and type 'Sunglasses, Sunscreen, Tickets, Passport' then save it, then switch to the next note in the list", "solution": "tap($create_note)\nset_text($add_note_title, 'Holiday Packing List')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Sunglasses, Sunscreen, Tickets, Passport')\ntap($save_note)\ntap($switch_to_next_item)"}
{"task": "Open more options for the current checklist, switch to the next note in the list, then scroll to the previous item", "solution": "tap($more_options_checklist)\ntap($switch_to_next_item)\nscroll($switch_item, 'up')"}
{"task": "Customize the app's colors through the settings after opening more options in the current note and then set the app's theme to auto light/dark from the theme settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\nback()"}
{"task": "Set the app's theme to light mode by first opening theme settings and then customize the app's colors through the settings", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\nback()"}
{"task": "Switch the app's theme color to dark red using the theme settings menu after setting the app's theme to dark through the theme settings", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($theme_color_dark_red)\ntap($save_set_colors)\nback()"}
{"task": "Rename the note titled 'Meeting Notes' to 'Project Meeting Notes' then create a shortcut for it", "solution": "tap($open_note)\ntap($open_note_title.match('Meeting Notes'))\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Meeting Notes')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)\nback()"}
{"task": "Lock the checklist 'Weekend Tasks', rename it to 'Weekend Activities', and print it", "solution": "tap($open_note)\ntap($open_note_title.match('Weekend Tasks'))\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($rename_note)\nset_text($rename_input, 'Weekend Activities')\ntap($rename_ok)\ntap($more_options_note)\ntap($print_note)\nback()"}
{"task": "From the current note, enter 'more options', go to 'Settings', display the current font size, then check 'Use monospaced font', and 'Show word count', then confirm by tapping out", "solution": "tap($more_options_note)\ntap($settings)\ncurrent_font_size = get_text($current_font_size)\ntap($set_use_monospaced_font)\ntap($set_show_word_count)\nback()"}
{"task": "In the current checklist, tap 'more options', go to 'Settings', ensure 'Make links and emails clickable' is checked, uncheck 'Use monospaced font', and recheck 'Show word count'", "solution": "tap($more_options_checklist)\ntap($settings)\nif not get_attributes($set_make_links_and_emails_clickable)['checked']:\n    tap($set_make_links_and_emails_clickable)\nif get_attributes($set_use_monospaced_font)['checked']:\n    tap($set_use_monospaced_font)\nif not get_attributes($set_show_word_count)['checked']:\n    tap($set_show_word_count)\nback()"}
{"task": "Open the settings in the Notes app and customize the colors of the Notes app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Open the settings in the Notes app, scroll through the settings page, and customize the widget colors in the Notes app", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_widget_colors)"}
{"task": "Open more options for the current note and customize the colors of the Notes app", "solution": "tap($more_options_note)\ntap($set_colors)"}
{"task": "Create a new note titled 'Weekly Review', then search for the word 'meeting' within the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekly Review')\ntap($text_note_type)\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Open the note titled 'Project Plan', find the next occurrence of the word 'budget', then close the search box for matching text", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Plan')[0])\ntap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Create a new note titled 'Workout Routine', select the 'text note' type, then find the previous occurrence of the word 'report' in the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Routine')\ntap($text_note_type)\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'report')\ntap($prev_matched_text)"}
{"task": "Search for the word 'meeting' within the current note, find the next occurrence, then close the search box for matching text", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Create a new note titled 'Travel Itinerary', select the 'text note' type, search for the word 'trip', then open the note titled 'Project Plan'", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Itinerary')\ntap($text_note_type)\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'trip')\ntap($close_search_box)\ntap($open_note)\ntap($open_note_title_list.match('Project Plan')[0])"}
{"task": "Rename the checklist item 'Buy Milk' to 'Purchase Milk' in the note titled 'Grocery List' and delete the checklist item 'Call Doctor'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\ntap($checklist_item_list.match('Buy Milk')[0])\nlong_tap($checklist_item_list.match('Buy Milk')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase Milk')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Call Doctor')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Open the note titled 'Holiday Plans', rename the checklist item 'Book Flights' to 'Reserve Flights', then save the note titled 'Daily Journal' and delete the checklist item 'Pay Bills'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Holiday Plans')[0])\nlong_tap($checklist_item_list.match('Book Flights')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Reserve Flights')\ntap($rename_ok)\nback()\ntap($open_note_title_list.match('Daily Journal')[0])\ntap($save_note)\nlong_tap($checklist_item_list.match('Pay Bills')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Open the note titled 'Grocery List', move the checklist item 'Finish Report' to the bottom of the list, rename the checklist item 'Buy Milk' to 'Purchase Milk' and delete the checklist item 'Call Doctor'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\nlong_tap($checklist_item_list.match('Finish Report')[0])\ntap($move_selected_item_to_the_buttom)\nlong_tap($checklist_item_list.match('Buy Milk')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase Milk')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Call Doctor')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Open the note titled 'Meeting Minutes' and move the checklist item 'Finish Report' to the bottom of the list, then open the note titled 'Daily Journal' and save it", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Minutes')[0])\nlong_tap($checklist_item_list.match('Finish Report')[0])\ntap($move_selected_item_to_the_buttom)\nback()\ntap($open_note_title_list.match('Daily Journal')[0])\ntap($save_note)"}
{"task": "Open the note titled 'Holiday Plans', rename the checklist item 'Book Flights' to 'Reserve Flights', then move the checklist item 'Finish Report' to the bottom of the list and delete the checklist item 'Pay Bills'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Holiday Plans')[0])\nlong_tap($checklist_item_list.match('Book Flights')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Reserve Flights')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Finish Report')[0])\ntap($move_selected_item_to_the_buttom)\nlong_tap($checklist_item_list.match('Pay Bills')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Set the notes app alignment to right and change the text color in the notes app to black", "solution": "tap($settings)\ntap($set_alignment)\ntap($alignment_types.match('Right')[0])\nback()\ntap($set_colors)\ntap($set_text_color)\ntap($text_color_types.match('Black')[0])\ntap($save_set_colors)"}
{"task": "Open the settings of the notes app, set the theme color to blue, and save the current color settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Blue')[0])\ntap($save_set_colors)"}
{"task": "Customize the colors of the notes app and then close the color settings popup", "solution": "tap($settings)\ntap($set_colors)\ntap($close_set_colors)"}
{"task": "Open more options for the current checklist, set the theme color to blue, and enable line wrap", "solution": "tap($more_options_checklist)\ntap($set_theme_color)\ntap($theme_color_types.match('Blue')[0])\ntap($save_set_colors)\ntap($set_enable_line_wrap)"}
{"task": "Change the text color in the notes app to black and then set the alignment to right", "solution": "tap($set_colors)\ntap($set_text_color)\ntap($text_color_types.match('Black')[0])\ntap($save_set_colors)\nback()\ntap($settings)\ntap($set_alignment)\ntap($alignment_types.match('Right')[0])\nback()"}
{"task": "Create a new note entitled 'Books to Read' and type '1984, Brave New World, Fahrenheit 451' then save it, open the note titled 'Meeting Notes'", "solution": "tap($create_note)\nset_text($add_note_title, 'Books to Read')\ntap($text_note_type)\nset_text($note_content, '1984, Brave New World, Fahrenheit 451')\ntap($save_note)\ntap($open_note)\n$open_note_title_list.match('Meeting Notes')[0].tap()"}
{"task": "Switch to the next note in the list, create a new note entitled 'Weekly Tasks' and type 'Monday: Clean House, Tuesday: Buy Groceries, Wednesday: Laundry' then save it", "solution": "tap($switch_to_next_item)\ntap($create_note)\nset_text($add_note_title, 'Weekly Tasks')\ntap($text_note_type)\nset_text($note_content, 'Monday: Clean House, Tuesday: Buy Groceries, Wednesday: Laundry')\ntap($save_note)"}
{"task": "Open the note titled 'Grocery List', then switch to the next note in the list", "solution": "tap($open_note)\n$open_note_title_list.match('Grocery List')[0].tap()\ntap($switch_to_next_item)"}
{"task": "Open the more options menu of the current note and then open the settings of the app from the current note options. Set the font size to 100%.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('100%')[0])"}
{"task": "Open the settings of the app from the current checklist options, open the customize colors option from the settings, and set the theme color to Black & White.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Show the current app font size and then customize the widget colors to green and yellow", "solution": "tap($settings)\ntap($current_font_size)\n# Assuming the font size is shown in the title\nfont_size = get_text($item_title)\nprint(f'Current font size: {font_size}')\ntap($back)\ntap($back)\ntap($set_widget_colors)\ntap($set_theme_color)\ntap($set_colors)\ntap($customize_theme)\ntap($customize_text_color)\ntap($customize_primary_ok)\ntap($customize_background_color)\ntap($save_set_colors)\n"}
{"task": "Open the more options for the current note and then open the settings to customize the app colors to red and black", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($theme_color_dark_red)\ntap($set_background_color)\ntap($theme_color_black_white) \ntap($save_set_colors) \n"}
{"task": "Customize the widget colors to purple and grey and then show the current app font size", "solution": "tap($set_widget_colors)\ntap($set_theme_color)\ntap($theme_color_purple)\ntap($set_background_color)\ntap($theme_color_grey) \ntap($save_set_colors) \ntap($settings)\ntap($current_font_size)\n# Assuming the font size is shown in the title\nfont_size = get_text($item_title)\nprint(f'Current font size: {font_size}')\ntap($back) \ntap($back) \n"}
{"task": "Open the more options for the current checklist and then customize the app colors to orange and teal", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($theme_color_orange) \ntap($set_background_color)\ntap($theme_color_teal) \ntap($save_set_colors) \n"}
{"task": "Set the app font size to 12pt and then open the more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_12pt)\nback()\ntap($back)\ntap($more_options_note)\n"}
{"task": "Open the more options menu for the current note, then open the settings menu to enable the option to show the keyboard on startup and the option to autosave notes", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_autosave_notes)"}
{"task": "Open the settings menu and enable all available options", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_enable_line_wrap)\ntap($set_show_word_count)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_show_a_note_picker_on_startup)\ntap($set_autosave_notes)\ntap($set_display_save_success_messages)\ntap($set_enable_automatic_backups)"}
{"task": "Open the more options menu for the current checklist, open the settings menu, and then enable the options to place the cursor at the end of the note and to show a note picker on startup.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Rename the current note to 'Work Meeting Notes', lock the current note, and create a shortcut for the current note on the home screen", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Work Meeting Notes')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Rename the current note to 'Vacation Plans', open the current note's file, and then lock the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Vacation Plans')\ntap($rename_ok)\ntap($more_options_note)\ntap($open_file)\ntap($back)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open more options for the current checklist and then open the settings in the Notes app to customize the widget colors", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_widget_colors)"}
{"task": "Open the settings in the Notes app, scroll through the settings page, and exit the settings page in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($exit_settings)"}
{"task": "Open more options for the current checklist, open the settings in the Notes app, and customize the colors of the Notes app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Scroll through the settings page in the Notes app and customize the widget colors in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_widget_colors)"}
{"task": "Open more options for the current note, then open the settings in the Notes app, and customize the colors of the Notes app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Open the note titled 'Grocery List', then create a new note titled 'Weekend Plans'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\ntap($create_note)\nset_text($add_note_title, 'Weekend Plans')\ntap($add_note_ok)"}
{"task": "Search for the word 'budget' within the current note, then create a new note titled 'Expense Tracking', and search for the word 'report' within that note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($create_note)\nset_text($add_note_title, 'Expense Tracking')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'report')"}
{"task": "Create a new note titled 'Daily Tasks', search for the word 'meeting', find the next occurrence, and then close the search box for matching text", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Tasks')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Enable line wrap in the Notes app and then set the text alignment to center", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($theme_color_types.match('Center')[0])\ntap($sort_checklist_items_ok)\ntap($exit_settings)"}
{"task": "Open more options for the current note, navigate to the settings of the Notes app, and enable dark mode", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Dark')[0])\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the app settings and change the font size to large, then enable the show word count option", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($set_show_word_count)"}
{"task": "Customize the widget colors to blue and white and then use a monospaced font", "solution": "tap($settings)\ntap($set_widget_colors)\nset_text($set_text_color, 'blue')\ntap($save_set_colors)\nset_text($set_background_color, 'white')\ntap($save_set_colors)\ntap($set_use_monospaced_font)"}
{"task": "Access more options for the current note and make links and emails clickable", "solution": "tap($more_options_note)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Enable the show word count option and then use a monospaced font", "solution": "tap($settings)\ntap($set_show_word_count)\ntap($set_use_monospaced_font)"}
{"task": "Access more options for the current checklist and make links and emails clickable", "solution": "tap($more_options_checklist)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Enable display save success messages in settings and then export notes in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_display_save_success_messages)\ntap($export_notes)"}
{"task": "Open more options for the current note and then enable automatic backups in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_enable_automatic_backups)"}
{"task": "Open more options for the current checklist and then import notes in settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($import_notes)"}
{"task": "Enable display save success messages in settings, enable automatic backups in settings, and then export notes in settings", "solution": "tap($settings)\ntap($set_display_save_success_messages)\ntap($set_enable_automatic_backups)\ntap($export_notes)"}
{"task": "Open more options for the current note, enable display save success messages in settings, and then import notes in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_display_save_success_messages)\ntap($import_notes)"}
{"task": "Open the settings of the notes app, customize the colors of the notes app, and save the current color settings.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($save_set_colors)\n"}
{"task": "Enable 'Show word count', 'Make links and emails clickable', and 'Use monospace font' options in the app settings.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_word_count)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)\n"}
{"task": "Open the more options menu for the current note and go to the app settings, then set the font size to 18 points and enable 'Use Incognito mode of keyboards'.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('100%')[0])\ntap($font_size_175%)\ntap($set_use_incognito_mode_of_keyboards)\n"}
{"task": "Disable 'Show word count' and 'Make links and emails clickable' options, then check the current font size being used in the Notes app.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_word_count)\ntap($set_make_links_and_emails_clickable)\nscroll($scroll_settings_page, 'down')\ntap($current_font_size)\n"}
{"task": "Enable the 'Show word count' option, then disable 'Use Incognito mode of keyboards' and 'Use monospace font' options.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_word_count)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_use_monospaced_font)\n"}
{"task": "Export the note 'Travel Plan' as a file and then send it via email to john.doe@example.com", "solution": "\ntap($open_note)\nnotes = $open_note_title_list\nnote_to_export = notes.match(\"Travel Plan\")[0]\ntap(note_to_export)\ntap($more_options_note)\nmore_options = $more_option_note_buttons.match({\"text\": \"Export as file\"})\ntap(more_options[0])\n# exporting note as a file manually triggers an email share option"}
{"task": "Rename the note 'Personal Diary' to 'My Journal', lock it, and create a shortcut for it", "solution": "\ntap($open_note)\nnotes = $open_note_title_list\nnote_to_rename = notes.match(\"Personal Diary\")[0]\ntap(note_to_rename)\ntap($more_options_note)\nmore_options = $more_option_note_buttons.match({\"text\": \"Rename note\"})\ntap(more_options[0])\nset_text($rename_input, \"My Journal\")\ntap($rename_ok)\ntap($more_options_note)\nmore_options = $more_option_note_buttons.match({\"text\": \"Lock note\"})\ntap(more_options[0])\ntap($lock_note_ok)\ntap($more_options_note)\nmore_options = $more_option_note_buttons.match({\"text\": \"Create shortcut\"})\ntap(more_options[0])"}
{"task": "Open the file of the note 'Ideas for Blog', append new ideas, and save the file", "solution": "\ntap($open_note)\nnotes = $open_note_title_list\nnote_to_open = notes.match(\"Ideas for Blog\")[0]\ntap(note_to_open)\ntap($more_options_note)\nmore_options = $more_option_note_buttons.match({\"text\": \"Open file\"})\ntap(more_options[0])\n# assuming new ideas are provided\new_ideas = \"New Blog Idea 1\\nNew Blog Idea 2\"\nset_text($note_content, get_text($note_content) + \"\\n\" + new_ideas)\ntap($save_note)"}
{"task": "Print the note 'Recipe for Lasagna' and then create a shortcut for it", "solution": "\ntap($open_note)\nnotes = $open_note_title_list\nnote_to_print = notes.match(\"Recipe for Lasagna\")[0]\ntap(note_to_print)\ntap($more_options_note)\nmore_options = $more_option_note_buttons.match({\"text\": \"Print\"})\ntap(more_options[0])\ntap($more_options_note)\nmore_options = $more_option_note_buttons.match({\"text\": \"Create shortcut\"})\ntap(more_options[0])"}
{"task": "Create a shortcut for the checklist 'Daily Workout Plan', lock it, and export it as a file", "solution": "\ntap($open_note)\nnotes = $open_note_title_list\nchecklist_to_shortcut = notes.match(\"Daily Workout Plan\")[0]\ntap(checklist_to_shortcut)\ntap($more_options_checklist)\nmore_options = $more_option_checklist_buttons.match({\"text\": \"Create shortcut\"})\ntap(more_options[0])\ntap($more_options_checklist)\nmore_options = $more_option_checklist_buttons.match({\"text\": \"Lock note\"})\ntap(more_options[0])\ntap($lock_note_ok)\ntap($more_options_checklist)\nmore_options = $more_option_checklist_buttons.match({\"text\": \"Export as file\"})\ntap(more_options[0])"}
{"task": "Customize the app colors to pink and brown and then set the app font size to 16pt", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_custom_color)\nset_text($customize_theme, 'pink')\ntap($save_set_colors)\ntap($set_background_color)\nset_text($customize_background_color, 'brown')\ntap($save_set_colors)\ntap($exit_settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($font_size_200%)"}
{"task": "Enable the 'Show word count' option in the settings and then enable the 'Make links and emails clickable' setting", "solution": "tap($settings)\ntap($set_show_word_count)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Enable the 'Use Incognito mode of keyboards' setting and then enable the use of monospaced font for all notes", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_use_monospaced_font)"}
{"task": "Enable the 'Show word count' option in the settings, then open more options for the current note and enable the use of monospaced font", "solution": "tap($settings)\ntap($set_show_word_count)\nback()\ntap($more_options_note)\ntap($set_use_monospaced_font)"}
{"task": "Enable the 'Make links and emails clickable' setting, then open more options for the current checklist and enable the 'Show word count' option", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\nback()\ntap($more_options_checklist)\ntap($set_show_word_count)"}
{"task": "Increase the font size to 18, then enable 'Show word count' option", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($set_show_word_count)\n"}
{"task": "Enable 'Use a monospaced font', then make sure the links and emails are clickable", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_make_links_and_emails_clickable)\n"}
{"task": "Open a specific note titled 'Meeting Notes', and enable the option to wrap lines", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor note in notes:\n    if get_text(note) == 'Meeting Notes':\n        tap(note)\n        break\ntap($set_enable_line_wrap)\n"}
{"task": "For the current checklist on 'Groceries', first open more options, then enable 'incognito mode for keyboards'", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_use_incognito_mode_of_keyboards)\n"}
{"task": "Check the current font size, change it to 14, then open the settings of the app and mark the 'Show word count' option", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_size = [size for size in $font_size_types if get_attributes(size)['selected']][0]\nif get_text(current_size) != '90%':\n    tap($font_size_90%)\ntap($settings)\ntap($set_show_word_count)\n"}
{"task": "Create a shopping list note titled 'Weekly Groceries', open the note's file, and lock the note", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekly Groceries')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($open_file)\nback()\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Project Plan', create a shortcut for this note on the home screen, and then open the note's file", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)\ntap($open_file)"}
{"task": "Rename the current note to 'Daily Journal', lock the note, create a shortcut for the note, and then open the note's file", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Daily Journal')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)\ntap($open_file)"}
{"task": "Create a note titled 'Health Goals', lock the note, and then create a shortcut for it on the home screen", "solution": "tap($create_note)\nset_text($add_note_title, 'Health Goals')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Rename the current note to 'Birthday Party Agenda', open the note's file, and create a shortcut for it on the home screen", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Birthday Party Agenda')\ntap($rename_ok)\ntap($more_options_note)\ntap($open_file)\nback()\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the color customization options, set a custom color scheme and then save the customized colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Navigate to the settings of the Notes app and then enable line wrap", "solution": "tap($settings)\ntap($set_enable_line_wrap)\nback()"}
{"task": "Open more options for the current checklist, enable line wrap in the Notes app and then close the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_enable_line_wrap)\nback()\nback()"}
{"task": "Set the text alignment in the Notes app to justify, open the color customization options, and save the customized colors", "solution": "tap($settings)\ntap($set_alignment)\ntap($theme_color_custom)\ntap($back)\ntap($set_colors)\ntap($set_theme_color)\nback()\ntap($save_set_colors)"}
{"task": "Open more options for the current note, then open the color customization options and close the color customization window", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($close_set_colors)"}
{"task": "Rename the checklist 'Household Chores' to 'Weekend Chores', open its file, and add a new task 'Mow the lawn'", "solution": "tap($open_note)\nchecklists = $open_note_title_list.match('Household Chores')\ntap(checklists[0])\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Weekend Chores')\ntap($rename_ok)\ntap($open_file)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Mow the lawn')\ntap($add_checklist_item_ok)"}
{"task": "Open my last note and show me the title of the current note", "solution": "tap($switch_to_next_item)\nif len($open_note_title_list) > 0: note = $open_note_title_list[-1]\ntap(note)\ntitle = get_text($item_title)\nprint(title)"}
{"task": "Create a new note and open the more options menu for the current checklist", "solution": "tap($create_note)\ntap($add_note_ok)\ntap($more_options_checklist)"}
{"task": "Open my last note, switch to the previous note, and show me the title of the current note", "solution": "tap($switch_to_next_item)\nif len($open_note_title_list) > 0: note = $open_note_title_list[-1]\ntap(note)\ntap($switch_to_prev_item)\ntitle = get_text($item_title)\nprint(title)"}
{"task": "Create a new note, write 'To-do list for tomorrow', and open the more options menu for the current checklist", "solution": "tap($create_note)\nset_text($note_content, 'To-do list for tomorrow')\ntap($save_note)\ntap($more_options_checklist)"}
{"task": "Enable automatic backups in settings and then open more options for the current checklist", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_automatic_backups)\nback()\ntap($more_options_checklist)"}
{"task": "Enable display save success messages in settings, export notes in settings, and then import notes in settings", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_display_save_success_messages)\nscroll($scroll_settings_page, 'down')\ntap($export_notes)\nscroll($scroll_settings_page, 'down')\ntap($import_notes)\nback()"}
{"task": "Open more options for the current checklist, enable display save success messages in settings, and then open more options for the current note", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_display_save_success_messages)\nback()\ntap($more_options_note)"}
{"task": "Rename the current note to 'Weekend Plans' and then lock the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Weekend Plans')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current note and then open the About section in the Notes app", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_checklist)\ntap($about)"}
{"task": "Enable line wrap in the Notes app, set the text alignment to left, and then open the color customization options", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($align_left)\nback()\ntap($set_colors)"}
{"task": "Open settings of the app from the main screen and set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Access more options for the current checklist, then set the font size to 125%", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Open more options for the current note, change the font size to 100%, then adjust the font size to 150%", "solution": "tap($more_options_note)\ntap($set_font_size)\ntap($font_size_100%)\ntap($font_size_150%)\nback()"}
{"task": "Open settings of the app from the main screen and set the font size to 90%, then access more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()\ntap($more_options_checklist)"}
{"task": "Open the app settings, change the font size to large, and then customize the widget colors to green and yellow", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_150%)\nbind()"}
{"task": "Open the app settings, change the font size to large, then use a monospaced font and enable the show word count option", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_150%)\nscroll($scroll_settings_page, 'down')\ntap($set_use_monospaced_font)\ntap($set_show_word_count)\nback()"}
{"task": "Access more options for the current note, make links and emails clickable, then customize the widget colors to red and black", "solution": "tap($more_options_note)\ntap($set_make_links_and_emails_clickable)\ntap($set_widget_colors)\ntap($set_customize_widget_colors)\nset_text($set_background_color, 'red')\nset_text($set_app_icon_color, 'black')\ntap($save_set_colors)\nback()"}
{"task": "Enable the show word count option and then switch to using a monospaced font in the Notes app", "solution": "tap($set_show_word_count)\ntap($set_use_monospaced_font)"}
{"task": "Disable the make links and emails clickable feature, then check more options for the current note in the Notes app", "solution": "tap($set_make_links_and_emails_clickable)\ntap($more_options_note)"}
{"task": "For the current note titled 'Project Plan', enable the option to wrap lines and then make links and emails clickable", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('settings'))\ntap($set_enable_line_wrap)\ntap($set_make_links_and_emails_clickable)"}
{"task": "In the app settings, enable both 'Use a monospaced font', and 'incognito mode for keyboards', then return to the main notes view", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_use_incognito_mode_of_keyboards)\ntap($exit_settings)"}
{"task": "Open the checklist titled 'Daily Tasks', enable 'Show word count' and make sure that lines are wrapped", "solution": "tap($open_note)\ntap($open_note_title_list.match('Daily Tasks'))\nlong_tap($note_content)\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('settings'))\ntap($set_show_word_count)\ntap($set_enable_line_wrap)"}
{"task": "Open the settings menu and enable monospaced font, then turn on Incognito mode of keyboards", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open the settings menu, enable line wrap, and change the alignment settings to center", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($sort_checklist_items_types.match('center'))\ntap($sort_checklist_items_ok)"}
{"task": "Rename the current note to 'Grocery List', print it, and then show information about the app", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($more_options_note)\ntap($print_note)\ntap($more_options_note)\ntap($about)"}
{"task": "Print the current note, open the app settings, and then rename the note to 'Grocery List'", "solution": "tap($more_options_note)\ntap($print_note)\ntap($settings)\ntap($exit_settings)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Print the current note, delete it, and then show information about the app", "solution": "tap($more_options_note)\ntap($print_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($about)"}
{"task": "Rename the current note to 'Grocery List', print it, and then delete it", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($more_options_note)\ntap($print_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the app settings, show information about the app, and then print the current note", "solution": "tap($settings)\ntap($exit_settings)\ntap($more_options_note)\ntap($about)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Create a note titled 'Books to Read', lock the note, open the note's file, and create a shortcut for it on the home screen.", "solution": "tap($create_note)\nset_text($add_note_title, 'Books to Read')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($open_file)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Enable keyboard to show on startup and set the cursor to be placed at the end of the note", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Open more options for the current note and set font size to 300%", "solution": "tap($more_options_note)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Open the settings, change the font size settings, and show the current font size setting", "solution": "tap($settings)\ntap($set_font_size)\ntap($current_font_size)\ncurrent_size = get_text($current_font_size)\nprint(current_size)"}
{"task": "Enable showing a note picker on startup and then open the settings to change the font size settings", "solution": "tap($set_show_a_note_picker_on_startup)\ntap($settings)\ntap($set_font_size)"}
{"task": "Open my last note, scroll to the next note in the list, and show me the title of the current note", "solution": "tap($open_note)\ntap($open_note_title_list[-1])\ntap($switch_to_next_item)\nget_text($item_title)"}
{"task": "Switch to the previous note, open the more options menu for the current checklist, and create a new note", "solution": "tap($switch_to_prev_item)\ntap($more_options_checklist)\ntap($create_note)"}
{"task": "Open my last note, switch to the previous note, scroll to the next note in the list, and open the more options menu for the current checklist", "solution": "tap($open_note)\ntap($open_note_title_list[-1])\ntap($switch_to_prev_item)\ntap($switch_to_next_item)\ntap($more_options_checklist)"}
{"task": "Create a new note, write 'Shopping List', add items 'Milk, Bread, Eggs', and open the more options menu for the current checklist.", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)\nset_text($checklist_item_list, 'Milk')\nset_text($checklist_item_list, 'Bread')\nset_text($checklist_item_list, 'Eggs')\ntap($more_options_checklist)"}
{"task": "Change the app's theme to dark, then customize the colors to match the dark theme.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($set_theme_color)"}
{"task": "Change the font size to 100% and then set the font size to 125% from the settings of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Set the font size to 90%, open more options for the current note, and then adjust the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Access more options for the current checklist, set the font size to 125%, then open settings of the app from the main screen", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Adjust the font size to 150%, then change the font size to 100%, and finally set the font size to 90% from the main screen settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Tap on the 'more options' button in the current note, then show the current font size", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)"}
{"task": "Open the more options menu for the current checklist, go to the app settings and enable all available features except 'Use Incognito mode of keyboards'.", "solution": "tap($more_options_checklist)\ntap($settings)\ncheckboxes_to_check = [$set_show_word_count, $set_make_links_and_emails_clickable, $set_use_monospaced_font, $set_enable_line_wrap, $set_show_keyboard_on_startup, $set_show_a_note_picker_on_startup, $set_autosave_notes, $set_display_save_success_messages, $set_enable_automatic_backups]\nfor checkbox in checkboxes_to_check:\n    if not get_attributes(checkbox)['checked']:\n        tap(checkbox)\nback()"}
{"task": "Disable all options in the app settings, then open the more options menu for the current note and enable 'Make links and emails clickable' option.", "solution": "tap($settings)\ncheckboxes_to_uncheck = [$set_show_word_count, $set_make_links_and_emails_clickable, $set_use_monospaced_font, $set_use_incognito_mode_of_keyboards, $set_enable_line_wrap, $set_show_keyboard_on_startup, $set_show_a_note_picker_on_startup, $set_autosave_notes, $set_display_save_success_messages, $set_enable_automatic_backups]\nfor checkbox in checkboxes_to_uncheck:\n    if get_attributes(checkbox)['checked']:\n        tap(checkbox)\nback()\ntap($more_options_note)\nif not get_attributes($set_make_links_and_emails_clickable)['checked']:\n    tap($set_make_links_and_emails_clickable)"}
{"task": "Check the current font size being used, then set it to 18 points, and finally enable 'Use monospace font' and 'Show word count' options.", "solution": "tap($settings)\nfont_size_in_percent = get_text($current_font_size)\ntarget_font_size = '18'\nif font_size_in_percent != target_font_size:\n    tap($current_font_size)\n    for idx, font_size in enumerate([$font_size_50%, $font_size_60%, $font_size_75%, $font_size_90%, $font_size_100%, $font_size_125%, $font_size_150%, $font_size_175%, $font_size_200%, $font_size_250%, $font_size_300%]):\n        if get_text(font_size).startswith(target_font_size):\n            tap(font_size)\n            break\ncheckboxes_to_check = [$set_use_monospaced_font, $set_show_word_count]\nfor checkbox in checkboxes_to_check:\n    if not get_attributes(checkbox)['checked']:\n        tap(checkbox)\nback()"}
{"task": "Open the more options menu for the current note and go to the app settings, disable 'Show word count' and 'Use monospace font', and enable 'Make links and emails clickable'.", "solution": "tap($more_options_note)\ntap($settings)\ncheckboxes_to_toggle = {'Show word count': $set_show_word_count, 'Use monospace font': $set_use_monospaced_font, 'Make links and emails clickable': $set_make_links_and_emails_clickable}\nfor option, checkbox in checkboxes_to_toggle.items():\n    attributes = get_attributes(checkbox)\n    if option in ['Show word count', 'Use monospace font'] and attributes['checked']:\n        tap(checkbox)\n    elif option == 'Make links and emails clickable' and not attributes['checked']:\n        tap(checkbox)\nback()"}
{"task": "Rename the current note to 'Project Plan', lock the current note, and sort the current checklist items by date created", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Access more options in the current note and then open the settings menu to enable monospaced font", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_use_monospaced_font)\nback()"}
{"task": "Open the settings menu, enable monospaced font, and enable line wrap, then access more options in the current note", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_enable_line_wrap)\nback()\ntap($more_options_note)"}
{"task": "Turn on Incognito mode of keyboards and then change the alignment settings to right alignment in the settings", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_alignment)\n# Assuming right alignment option is available, it could be something like tap($alignment_right)\nback()"}
{"task": "Open the settings menu and enable monospaced font, then access more options in the current checklist and share the checklist via email", "solution": "tap($settings)\ntap($set_use_monospaced_font)\nback()\ntap($more_options_checklist)\ntap($share)\n# Assuming share via email is an option, it could be something like tap($share_via_email)"}
{"task": "Access more options in the current note, change the alignment settings to justified in the settings, then turn on Incognito mode of keyboards", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_alignment)\n# Assuming justified alignment option is available, it could be something like tap($alignment_justified)\nback()\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open the settings menu, enable the Incognito mode of keyboards, and turn on the enable line wrap option in the Notes app", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_enable_line_wrap)"}
{"task": "Change the alignment settings and then disable the Incognito mode of keyboards in the Notes app", "solution": "tap($settings)\ntap($set_alignment)\ntap($exit_settings)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Enable the show word count option, make links and emails clickable, and switch to a monospaced font in the Notes app", "solution": "tap($settings)\ntap($set_show_word_count)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)"}
{"task": "Turn off the enable line wrap option and check more options for the current checklist in the Notes app", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($exit_settings)\ntap($more_options_checklist)"}
{"task": "Open the settings menu and disable the use of a monospaced font, then turn off the show word count option in the Notes app.", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_show_word_count)"}
{"task": "Open more options for the current checklist and set the font size to 300%", "solution": "\ntap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_300%)\n"}
{"task": "Open more options for the current note, show the current font size, then change the font size settings", "solution": "\ntap($more_options_note)\ntap($settings)\ntap($current_font_size)\ntap($set_font_size)\ntap($font_size_300%)\n"}
{"task": "Enable keyboard to show on startup, open more options for the current checklist, and then set the cursor to be placed at the end of the note", "solution": "\ntap($settings)\ntap($set_show_keyboard_on_startup)\ntap($more_options_checklist)\ntap($set_place_cursor_to_the_end_of_note)\n"}
{"task": "Set the cursor to be placed at the end of the note and then show the current font size", "solution": "\ntap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($current_font_size)\ntap($set_font_size)\ntap($font_size_300%)\n"}
{"task": "Open the main screen, tap on 'more options' of the current note, and then open the settings. From the settings, customize the colors of the app and set the theme to 'Black & White'.", "solution": "\nback()\ntap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\n"}
{"task": "Rename the current note to 'Grocery List', then print it, delete it, and finally open the app settings", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\ntap($more_options_note)\ntap($print_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Increase font size to maximum and then view the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\nback()\nget_text($current_font_size)"}
{"task": "Open the settings menu and set the font size to 90% before navigating back to the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Change the font size to 75%, navigate to the settings menu, and then increase font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "View the current font size, then open font size settings and decrease the font size by one level", "solution": "get_text($current_font_size)\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Open more options for the current note, rename the current note to 'Daily To-Dos', and remove done items from the current checklist", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Daily To-Dos')\ntap($rename_ok)\nback()\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open more options for the current checklist, sort the current checklist items by title, and delete the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\nback()\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Rename the current note to 'Shopping List', sort the current checklist items by custom order, and lock the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\nback()\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\nback()\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Sort the current checklist items by date created, remove done items from the current checklist, and rename the current note to 'Work Tasks'", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\nback()\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\nback()\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Work Tasks')\ntap($rename_ok)"}
{"task": "Lock the current note, open more options for the current checklist, and sort the current checklist items by title", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\nback()\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Rename the current note to 'Workout Routine', remove done items from the current checklist, and then lock the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Workout Routine')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Unlock and rename the note titled 'Daily Tasks' to 'Completed Tasks', and then delete it", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Daily Tasks':\n        tap(note_titles[i])\n        break\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Completed Tasks')\ntap($rename_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Make a new note titled 'Books to Read', populate it with a checklist of five book titles, mark two as done, then remove the done items", "solution": "tap($create_note)\nset_text($add_note_title, 'Books to Read')\ntap($checklist_type)\ntap($add_note_ok)\nbooks = ['Book 1', 'Book 2', 'Book 3', 'Book 4', 'Book 5']\nfor book in books:\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, book)\n    tap($add_checklist_item_ok)\nchecklist_items = $checklist_item_list\nfor i in range(2):\n    tap(checklist_items[i])\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Rename the current note to 'Project Ideas', duplicate the current note, and rename the duplicate note to 'Archived Projects'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Ideas')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)\ntap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Project Ideas':\n        tap(note_titles[i])\n        break\n\nduplicated_note_title = get_text($item_title) + ' (Copy)'\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Archived Projects')\ntap($rename_ok)"}
{"task": "Create a note called 'Shopping', make a checklist with six items, mark four items as done, and then lock the note", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping')\ntap($checklist_type)\ntap($add_note_ok)\nitems = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6']\nfor item in items:\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, item)\n    tap($add_checklist_item_ok)\nchecklist_items = $checklist_item_list\nfor i in range(4):\n    tap(checklist_items[i])\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Set the app's theme to auto light/dark and then open the settings of the app to ensure it's applied.", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_types.match('Auto light / dark')[0])\ntap($exit_settings)"}
{"task": "Customize the colors of the app to blue and green, then set the app's theme to light to see the changes.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_text_color)\nset_text($set_text_color, 'blue')\ntap($save_set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'green')\ntap($save_set_colors)\ntap($exit_settings)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($exit_settings)"}
{"task": "Open more options for the current note, then share it via email to example@example.com.", "solution": "tap($more_options_note)\ntap($share)\nset_text('email', 'example@example.com')\ntap($send_email)"}
{"task": "Set the app's theme to dark red to prepare for a presentation, then open more options for the current checklist to mark items as complete.", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($exit_settings)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Adjust the theme color to match the company's branding of white and blue, then open the settings of the app to save the new preferences.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_background_color)\nset_text($set_background_color, 'white')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'blue')\ntap($save_set_colors)\ntap($exit_settings)\ntap($save_set_colors)->confirm"}
{"task": "Open the settings of the Notes app, set the font size to 200%, then show the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($current_font_size)\ntap($font_size_200%)"}
{"task": "Set the font size to 175% and then to 300%, then show the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($current_font_size)\ntap($font_size_300%)\ntap($current_font_size)\ntap($font_size_300%)"}
{"task": "Set the font size to 250% and check what the current font size is", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($current_font_size)\ntap($font_size_250%)"}
{"task": "Open the settings of the Notes app, set the font size to 250%, then change it to 175% and show the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($current_font_size)\ntap($font_size_175%)\ntap($current_font_size)\ntap($font_size_175%)"}
{"task": "Tap on the 'more options' button in the current note and change the font size to 200%, then display what the current font size is", "solution": "tap($more_options_note)\ntap($set_font_size)\ntap($font_size_200%)\ntap($current_font_size)\ntap($font_size_200%)"}
{"task": "Open the settings menu, enable monospaced font, turn on Incognito mode of keyboards, then enable line wrap and change the alignment settings to left in the settings", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($alignment_types.match({'text': 'Left'})[0])\ntap($align_ok)"}
{"task": "Open more options for the current note and then confirm deletion of the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open more options for the current checklist and then remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open more options for the current checklist and then sort the items of the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current checklist and then sort the items of the current checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Change the alignment settings, then enable the Incognito mode of keyboards in the Notes app.", "solution": "tap($settings)\ntap($set_alignment)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open the settings of the app, then set the theme color of the app to blue and save the current note colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Open the more options menu for the current note, then customize the colors of the app with text color black and background color white", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app to blue, then go to settings and set the text color to black", "solution": "tap($set_theme_color)\ntap($text_color_black_and_white)\ntap($settings)\ntap($set_text_color)\ntap($theme_color_black_white)"}
{"task": "Open the more options menu for the current checklist, save the current note colors, and then customize the app's background color to white", "solution": "tap($more_options_checklist)\ntap($save_set_colors)\ntap($set_background_color)\ntap($theme_color_black_white)"}
{"task": "Open the main screen, tap on 'more options' of the current checklist, then open the settings from the 'more options' menu. From the settings, adjust the font size of the app and set it to 50%.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_50%)\ntap($exit_settings)"}
{"task": "Open the main screen, go to 'more options' of the current note, and then open the settings. From the settings, check the current font size and then customize the colors of the app to set a 'Custom' theme.", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\nfont_size = get_attributes($font_size_types.match({'selected': True}))[0]\ntap($exit_settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Open the main screen, tap on 'more options' of the current checklist and open the settings. From the settings menu, customize the colors and set the theme to 'Black & White'. Then return to the settings and set the font size to 75%.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\ntap($exit_settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($exit_settings)"}
{"task": "Open the main screen, select 'more options' of the current note and go to settings. From the settings menu, adjust the font size to 60%, then customize the theme color to 'Custom'.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_60%)\ntap($exit_settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Open the main screen and tap on 'more options' of the current note to access the settings. From the settings menu, check the current font size, customize the colors, and set the theme color to 'Black & White'.", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\nfont_size = get_attributes($font_size_types.match({'selected': True}))[0]\ntap($exit_settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Open the more options menu for the current note, go to settings to set the font size to 125%, and return to the note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()\nback()"}
{"task": "Navigate to font size settings, set the font size to 60%, then go to the settings menu and verify the font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)\nback()\ntap($set_font_size)"}
{"task": "Open the more options menu for the current checklist, change the font size to 150%, and view the current font size", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nget_text($current_font_size)"}
{"task": "Adjust the font size to 100%, go to the settings menu, and confirm the font size has been set correctly", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Open the settings of the app and then set the font size to large", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Switch the theme to dark mode at night, and to light mode during the day to minimize eye strain.", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($close_set_colors)"}
{"task": "Set the app's theme color to white for a clean look, then open more options for the current note to print it.", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($close_set_colors)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Tap on 'more options' for the current note and rename the current note to 'Project Plan', then tap on 'OK' to confirm renaming the current note and lock the current note, then tap on 'OK' to confirm locking the current note.", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Tap on 'more options' for the current checklist and rename the current checklist to 'Weekend Tasks', then tap on 'OK' to confirm renaming the current checklist and view 'About' information from the more options menu of the current checklist.", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Weekend Tasks')\ntap($rename_ok)\ntap($about)"}
{"task": "Tap on 'more options' for the current note and open 'Settings' from the more options menu of the current note, then rename the current note to 'Daily Journal', then tap on 'OK' to confirm renaming the current note.", "solution": "tap($more_options_note)\ntap($settings)\ntap($exit_settings)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Daily Journal')\ntap($rename_ok)"}
{"task": "Delete three oldest notes consecutively and after that, open the About section in the Notes app", "solution": "tap($open_note)\ntap($open_note_title_list.match({'selected': False})[-3])\ntap($delete_note)\ntap($delete_note_ok)\ntap($open_note_title_list.match({'selected': False})[-2])\ntap($delete_note)\ntap($delete_note_ok)\ntap($open_note_title_list.match({'selected': False})[-1])\ntap($delete_note)\ntap($delete_note_ok)\ntap($open_note)\ntap($about)"}
{"task": "Open settings and set app font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Open more options for the current note and set app font size to 200%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Open more options for the current checklist and then open settings to set app font size to 250%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Open settings and toggle between 125% and 300% font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Sort the items of the current checklist by title and then remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the items of the current checklist by date created and then remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open more options for the current note and then delete the current note and then confirm deletion of the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open more options for the current checklist and then delete the current checklist", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Create a new note titled 'Vacation Plans' and then lock it", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Plans')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Weekly Review', remove done items from the current checklist, and lock the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Weekly Review')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open more options for the current note, rename the current note to 'Personal Journal', sort the current checklist items by custom order, and remove done items from the current checklist", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Personal Journal')\ntap($rename_ok)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Print the current note about 'Meeting Minutes' and then delete the note", "solution": "tap($more_options_note)\ntap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text($open_note_title_list[i]) == 'Meeting Minutes':\n        tap($open_note_title_list[i])\n        break\ntap($print_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the Settings to enable the dark mode and then show information about the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()\ntap($about)"}
{"task": "Rename the current note from 'Work Tasks' to 'Project Checklist', confirm the renaming, and then lock the note", "solution": "tap($more_options_note)\ntap($rename_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text($open_note_title_list[i]) == 'Work Tasks':\n        tap($open_note_title_list[i])\n        break\nset_text($rename_input, 'Project Checklist')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the settings of the app, set the text color to black, and then open the more options menu for the current note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()\ntap($more_options_note)"}
{"task": "Customize the colors of the app by setting the theme to blue, text to black, and background to white, then save the current note colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_black_white)\ntap($set_background_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()"}
{"task": "Open the more options menu for the current note, set the text color to black, then open the more options menu for the current checklist", "solution": "tap($more_options_note)\ntap($set_text_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()\ntap($more_options_checklist)"}
{"task": "Set the background color of the app to white, then open the settings of the app and set the text color to black and theme color to blue", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_background_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()\ntap($settings)\ntap($set_text_color)\ntap($theme_color_black_white)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Set the font size to 75% and then show the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($current_font_size)\ntap($save_set_colors)\nback()"}
{"task": "Scroll the settings page to find the section to change the font size, and set it to 16pt.", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_font_size)\ntap($font_size_90%)"}
{"task": "Customize the app colors to a light theme, then customize the widget colors to match the app colors.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\nback()\ntap($set_widget_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Open more options for the current note and change the font size to 14pt, then check the current font size.", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_font_size)\ntap($font_size_75%)\nback()\ntap($current_font_size)\nget_text($font_size_75%)"}
{"task": "After going to settings from the checklist options, customize both the app colors and widget colors to green.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_custom_color)\ntap($color_picker)\ntap($color_green)\ntap($save_set_colors)\nback()\ntap($set_widget_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_custom_color)\ntap($color_picker)\ntap($color_green)\ntap($save_set_colors)"}
{"task": "Create a new text note titled 'Grocery List' and confirm, then lock the note 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)\ntap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the settings of the app to customize both the colors of the app and the widget colors", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\nback()\ntap($set_widget_colors)\nback()"}
{"task": "Check the current font size in the settings and then enable the show word count option", "solution": "tap($settings)\ntap($current_font_size)\nfont_sizes = $font_size_types\ncurrent_font_size = [s for s in font_sizes if get_attributes(s)['selected']]\n# Store the current font size\ncurrent_font_size_value = current_font_size[0]\nback()\ntap($set_show_word_count)\n"}
{"task": "Enable the option to make links and emails clickable in the settings and then customize the widget colors", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_widget_colors)\nback()"}
{"task": "Open the more options menu for the current note, then open the settings of the app and enable the show word count option", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_word_count)\nback()"}
{"task": "Open the settings of the app, check the current font size, and set it to large if not already set", "solution": "tap($settings)\ntap($current_font_size)\nfont_sizes = $font_size_types\ncurrent_font_size = [s for s in font_sizes if get_attributes(s)['selected']]\n# Store the current font size\ncurrent_font_size_value = current_font_size[0]\nlarge_font_size = $font_size_150%\nselected = get_attributes(large_font_size)['selected']\nif not selected:\n    tap(large_font_size)\nback()"}
{"task": "Lock the current checklist, then tap on 'OK' to confirm locking the current checklist and tap on 'more options' for the current checklist to open 'Settings' from the more options menu of the current checklist.", "solution": "tap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Tap on 'more options' for the current note, delete the current note and then create a new note named 'Trip Itinerary'.", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Trip Itinerary')\ntap($add_note_ok)"}
{"task": "View 'About' information from the more options menu of the current note and then rename the current note to 'Work Summary', then tap on 'OK' to confirm renaming the current note and tap on 'more options' again to delete the current note.", "solution": "tap($more_options_note)\ntap($about)\nback()\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Work Summary')\ntap($rename_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Rename the current checklist to 'Shopping List' and tap on 'OK' to confirm renaming the current checklist, then lock the current checklist and tap on 'OK' to confirm locking the current checklist.", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Tap on 'more options' for the current checklist, then delete the current checklist and confirm the action. Subsequently, create a new checklist named 'Monday Errands'.", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Monday Errands')\ntap($add_note_ok)"}
{"task": "Open the main screen, go to 'more options' of the current checklist, and open the settings menu. Adjust the font size to 75% and then customize the colors of the app to set the theme color to 'Custom'.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($close_set_colors)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\n"}
{"task": "Open the main screen, select 'more options' of the current checklist, then navigate to the settings. From the settings, set the font size to 60% and customize the colors to set the theme color to 'Black & White'.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_60%)\ntap($close_set_colors)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\n"}
{"task": "Create a new text note titled 'Project Ideas' and then rename it to 'Creative Projects'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Creative Projects')\ntap($rename_ok)\n"}
{"task": "Create a new checklist titled 'Travel Packing List' and open the most recent note afterward", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Packing List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($open_note)\nlen_open_note_title_list = len($open_note_title_list)\ntap($open_note_title_list[len_open_note_title_list-1])\n"}
{"task": "Open the most recent note and rename the current note to 'Meeting Notes' then create a new text note titled 'Meeting Follow-ups'", "solution": "tap($open_note)\nlen_open_note_title_list = len($open_note_title_list)\ntap($open_note_title_list[len_open_note_title_list-1])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)\ntap($create_note)\nset_text($add_note_title, 'Meeting Follow-ups')\ntap($text_note_type)\ntap($add_note_ok)\n"}
{"task": "Open more options for the current note, open settings, and set app font size to 175%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '175%'})[0])\nback()"}
{"task": "Set app font size to 200% and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '200%'})[0])\nback()\ntap($more_options_checklist)"}
{"task": "Open settings and set app font size first to 250% and then to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '250%'})[0])\ntap($font_size_types.match({'text': '150%'})[0])\nback()"}
{"task": "Open more options for the current checklist, open settings, and set app font size to 125%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '125%'})[0])\nback()"}
{"task": "Open a note titled 'Shopping List' and add a checklist item 'Buy milk' to the note", "solution": "tap($open_note)\ntap($open_note_title_list.match({'text': 'Shopping List'})[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy milk')\ntap($add_checklist_item_ok)"}
{"task": "Open more options for the current checklist and set the font size to 90%", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($font_size_90%)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings of the app, set the font size to 100%, and then open more options in the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($sort_checklist_items_ok)\nback()\ntap($open_note)\ntap($more_options_note)"}
{"task": "Set the font size to 50%, open the settings of the app, and then set the font size to 125%", "solution": "tap($font_size_50%)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($sort_checklist_items_ok)"}
{"task": "Show the current font size of the app, set the font size to 60%, and open more options in the current note", "solution": "tap($current_font_size)\nsize = get_text($current_font_size)\ntap($font_size_60%)\ntap($sort_checklist_items_ok)\nback()\ntap($open_note)\ntap($more_options_note)"}
{"task": "Set the font size to 100%, open more options for the current checklist, and then show the current font size of the app", "solution": "tap($font_size_100%)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ncurrent_size = get_text($current_font_size)"}
{"task": "Open the note titled 'Project Ideas', rename it to 'Startup Ideas' and create a shortcut for it", "solution": "tap($open_note)\n$open_note_title_list.match('Project Ideas')[0]\ntap($open_note_title_list.match('Project Ideas')[0])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Startup Ideas')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Create a new note titled 'Books to Read' and add a checklist for the 'Daily Tasks'", "solution": "tap($create_note)\nset_text($add_note_title, 'Books to Read')\ntap($checklist_type)\ntap($add_note_ok)\n$open_note_title_list.match('Books to Read')[0]\ntap($open_note_title_list.match('Books to Read')[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Daily Tasks')\ntap($add_checklist_item_ok)"}
{"task": "Open the note titled 'Recipes', lock it and then open more options for it", "solution": "tap($open_note)\n$open_note_title_list.match('Recipes')[0]\ntap($open_note_title_list.match('Recipes')[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)"}
{"task": "Create a new note titled 'Workout Routines', then rename it to 'Fitness Goals' and lock it", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Routines')\ntap($add_note_ok)\n$open_note_title_list.match('Workout Routines')[0]\ntap($open_note_title_list.match('Workout Routines')[0])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Fitness Goals')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Create a new note titled 'House Renovation', then create a shortcut for it and open more options for it", "solution": "tap($create_note)\nset_text($add_note_title, 'House Renovation')\ntap($add_note_ok)\n$open_note_title_list.match('House Renovation')[0]\ntap($open_note_title_list.match('House Renovation')[0])\ntap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)"}
{"task": "Lock the current note about 'Personal Diary' and then print it", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Rename the current note from 'Work Tasks' to 'Project Checklist', confirm the renaming, print the updated note, and then delete it", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Checklist')\ntap($rename_ok)\ntap($more_options_note)\ntap($print_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the Settings to enable the dark mode, then rename the current note from 'Shopping List' to 'Groceries to Buy' and confirm the renaming", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Groceries to Buy')\ntap($rename_ok)"}
{"task": "Print the current checklist titled 'Grocery Items' and then lock the checklist", "solution": "tap($more_options_checklist)\ntap($print_note)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Show information about the Notes app, then print the current note about 'Meeting Minutes' and finally delete it", "solution": "tap($more_options_note)\ntap($about)\nback()\ntap($more_options_note)\ntap($print_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Rename the current note to 'Project Plan' and then export it as a file", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Open more options for the current note, then delete the note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Export the current checklist as a file and then print the checklist", "solution": "tap($more_options_checklist)\ntap($export_as_file)\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Rename the current note to 'Budget Analysis' and print the note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Budget Analysis')\ntap($rename_ok)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Print the current note, then open more options for the current note and delete it", "solution": "tap($more_options_note)\ntap($print_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Create a new text note titled 'Daily Schedule' and then create a new checklist titled 'Gym Routine'", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Schedule')\ntap($text_note_type)\ntap($add_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Gym Routine')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the most recent note, rename the current note to 'Shopping List', and create a new checklist titled 'Household Tasks'", "solution": "tap($open_note)\nswitch_down = len($open_note_title_list) - 1\nif switch_down > 0:\n\tfor _ in range(switch_down):\n\t\ttap($switch_to_next_item)\ntap($open_note_title_list[switch_down])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\ntap($create_note)\nset_text($add_note_title, 'Household Tasks')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Create a new text note titled 'Vacation Plans' and then open the more options for the current note and rename it to 'Holiday Itinerary'", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Plans')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Holiday Itinerary')\ntap($rename_ok)"}
{"task": "Open the more options for the current note, rename it to 'Study Notes', and then create a new text note titled 'Exam Preparation'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Study Notes')\ntap($rename_ok)\ntap($create_note)\nset_text($add_note_title, 'Exam Preparation')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new checklist titled 'Books to Read', then open the most recent note and rename it to 'Reading List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Books to Read')\ntap($checklist_type)\ntap($add_note_ok)\ntap($open_note)\nswitch_down = len($open_note_title_list) - 1\nif switch_down > 0:\n\tfor _ in range(switch_down):\n\t\ttap($switch_to_next_item)\ntap($open_note_title_list[switch_down])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Reading List')\ntap($rename_ok)"}
{"task": "Open the more options menu for the current checklist and then customize the colors of the app in the settings to blue", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($set_background_color)\ntap($set_text_color)\nset_text($set_primary_color, 'Blue')\nset_text($set_background_color, 'Blue')\nset_text($set_text_color, 'Blue')\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Open the settings of the app, enable the option to make links and emails clickable, and then set the font size to large", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_font_size)\ntap($font_size_150%)\ntap($exit_settings)"}
{"task": "Sort the current checklist items by tapping 'Sort by' and then confirm with 'OK', then open more options for the current checklist and add a new item 'Buy groceries'", "solution": "tap($sort_checklist_items)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)"}
{"task": "Open the app settings, customize the app colors to 'Blue', then exit the settings page and open more options for the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($set_background_color)\ntap($set_text_color)\nset_text($set_primary_color, 'Blue')\nset_text($set_background_color, 'Blue')\nset_text($set_text_color, 'Blue')\ntap($save_set_colors)\ntap($exit_settings)\ntap($more_options_note)"}
{"task": "Open more options for the current checklist, mark all items as completed, then sort the current checklist items by tapping 'Sort by' and confirm with 'OK'", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($sort_checklist_items_ok)"}
{"task": "Create a new note titled 'Meeting Agenda' and confirm the new note with the title 'Meeting Agenda'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Agenda')\ntap($add_note_ok)\n"}
{"task": "Rename the current note to 'Project Plan' and create a shortcut for the note 'Project Plan'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)\n"}
{"task": "Open the note 'Travel Itinerary' and lock the note 'Travel Itinerary'", "solution": "tap($open_note)\n$open_note_title_list.match('Travel Itinerary')[0].tap()\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\n"}
{"task": "Open the file attached to the note 'Budget Report' and then open more options for the note 'Budget Report'", "solution": "tap($open_note)\n$open_note_title_list.match('Budget Report')[0].tap()\ntap($more_options_note)\ntap($open_file)\ntap($more_options_note)\n"}
{"task": "Create a new note titled 'Workout Routine' and confirm the new note with the title 'Workout Routine'", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Routine')\ntap($add_note_ok)\n"}
{"task": "Create a new checklist note titled 'Weekend To-Do' and confirm, then create a shortcut for the note 'Weekend To-Do'", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend To-Do')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)\ntap($create_shortcut)"}
{"task": "Open the note 'Meeting Minutes', rename the note 'Meeting Minutes' to 'Project Meeting', and then lock the note 'Project Meeting'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Meeting Minutes':\n        tap(open_note_titles[i])\n        break\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Meeting')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Create a new text note titled 'Holiday Plan' and confirm, then create a shortcut for the note 'Holiday Plan' and lock the note 'Holiday Plan'", "solution": "tap($create_note)\nset_text($add_note_title, 'Holiday Plan')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Create a new checklist note titled 'Packing List' and confirm, then open the note 'Travel Itinerary' and lock the note 'Packing List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Packing List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Travel Itinerary':\n        tap(open_note_titles[i])\n        break\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Create a new text note titled 'Daily Journal' and confirm, then lock the note 'Personal Diary'", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($text_note_type)\ntap($add_note_ok)\ntap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Personal Diary':\n        tap(open_note_titles[i])\n        break\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open more options in the current note, set the font size to 90%, and then open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\ntap($font_size_90_percent)\ntap($settings)"}
{"task": "Set the font size to 125%, show the current font size of the app, and then set the font size to 75%", "solution": "tap($current_font_size)\ntap($font_size_125_percent)\ncurrent_font_size = get_text($current_font_size)\ntap($current_font_size)\ntap($font_size_75_percent)"}
{"task": "Enable autosaving of notes in the Notes app and then disable notifications for save success messages in the Notes app", "solution": "tap($settings)\ntap($set_autosave_notes)\ntap($set_display_save_success_messages)"}
{"task": "Access more options for the current note, then enable autosaving of notes in the Notes app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_autosave_notes)"}
{"task": "Enable the keyboard to show up on startup for the Notes app and then open the settings in the Notes app", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($settings)"}
{"task": "Open the note titled 'Travel Plans', then rename it to 'Holiday Itinerary' and create a shortcut for it", "solution": "tap($open_note)\ntap($open_note_title_list.match('Travel Plans')[0])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Holiday Itinerary')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open more options for the checklist titled 'Daily Tasks' and then rename it to 'Weekly Tasks'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Daily Tasks')[0])\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Weekly Tasks')\ntap($rename_ok)"}
{"task": "Open the note titled 'Team Meeting' and then edit the content to add 'Review the team progress report at 2 PM'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Team Meeting')[0])\nset_text($note_content, get_text($note_content) + '\\nReview the team progress report at 2 PM')"}
{"task": "Edit the content of the current note by adding 'Reschedule the client meeting to Friday' and then save the changes made to the current note", "solution": "set_text($note_content, get_text($note_content) + '\\nReschedule the client meeting to Friday')\ntap($save_note)"}
{"task": "Open the note titled 'Project Plan' and search for the term 'deliverables' within the current note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Plan')[0])\ntap($search_within_note)\nset_text($search_text, 'deliverables')"}
{"task": "Open the app settings and then show information about the app", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Export the current note as a file and then rename it to 'Client Meeting Notes'", "solution": "tap($more_options_note)\ntap($export_as_file)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Client Meeting Notes')\ntap($rename_ok)"}
{"task": "Print the current checklist, delete the current note, then show information about the app", "solution": "tap($more_options_checklist)\ntap($print_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($about)"}
{"task": "Create a new note titled 'Project Plan' and select text note type, then rename the current note to 'Updated Project Plan'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Updated Project Plan')\ntap($rename_ok)"}
{"task": "Create a new checklist note, add the title 'Shopping List' and rename the current checklist to 'Updated Shopping List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Updated Shopping List')\ntap($rename_ok)"}
{"task": "Open more options for the checklist 'To-Do List' and add a checklist item 'Complete assignments' to the current note", "solution": "tap($open_note)\nnotes_list = $open_note_title_list\nfor i in range(len(notes_list)):\n    if get_text(notes_list[i]) == 'To-Do List':\n        tap(notes_list[i])\n        break\ntap($more_options_checklist)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Complete assignments')\ntap($add_checklist_item_ok)"}
{"task": "Lock the note 'Passwords' and then open the note 'Daily Journal'", "solution": "tap($open_note)\nnotes_list = $open_note_title_list\nfor i in range(len(notes_list)):\n    if get_text(notes_list[i]) == 'Passwords':\n        tap(notes_list[i])\n        break\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\nback()\nfor i in range(len(notes_list)):\n    if get_text(notes_list[i]) == 'Daily Journal':\n        tap(notes_list[i])\n        break"}
{"task": "Open the settings of the app and set the theme color to dark mode", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Customize the colors of the app and then set the app icon color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\n# Assuming the color selection is through a color picker interface\n# Example: tap the coordinate or button representing blue color in the color picker\ntap($save_set_colors)"}
{"task": "Enable auto light/dark theme for the app and then set the theme color to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Create a new text note titled 'Grocery List', then add the items 'Milk, Eggs, Bread, Apples, Chicken' to the note", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)\ntap($note_content)\nset_text($note_content, 'Milk, Eggs, Bread, Apples, Chicken')\ntap($save_note)"}
{"task": "Create a new checklist note titled 'Vacation Packing', then add the items 'Passport, Tickets, Clothes, Toiletries, Camera' to the checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Packing')\ntap($checklist_type)\ntap($add_note_ok)\nfor item in ['Passport', 'Tickets', 'Clothes', 'Toiletries', 'Camera']:\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, item)\n    tap($add_checklist_item_ok)"}
{"task": "Open the note titled 'Project Ideas' and search for the word 'meeting', then move to the next occurrence of the word 'budget'", "solution": "tap($open_note)\nopen_note_list = $open_note_title_list\nidx = next(i for i, title in enumerate(open_note_list) if get_text(open_note_list[i]) == 'Project Ideas')\ntap(open_note_list[idx])\ntap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)"}
{"task": "Create a new text note titled 'Workout Plan' and add 'Monday: Cardio, Tuesday: Strength Training, Wednesday: Yoga' to the note", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Plan')\ntap($text_note_type)\ntap($add_note_ok)\ntap($note_content)\nset_text($note_content, 'Monday: Cardio, Tuesday: Strength Training, Wednesday: Yoga')\ntap($save_note)"}
{"task": "Open the note titled 'Grocery List', add 'Bananas and Yogurt' to the list, then close the note", "solution": "tap($open_note)\nopen_note_list = $open_note_title_list\nidx = next(i for i, title in enumerate(open_note_list) if get_text(open_note_list[i]) == 'Grocery List')\ntap(open_note_list[idx])\ntap($note_content)\nset_text($note_content, f'{get_text($note_content)}, Bananas and Yogurt')\ntap($save_note)\nback()"}
{"task": "Disable the keyboard to show up on startup for the Notes app, enable the note picker to show up on startup for the Notes app, and then enable autosaving of notes in the Notes app", "solution": "tap($settings)\nset_text($set_show_a_note_picker_on_startup, true)\nset_text($set_autosave_notes, true)\n"}
{"task": "Enable notifications for save success messages in the Notes app, disable autosaving of notes in the Notes app, then access more options for the current checklist", "solution": "tap($settings)\nset_text($set_display_save_success_messages, true)\nset_text($set_autosave_notes, false)\nback()\ntap($more_options_checklist)\n"}
{"task": "Disable the note picker to show up on startup for the Notes app, open the settings in the Notes app, and then enable notifications for save success messages in the Notes app", "solution": "set_text($set_show_a_note_picker_on_startup, false)\ntap($settings)\nset_text($set_display_save_success_messages, true)\n"}
{"task": "Disable autosaving of notes in the Notes app, access more options for the current note, and then enable the keyboard to show up on startup for the Notes app", "solution": "set_text($set_autosave_notes, false)\ntap($more_options_note)\nset_text($set_show_keyboard_on_startup, true)\n"}
{"task": "Access more options for the current checklist, disable notifications for save success messages in the Notes app, and then enable the note picker to show up on startup for the Notes app", "solution": "tap($more_options_checklist)\nset_text($set_display_save_success_messages, false)\nset_text($set_show_a_note_picker_on_startup, true)\n"}
{"task": "Open the app settings, scroll the settings page to the bottom, and set the font size to 'Large', then exit the settings page", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($current_font_size)\ntap($font_size_150%)\ntap($exit_settings)"}
{"task": "Customize the app colors in the settings to 'Green', then without exiting, customize the widget colors to 'Yellow', and then exit the settings page", "solution": "tap($settings)\ntap($set_colors)\nset_text($theme_color_custom, 'Green')\ntap($save_set_colors)\ntap($set_widget_colors)\nset_text($theme_color_custom, 'Yellow')\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Open more options for the current note, duplicate the note, then open the new note's more options and rename it to 'New Note Copy'", "solution": "tap($more_options_note)\ntap($duplicate_note)\ntap($open_note_title_list[1])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'New Note Copy')\ntap($rename_ok)"}
{"task": "Open the app settings, set the font size to 'Small', then customize the widget colors to 'Red', and exit the settings page", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_75%)\ntap($set_widget_colors)\nset_text($theme_color_custom, 'Red')\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Sort the current checklist items by tapping 'Sort by' and confirm with 'OK', then open app settings and scroll to the middle of the page, and customize app colors to 'Purple'", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_ok)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\nset_text($theme_color_custom, 'Purple')\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Open an existing note titled 'Travel Plans', rename it to 'Vacation Itinerary', and create a shortcut for this note", "solution": "tap($open_note)\n$open_note_title_list.match('Travel Plans')[0].tap()\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Vacation Itinerary')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Create a new note with the title 'Team Meeting', include a checklist type, confirm the creation, and open more options for the current note.", "solution": "tap($create_note)\nset_text($add_note_title, 'Team Meeting')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_note)"}
{"task": "Create a new note titled 'Grocery List' with note type 'Text' and immediately lock the note.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Create a new note titled 'Meeting Tasks' with note type 'Checklist', add 'Prepare presentation' to the checklist, and then export the note as a file named 'MeetingTasks_Checklist'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Tasks')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Prepare presentation')\ntap($add_checklist_item_ok)\ntap($more_options_checklist)\ntap($export_as_file)\nset_text($rename_input, 'MeetingTasks_Checklist')\ntap($rename_ok)"}
{"task": "Open the note titled 'Shopping List', rename it to 'Weekly Shopping List', and then create a shortcut for it.", "solution": "tap($open_note)\n$open_note_title_list.match('Shopping List')[0].tap()\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Weekly Shopping List')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the note 'Meeting Minutes', rename the note 'Meeting Minutes' to 'Team Meeting Notes' and lock the note 'Team Meeting Notes'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nmeeting_note = notes.match('Meeting Minutes')[0]\ntap(meeting_note)\ntap($more_options_note)\nrename_note = $more_option_note_buttons.match('Rename note')[0]\ntap(rename_note)\nset_text($rename_input, 'Team Meeting Notes')\ntap($rename_ok)\ntap($more_options_note)\nlock_note = $more_option_note_buttons.match('Lock note')[0]\ntap(lock_note)\ntap($lock_note_ok)"}
{"task": "Create a new checklist note titled 'Workout Schedule' and confirm, create a shortcut for the note 'Workout Schedule' and lock the note 'Workout Schedule'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Schedule')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_note)\ncreate_shortcut = $more_option_note_buttons.match('Create shortcut')[0]\ntap(create_shortcut)\ntap($more_options_note)\nlock_note = $more_option_note_buttons.match('Lock note')[0]\ntap(lock_note)\ntap($lock_note_ok)"}
{"task": "Open the settings of the Notes app, customize the theme color, and increase the font size to 150%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Set the theme color to custom in the Notes app, then change the font size to 125% and show the current font size setting", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()\ntap($set_font_size)\ntap($font_size_125%)\nfont_size = get_text($current_font_size)"}
{"task": "Open the font size customization in the Notes app and set the font size to 90%, then open more options for the current note", "solution": "tap($current_font_size)\ntap($font_size_90%)\ntap($more_options_note)"}
{"task": "Search for the term 'Q4 sales projections' within the current note and then edit the content to add 'Include the latest market trends'", "solution": "tap($search_within_note)\nset_text($search_text, 'Q4 sales projections')\ntap($close_search_box)\nset_text($note_content, get_text($note_content) + 'Include the latest market trends')"}
{"task": "Open the note titled 'Shopping List', edit the content to add 'Buy milk, eggs, and bread', then save the changes made to the current note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Shopping List')[0])\nset_text($note_content, get_text($note_content) + 'Buy milk, eggs, and bread')\ntap($save_note)"}
{"task": "Open the more options menu for the current note, rename the note to 'Daily Tasks', edit the content to add 'Email the report to the manager', and then save the changes made to the note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Daily Tasks')\ntap($rename_ok)\nset_text($note_content, get_text($note_content) + 'Email the report to the manager')\ntap($save_note)"}
{"task": "Search for the term 'meeting agenda' within the note 'Board Meeting Notes', and edit the content to add 'Discuss Q3 financials' if not found", "solution": "tap($open_note)\ntap($open_note_title_list.match('Board Meeting Notes')[0])\ntap($search_within_note)\nset_text($search_text, 'meeting agenda')\nif 'meeting agenda' not in get_text($note_content):\n    set_text($note_content, get_text($note_content) + 'Discuss Q3 financials')\ntap($close_search_box)\ntap($save_note)"}
{"task": "Open the note titled 'Holiday Plans', edit the content to add 'Book flights by next Tuesday', then open the more options menu for the current note and set a reminder for this task", "solution": "tap($open_note)\ntap($open_note_title_list.match('Holiday Plans')[0])\nset_text($note_content, get_text($note_content) + 'Book flights by next Tuesday')\ntap($more_options_note)\n# Since there is no element for setting a reminder, it is assumed there should be one\ntap($set_reminder)\n# The detailed steps for setting the actual reminder are not provided in the given elements thus not scripted\ntap($save_note)"}
{"task": "Open the settings of the app, customize the colors, and then set the app icon color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\ntap($theme_color_types.match('blue')[0])\ntap($save_set_colors)"}
{"task": "View more options of the current note and then set the theme color to light", "solution": "tap($more_options_note)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Open the settings of the app, change the theme color to dark mode, and then enable auto light/dark theme for the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Customize the colors of the app, set the app icon color to blue, and then set the theme color to dark mode", "solution": "tap($set_colors)\ntap($set_app_icon_color)\ntap($theme_color_types.match('blue')[0])\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open the settings of the app, customize the colors, set the app icon color to blue, and then set the app theme to Black & White.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\ntap($theme_color_types.match('blue')[0])\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Increase the font size to 150% in the Notes app and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($exit_settings)\ntap($more_options_checklist)"}
{"task": "Customize the theme color in the Notes app and open more options for the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\nback()\ntap($save_set_colors)\nback()\ntap($exit_settings)\ntap($more_options_note)"}
{"task": "Set the font size to 90%, then customize the theme color and show the current font size setting", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()\ntap($set_colors)\ntap($set_theme_color)\nback()\ntap($save_set_colors)\nback()\ntap($current_font_size)"}
{"task": "Open the settings of the Notes app, change the font size to 125%, and open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()\ntap($exit_settings)\ntap($more_options_checklist)"}
{"task": "Show the current font size setting, increase the font size to 150%, and customize the theme color in the Notes app", "solution": "tap($current_font_size)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($set_colors)\ntap($set_theme_color)\nback()\ntap($save_set_colors)\nback()\ntap($exit_settings)"}
{"task": "Open the settings to customize the colors, set the theme color to dark mode, save the customized colors, and close the popup window for setting colors.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the settings to customize the colors, set the alignment of the app to center, save the customized colors, and close the popup window for setting colors.", "solution": "tap($settings)\ntap($set_alignment)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Set the theme color to dark mode, then open the settings to customize the colors, set the alignment of the app to center, save the customized colors, and close the popup window for setting colors.", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($close_set_colors)\ntap($settings)\ntap($set_alignment)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the settings to customize the colors, set the theme color to dark mode, set the alignment of the app to center, save the customized colors, and close the popup window for setting colors.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($set_alignment)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Set the alignment of the app to center, then open the settings to customize the colors, set the theme color to dark mode, save the customized colors, and close the popup window for setting colors.", "solution": "tap($set_alignment)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Add a new text note titled 'Daily Journal', then open more options for the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)"}
{"task": "Create a new checklist note, add the title 'Workout Routine', open more options for the current checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Routine')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)"}
{"task": "Add a new note titled 'Conference Agenda' and select text note type, then rename the current note to 'Updated Conference Agenda'", "solution": "tap($create_note)\nset_text($add_note_title, 'Conference Agenda')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Updated Conference Agenda')\ntap($rename_ok)"}
{"task": "Create a new note titled 'Weekly Menu', open more options for the current note and select text note type", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekly Menu')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)"}
{"task": "Create a new checklist note, rename the current checklist to 'Updated Task List' and open more options for the current checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'New Checklist')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Updated Task List')\ntap($rename_ok)\ntap($more_options_checklist)"}
{"task": "Customize the colors of the app, then set the background color of the app to blue, and set the primary color of the app to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'blue')\ntap($save_set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)\nback()"}
{"task": "Open the settings of the app, enable auto light/dark theme color in the app, and set the app icon color to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\nback()\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'red')\ntap($save_set_colors)\nback()"}
{"task": "Open more options for the current note, duplicate the note, then open more options for the duplicate note and delete it", "solution": "tap($more_options_note)\ntap($duplicate_note)\ntap($more_options_note)\nlong_tap($note_title.match('Copy'))\ntap($delete_note)\ntap($delete_note_ok)\nback()"}
{"task": "Open the settings of the app, set the theme color of the app to light, and set the primary color of the app to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\nback()\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)\nback()"}
{"task": "Open more options for the current checklist, add a new item 'Buy groceries', mark it as completed, and then collapse the checklist", "solution": "tap($more_options_checklist)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)\nlong_tap($checklist_item_list.match('Buy groceries'))\ntap($checklist_item)\nback()"}
{"task": "Rename the note titled 'Vacation Plans' to 'Holiday Plans', lock the renamed note, and export it as a file named 'HolidayPlans_Export'.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\n# Find the note titled 'Vacation Plans'\nvacation_plan_note = note_titles.match('Vacation Plans')[0]\ntap(vacation_plan_note)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Holiday Plans')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($export_as_file)\nset_text($rename_input, 'HolidayPlans_Export')\n"}
{"task": "Create a shortcut for the note titled 'Project Ideas' and then open the note titled 'Sensitive Information'.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\n# Find the note titled 'Project Ideas'\nproject_ideas_note = note_titles.match('Project Ideas')[0]\ntap(project_ideas_note)\ntap($more_options_note)\ntap($create_shortcut)\n\ntap($open_note)\nnote_titles = $open_note_title_list\n# Find the note titled 'Sensitive Information'\nsensitive_info_note = note_titles.match('Sensitive Information')[0]\ntap(sensitive_info_note)\n"}
{"task": "Create a new note titled 'Expenses 2023' with note type 'Text', lock this note, and then create a shortcut for 'Budget 2023'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Expenses 2023')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\n\ntap($open_note)\nnote_titles = $open_note_title_list\n# Find the note titled 'Budget 2023'\nbudget_note = note_titles.match('Budget 2023')[0]\ntap(budget_note)\ntap($more_options_note)\ntap($create_shortcut)\n"}
{"task": "Export the note titled 'Budget 2023' as a file, then open the file attached to the note titled 'User Manual'.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\n# Find the note titled 'Budget 2023'\nbudget_note = note_titles.match('Budget 2023')[0]\ntap(budget_note)\ntap($more_options_note)\ntap($export_as_file)\n\n# Open the note titled 'User Manual'\nnote_titles = $open_note_title_list\nuser_manual_note = note_titles.match('User Manual')[0]\ntap(user_manual_note)\ntap($more_options_note)\ntap($open_file)\n"}
{"task": "Create a new note titled 'Workout Routine' with note type 'Checklist', add 'Morning Jog' and 'Evening Yoga' to the checklist, lock this note, and then create a shortcut for it.", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Routine')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($rename_input, 'Morning Jog')\ntap($rename_ok)\ntap($add_checklist_item)\nset_text($rename_input, 'Evening Yoga')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($create_shortcut)\n"}
{"task": "Open the settings of the app and set the font size to 100%.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($sort_checklist_items_ok)"}
{"task": "Check the current font size of the app and then set the font size to 75%.", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_size = get_text($current_font_size)\ntap($sort_checklist_items_ok)\ntap($set_font_size)\ntap($font_size_75%)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu for the current note and then check the current font size of the app.", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\ncurrent_size = get_text($current_font_size)\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size to 50% and then open the settings of the app.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)\ntap($sort_checklist_items_ok)\ntap($settings)"}
{"task": "Open the more options menu for the current checklist, set the font size to 90%, and then check the current font size of the app.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)\ntap($sort_checklist_items_ok)\ntap($current_font_size)\ncurrent_size = get_text($current_font_size)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings of the app from the note options, then sort the current checklist items by date created", "solution": "tap($more_options_note)\ntap($settings)\ntap($back)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options of the current note, navigate to the settings of the app, and confirm the sort type of the current checklist", "solution": "tap($more_options_note)\ntap($settings)\ntap($back)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options of the current checklist, then sort the current checklist items by custom and confirm the sort type", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by title and immediately confirm the sort type", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Exit the settings page, open more options of the current note, and then navigate back to the settings of the app from the note options", "solution": "tap($exit_settings)\ntap($more_options_note)\ntap($settings)"}
{"task": "Create a new text note, add the title 'Holiday Plans' and rename the current note to 'Updated Holiday Plans'", "solution": "tap($create_note)\nset_text($add_note_title, 'Holiday Plans')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Updated Holiday Plans')\ntap($rename_ok)\n"}
{"task": "Edit the note to say 'Buy groceries and clean the house' and then save the current note", "solution": "set_text($note_content, 'Buy groceries and clean the house')\ntap($save_note)\n"}
{"task": "Search for the word 'groceries' within the current note and highlight it", "solution": "tap($search_within_note)\nset_text($search_text, 'groceries')\ntap($next_matchhed_text)\n"}
{"task": "Open more options for the current note and search for the word 'groceries' within the options", "solution": "tap($more_options_note)\ntap($search_within_note)\nset_text($search_text, 'groceries')\ntap($next_matchhed_text)\n"}
{"task": "Edit the note to say 'Remember to call Alice' and then save the current note and search for the word 'Alice'", "solution": "set_text($note_content, 'Remember to call Alice')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'Alice')\ntap($next_matchhed_text)\n"}
{"task": "Search for the word 'deadline' within the current note, move to the next occurrence of 'deadline', then close the search box within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Create a new checklist note titled 'Books To Read', then add '1984 by George Orwell, To Kill a Mockingbird by Harper Lee, The Great Gatsby by F. Scott Fitzgerald' to the checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'Books To Read')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, '1984 by George Orwell')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'To Kill a Mockingbird by Harper Lee')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'The Great Gatsby by F. Scott Fitzgerald')\ntap($add_checklist_item_ok)"}
{"task": "Open the note titled 'Meeting Minutes' and search for 'action items', then close the search box within the current note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Minutes')[0])\ntap($search_within_note)\nset_text($search_text, 'action items')\ntap($close_search_box)"}
{"task": "Open the more options for the current checklist and sort the items by Date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options for the current checklist and sort the items by Custom and then confirm the sort type", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings to customize the colors, set the alignment of the app to center, do not change the theme color, save the customized colors, and close the popup window for setting colors.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_alignment)\ntap($center_alignment)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Quickly toggle the theme color to dark mode and then back to default without changing any other settings.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($theme_color_default)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Set the alignment of the app to center, verify the alignment change, then open the settings, change the theme color to dark mode, save the settings, and close the popup window for setting colors.", "solution": "tap($set_alignment)\ntap($center_alignment)\nassert get_attributes($center_alignment)['selected']\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Change the app theme colors by opening settings and customizing app colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Increase the font size of the app by navigating to settings and setting the font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($set_font_size_ok)"}
{"task": "Set the background color of the app to blue, set the app icon color to red, and enable auto light/dark theme color in the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'blue')\ntap($save_set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'red')\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Open more options for the current note, move the note to a new folder named 'Projects', and then open the settings of the app", "solution": "tap($more_options_note)\ntap($sort_checklist_items)\nset_text($merge_window_input, 'Projects')\ntap($rename_ok)\ntap($settings)"}
{"task": "Customize the colors of the app, set the primary color of the app to green, and set the theme color of the app to dark", "solution": "tap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Tap on 'more options' button in the checklist, then sort the current checklist by 'Date Created'", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Tap on 'more options' button in the note, then tap on the 'Settings' button after opening 'more options' in the note and scroll down in the settings page", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Open the settings page from the current checklist, scroll through the settings page, and then customize the colors of the app", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)"}
{"task": "Open the current checklist and sort the items by Date created, then reopen more options to confirm the sort type", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\nback()\ntap($more_options_checklist)"}
{"task": "Open the more options for the current checklist, sort the items by Custom, then customize the colors of the app", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\nback()\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)"}
{"task": "Open the settings page from the current note, scroll through the settings page, and exit the settings page", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\nback()"}
{"task": "Open the more options for the current checklist, sort the items by Date created, confirm the sort type, then exit the more options", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Open the settings of the app, set the font size to 60%, and then open the more options menu for the current note.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)\ntap($more_options_note)"}
{"task": "Set the font size to 75%, check the current font size of the app, and then open the more options menu for the current note.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()\ntap($current_font_size)\nfont_size = get_attributes($current_font_size['selected'])\ntap($more_options_note)"}
{"task": "Open the more options menu for the current checklist, open the settings of the app, and set the font size to 100%.", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Sort the items in the current checklist by date created and then remove all done items.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Open the more options menu in the checklist and sort the items by title before removing all done items.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Open more options in the note, edit the content of the current note to 'Meeting minutes for September 2023', and search the word 'deadline' within the current note", "solution": "tap($more_options_note)\ntap($note_content)\nset_text($note_content, 'Meeting minutes for September 2023')\ntap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Search the word 'project' within the current note, find the next occurrence of the word 'project', and then close the search box", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Edit the content of the current note to 'Meeting minutes for September 2023', search the word 'budget' within the current note, and find the previous occurrence of the word 'budget'", "solution": "tap($note_content)\nset_text($note_content, 'Meeting minutes for September 2023')\ntap($search_within_note)\nset_text($search_text, 'budget')\ntap($prev_matched_text)"}
{"task": "Search the word 'deadline' within the current note, find the next occurrence of the word 'project', and then find the previous occurrence of the word 'budget'", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\nset_text($search_text, 'project')\ntap($next_matchhed_text)\nset_text($search_text, 'budget')\ntap($prev_matched_text)"}
{"task": "Open more options in the note, edit the content of the current note to 'Meeting minutes for September 2023', search the word 'deadline', and close the search box", "solution": "tap($more_options_note)\ntap($note_content)\nset_text($note_content, 'Meeting minutes for September 2023')\ntap($search_within_note)\nset_text($search_text, 'deadline')\ntap($close_search_box)"}
{"task": "Open more options of the current checklist, sort by date created, then sort by title and confirm the sort type", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings of the app from the checklist options, sort the checklist items by custom, and confirm the sort type", "solution": "tap($more_options_checklist)\ntap($settings)\nback()\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by date created, exit the settings page, and then open more options of the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($settings)\ntap($exit_settings)\ntap($more_options_note)"}
{"task": "Open the settings of the Notes APP and set the font size to 150%, then show the current font size in the Notes APP settings.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($current_font_size)\nfont_size = get_text($current_font_size)\nprint(f'Current font size: {font_size}')"}
{"task": "Open the more options menu for the current note, then switch to the more options menu for the current checklist.", "solution": "tap($more_options_note)\nback()\ntap($more_options_checklist)"}
{"task": "Show the previous occurrence of the word 'groceries' in the note and then open more options for the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'groceries')\ntap($prev_matched_text)\ntap($more_options_note)"}
{"task": "Edit the note to say 'Finish the project report by Monday', save the note, and search for the word 'project'", "solution": "set_text($note_content, 'Finish the project report by Monday')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'project')"}
{"task": "Search for the word 'groceries' within the current note, save the note, and then show the previous occurrence of 'groceries'", "solution": "tap($search_within_note)\nset_text($search_text, 'groceries')\ntap($save_note)\ntap($prev_matched_text)"}
{"task": "Edit the note to say 'Buy groceries, clean the house, and exercise', save the current note, search for 'exercise', and then show the previous occurrence of 'groceries'", "solution": "set_text($note_content, 'Buy groceries, clean the house, and exercise')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'exercise')\ntap($prev_matched_text)\nset_text($search_text, 'groceries')\ntap($prev_matched_text)"}
{"task": "Open the settings of the app, then set the font size to 250%, and enable 'Autosave notes'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($set_autosave_notes)"}
{"task": "Review and adjust both app and widget colors by going to settings and customizing them", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()\ntap($set_widget_colors)\ntap($save_set_colors)\nback()"}
{"task": "Open the settings from the current checklist, then scroll through the settings page and set a smaller font size", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_50%)\nback()"}
{"task": "Customize both the app theme and widget colors by first going to settings from the current note options", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()\ntap($set_widget_colors)\ntap($save_set_colors)\nback()"}
{"task": "Check the current font size of the app by opening settings and reviewing the font options", "solution": "tap($settings)\ntap($current_font_size)\nback()"}
{"task": "Adjust the app's display by scrolling through settings and changing both the app colors and font size", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()\ntap($set_font_size)\ntap($font_size_50%)\nback()"}
{"task": "Open the more options menu for the current note and then open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings of the app, customize the colors of the app by setting the theme color to 'blue', and then save the color settings of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'type': 'checkbox', 'text': 'blue'})[0])\ntap($save_set_colors)"}
{"task": "Open the more options menu for the current checklist, set the text color of the app to 'black', and then close the color setting popup window", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_types.match({'type': 'checkbox', 'text': 'black'})[0])\ntap($close_set_colors)"}
{"task": "Customize the colors of the app by setting the primary color to 'green', set the background color to 'white', save the color settings, and finally close the color setting popup window", "solution": "tap($set_colors)\ntap($set_primary_color)\ntap($theme_color_types.match({'type': 'checkbox', 'text': 'green'})[0])\ntap($set_background_color)\ntap($theme_color_types.match({'type': 'checkbox', 'text': 'white'})[0])\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the settings of the app, set the theme color to 'dark mode', set the text color to 'white', and set the primary color to 'dark blue'", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'type': 'checkbox', 'text': 'dark mode'})[0])\ntap($set_text_color)\ntap($theme_color_types.match({'type': 'checkbox', 'text': 'white'})[0])\ntap($set_primary_color)\ntap($theme_color_types.match({'type': 'checkbox', 'text': 'dark blue'})[0])"}
{"task": "Tap on 'more options' button in the checklist, then tap on the 'Settings' button after opening 'more options' in the checklist and exit the settings page by tapping 'Back'", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($exit_settings)"}
{"task": "Sort the current checklist by 'Title', then tap on 'more options' button in the note and tap on the 'Settings' button after opening 'more options' in the note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Scroll down in the settings page, then exit the settings page by tapping 'Back' and tap on 'more options' button in the checklist", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($exit_settings)\ntap($more_options_checklist)"}
{"task": "Sort the current checklist by 'Custom', then tap on the 'Settings' button after opening 'more options' in the checklist and scroll down in the settings page", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($settings)\nscroll($scroll_settings_page, \"down\")"}
{"task": "Tap on 'more options' button in the checklist, then tap on 'more options' button in the note and exit the settings page by tapping 'Back'", "solution": "tap($more_options_checklist)\ntap($more_options_note)\ntap($exit_settings)"}
{"task": "Open the settings page from the current checklist, scroll through the settings page, customize the colors of the app, and then exit the settings page.", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\nback()\ntap($exit_settings)"}
{"task": "Search the current note for 'meeting agenda' and then open more options for the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting agenda')\ntap($more_options_note)"}
{"task": "Open the note with the title 'Grocery List', search the note for 'milk', and then edit the content to 'Buy milk and eggs'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\ntap($search_within_note)\nset_text($search_text, 'milk')\nset_text($note_content, 'Buy milk and eggs')"}
{"task": "Edit the content of the current note to 'Complete the project by Friday' and then save the current note after editing", "solution": "set_text($note_content, 'Complete the project by Friday')\ntap($save_note)"}
{"task": "Open the note with the title 'Grocery List', edit the content to 'Buy milk, eggs, and bread', and then save the note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\nset_text($note_content, 'Buy milk, eggs, and bread')\ntap($save_note)"}
{"task": "Open more options for the current note, then enable 'Show keyboard on startup'", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_keyboard_on_startup)\nback()"}
{"task": "Open the settings of the app, set the font size to 300%, and enable 'Show a note picker on startup'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\nback()\ntap($set_show_a_note_picker_on_startup)\nback()"}
{"task": "Open more options for the current checklist, then enable 'Place cursor to the end of note'", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_place_cursor_to_the_end_of_note)\nback()"}
{"task": "Open more options for the current note, enable 'Autosave notes', and set the font size to 250%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_autosave_notes)\nback()\ntap($set_font_size)\ntap($font_size_250%)\nback()"}
{"task": "Enable 'Show keyboard on startup', then open more options for the current note", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\nback()\ntap($more_options_note)"}
{"task": "Navigate to the settings from a note, customize widget colors and then go back to the note", "solution": "tap($open_note)\ntap($open_note_titles[0])\ntap($more_options_note)\ntap($settings)\ntap($set_widget_colors)\nback()\nback()"}
{"task": "Open settings, customize colors, set the theme color to auto light/dark mode, then set the app icon color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'label': 'Auto light / dark'})[0])\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'blue')\ntap($save_set_colors)"}
{"task": "Set the primary color of the app to red, open settings, customize colors, and set the theme color to dark mode", "solution": "tap($set_primary_color)\nset_text($set_primary_color, 'red')\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'label': 'Dark'})[0])\ntap($save_set_colors)"}
{"task": "Navigate to settings, customize colors, set the primary color to red, then set the theme color to light mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'red')\ntap($set_theme_color)\ntap($theme_color_types.match({'label': 'Light'})[0])\ntap($save_set_colors)"}
{"task": "Open the settings of the app, navigate to TODO settings, then go back to settings, customize colors, and set the app icon color to green", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'green')\ntap($save_set_colors)"}
{"task": "Sort the current checklist by 'Date Created', then tap on the 'Settings' button after opening 'more options' in the checklist and scroll down in the settings page.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Tap the 'Open Note' button to view my most recent note and then tap the 'more options' button to archive it", "solution": "tap($open_note)\ntap($open_note_title_list[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Tap the 'create_note' button to start a new checklist titled 'Packing List', then tap the 'more options' button to mark it as completed", "solution": "tap($create_note)\nset_text($add_note_title, 'Packing List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)\ntap($lock_note)"}
{"task": "Tap the 'Open Note' button to edit the note titled 'Grocery List', add 'Milk' to the list, and then save it", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\nset_text($note_content, get_text($note_content) + '\\nMilk')\ntap($save_note)"}
{"task": "Scroll to switch to the previous item using the scrollbar, view the title of the current item by looking at the 'item_title' text, and if it is 'Meeting Notes', delete it", "solution": "scroll($switch_item, 'up')\nif get_text($item_title) == 'Meeting Notes':\n    tap($more_options_checklist)\n    tap($delete_note)\n    tap($delete_note_ok)"}
{"task": "Lock the current note after accessing more options, then delete the current note after accessing more options", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove the done items from the current checklist, then sort the current checklist items by date created", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by title, then lock the current checklist after accessing more options", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current checklist after accessing more options, then create a new checklist with the same title", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\ntap($create_note)\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Sort the current checklist items by custom order, then lock the current checklist after accessing more options", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "First, sort the checklist items by custom order, then remove all done items and finally sort the remaining items by date created.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Remove all done items in the current checklist and then sort the remaining items by title.", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by date created, remove all done items, and then sort the remaining items by custom order.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu in the checklist, sort the items by title, then sort the items by date created.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Remove all done items from the current checklist, sort remaining items by custom order, and then sort again by title.", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Search the word 'budget' within the current note, find the previous occurrence of the word 'budget', and then search the word 'project' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($prev_matched_text)\nset_text($search_text, 'project')"}
{"task": "Edit the content of the current note to 'Meeting minutes for September 2023', search the word 'deadline', find the next occurrence of the word 'project', and close the search box", "solution": "set_text($note_content, 'Meeting minutes for September 2023')\ntap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)\nset_text($search_text, 'project')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Open more options in the note, search the word 'budget', find the previous occurrence of the word 'budget', and then find the next occurrence of the word 'project'", "solution": "tap($more_options_note)\ntap($search_within_note)\nset_text($search_text, 'budget')\ntap($prev_matched_text)\nset_text($search_text, 'project')\ntap($next_matchhed_text)"}
{"task": "Rename the current note to 'Project Plan' and lock the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Remove done items from the current checklist and rename the note to 'Shopping List'", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)"}
{"task": "Open the settings of the app, customize the colors by setting the background color to 'light gray', save the color settings of the app, and close the color setting popup window", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'light gray')\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the more options menu for the current note, customize the colors of the app by setting the text color to 'black' and the background color to 'yellow', save the settings, and then close the popup window", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'black')\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the more options menu for the current checklist, open the settings of the app, customize the colors by setting the primary color to 'red', save the color settings, and close the color setting popup window", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'red')\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Enable incognito mode for keyboards, then go to settings and enable line wrap", "solution": "tap($set_use_incognito_mode_of_keyboards)\ntap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Customize the app colors, save the customized colors, and then set the theme color of the app to dark mode", "solution": "tap($set_colors)\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Set the font size to 250%, enable 'Place cursor to the end of note', and 'Show a note picker on startup'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types[9])\ntap($exit_settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open the settings of the app, enable 'Show keyboard on startup', and set the font size to 300%", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_font_size)\ntap($font_size_types[10])\ntap($exit_settings)"}
{"task": "Open the settings and set the font size to 125%, then open more options for the current note and add a reminder", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types[6])\ntap($exit_settings)\ntap($more_options_note)\ntap($settings) # assuming 'add a reminder' means opening settings again for the reminder"}
{"task": "Open the settings and set the font size to 150%, then open more options for the current checklist and share with John via email", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types[7])\ntap($exit_settings)\ntap($more_options_checklist)\ntap($settings) # assuming 'share with John via email' means opening settings again to share via email"}
{"task": "Open the settings and set the font size to 90%, then open more options for the current note and set a deadline for tomorrow", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types[3])\ntap($exit_settings)\ntap($more_options_note)\ntap($settings) # assuming 'set a deadline for tomorrow' means opening settings again for the deadline"}
{"task": "Tap on 'More options' in the current checklist, sort the current checklist items by title, and remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Delete the current note after renaming it to 'Temporary Note'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Temporary Note')\ntap($rename_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Tap on 'More options' in the current checklist, sort the current checklist items by date created, and then lock the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Sort the current checklist items by title and then remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Rename the current note to 'Completed Tasks', lock the current note, and then sort the current checklist items by date created", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Completed Tasks')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Tap the 'switch to next item' button twice to view the next note in the list and then tap the 'more options' button to archive it", "solution": "tap($switch_to_next_item)\ntap($switch_to_next_item)\ntap($more_options_note)\ntap($lock_note)\n"}
{"task": "Tap the 'Open Note' button to delete the note titled 'Meeting Notes', then tap the 'create_note' button to start a new note titled 'Project Plan'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\ntitles = open_note_titles.match('Meeting Notes')\nif len(titles) > 0:\n    tap(titles[0])\n    tap($more_options_note)\n    tap($delete_note)\n    tap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($text_note_type)\ntap($add_note_ok)\n"}
{"task": "Scroll through the items using the 'switch_item' scrollbar, find the note titled 'Workout Plan', and tap the 'more options' button to mark it as completed", "solution": "scroll($switch_item, 'down')\nnote_titles = $item_title\nfor note in note_titles:\n    if get_text(note) == 'Workout Plan':\n        tap(note)\n        tap($more_options_note)\n        tap($lock_note)\n        break\nelse:\n    scroll($switch_item, 'down')\n"}
{"task": "Switch to the note after the current one using the 'switch_to_next_item' button, tap the 'Open Note' button to edit it, add 'Bring headphones' to the content, and save the note.", "solution": "tap($switch_to_next_item)\ntap($open_note)\nnote_titles = $open_note_title_list\nnote = note_titles[0]\nif note:\n    tap(note)\n    set_text($note_content, 'Bring headphones')\n    tap($save_note)\n"}
{"task": "Open the settings and set the theme color to dark mode, then save the changes", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\n"}
{"task": "Remove the done items from the current checklist, then lock the current checklist after accessing more options", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('Remove done items')[0])\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('Lock note')[0])\ntap($lock_note_ok)"}
{"task": "Delete the current note after accessing more options, then create a new note with the same content", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('Delete note')[0])\ntap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'New Note')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Lock the current checklist after accessing more options, then remove the done items from the current checklist, finally sort the remaining items by date created", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('Lock note')[0])\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('Remove done items')[0])\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('Sort by')[0])\ntap($sort_checklist_items_types.match('Date created')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Change the app theme to White and then set the app font size to 150%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Open the settings of the current note, customize the colors of the app, and set the app font size to 100%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Open more options for the current note, go to settings, and set alignment of the app to center", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_alignment)\n# Assuming there is an option to set alignment to center in the popup window\ntap($alignment_center) \nback()"}
{"task": "Go to settings, enable line wrap, and then enable incognito mode for keyboards", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Open more options for the current checklist, customize the app colors, and save the customized colors", "solution": "tap($more_options_checklist)\ntap($set_colors)\n# Assuming there is a way to customize colors in the popup window\ntap($save_set_colors) \nback()"}
{"task": "Set the theme color of the app to dark mode, then enable line wrap and set alignment of the app to center", "solution": "tap($settings) \ntap($set_theme_color)\ntap($theme_color_dark)\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($alignment_center)\nback() \nback()"}
{"task": "Close the color customization popup, go to settings, and enable line wrap", "solution": "tap($close_set_colors)\ntap($settings)\ntap($set_enable_line_wrap)\nback()"}
{"task": "Open the settings of the app and then show the information of the app", "solution": "tap($settings)\ntap($about)"}
{"task": "Rename the current note to 'Work Tasks' and remove done items from the checklist", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Work Tasks')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Lock the current note and then delete the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Rename the current note to 'Weekly Agenda', lock the current note, and then remove done items from the checklist", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Weekly Agenda')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open the settings of the app and then rename the current note to 'Holiday Schedule'", "solution": "tap($settings)\nback()\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Holiday Schedule')\ntap($rename_ok)"}
{"task": "Open the note with the title 'Grocery List', search for 'chocolate', add 'and chips' if 'chocolate' is found, and then save the note", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Grocery List':\n        tap(note_titles[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'chocolate')\nif get_attributes($prev_matched_text)['selected'] or get_attributes($next_matched_text)['selected']:\n    note_content = get_text($note_content)\n    new_note_content = note_content.replace('chocolate', 'chocolate and chips')\n    set_text($note_content, new_note_content)\ntap($save_note)"}
{"task": "Search the current note for 'birthday party details', if found, then open more options for the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'birthday party details')\nif get_attributes($prev_matched_text)['selected'] or get_attributes($next_matched_text)['selected']:\n    tap($more_options_note)"}
{"task": "Open the note with the title 'Grocery List', search for 'detergent', and if not found, then edit the content to 'Buy detergent' and save the note", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Grocery List':\n        tap(note_titles[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'detergent')\nif not (get_attributes($prev_matched_text)['selected'] or get_attributes($next_matched_text)['selected']):\n    set_text($note_content, 'Buy detergent')\n    tap($save_note)"}
{"task": "Open the note with the title 'Grocery List', search for 'apples', and if found, edit the content to 'Buy apples and bananas' before saving the note", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Grocery List':\n        tap(note_titles[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'apples')\nif get_attributes($prev_matched_text)['selected'] or get_attributes($next_matched_text)['selected']:\n    set_text($note_content, 'Buy apples and bananas')\n    tap($save_note)"}
{"task": "Open the more options of the current note and change the font size to 300%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Open the more options menu in the checklist, sort items by date created, remove all done items, and finally sort by custom order.", "solution": "\n# Open the more options menu in the checklist\ntap($more_options_checklist)\n# Sort items by date created\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match('Date created')[0])\ntap($sort_checklist_items_ok)\n# Remove all done items\ntap($remove_done_checklist_items)\n# Sort items by custom order\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match('Custom')[0])\ntap($sort_checklist_items_ok)\n"}
{"task": "Rename the current note to 'Project Plan' and then lock it", "solution": "\n# Open more options and rename the current note to 'Project Plan'\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\n# Lock the note\ntap($lock_note)\ntap($lock_note_ok)\n"}
{"task": "Delete the current note 'Personal Diary' if it exists and confirm deletion", "solution": "\n# Tap open note to see the list of notes\ntap($open_note)\n# Loop through note titles to find 'Personal Diary' and delete if it exists\ntitles = $open_note_title_list\nfor i in range(len(titles)):\n    if get_text(titles[i]) == 'Personal Diary':\n        tap(titles[i])\n        tap($more_options_note)\n        tap($delete_note)\n        tap($delete_note_ok)\n        break\nback()\n"}
{"task": "Rename the current checklist to 'Grocery List', sort the items by name, and then remove done items", "solution": "\n# Open more options and rename the current checklist to 'Grocery List'\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\n# Sort items by name\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match('Title')[0])\ntap($sort_checklist_items_ok)\n# Remove done items\ntap($remove_done_checklist_items)\n"}
{"task": "Open more options for the current note, rename it to 'Vacation Itinerary', and lock the note", "solution": "\n# Open more options for the current note\ntap($more_options_note)\n# Rename it to 'Vacation Itinerary'\ntap($rename_note)\nset_text($rename_input, 'Vacation Itinerary')\ntap($rename_ok)\n# Lock the note\ntap($lock_note)\ntap($lock_note_ok)\n"}
{"task": "Customize the text color of the app to blue and change the app icon color to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\nset_text($theme_color_types.match({'blue':True})[0],'blue')\ntap($save_set_colors)\ntap($set_app_icon_color)\nset_text($theme_color_types.match({'red':True})[0],'red')\ntap($save_set_colors)"}
{"task": "Access the settings from the app's more options menu, set the background color of the app to white, and save the new settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($theme_color_types.match({'white':True})[0],'white')\ntap($save_set_colors)"}
{"task": "Adjust the app colors, update the primary color of the app to green, and save the new settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($theme_color_types.match({'green':True})[0],'green')\ntap($save_set_colors)"}
{"task": "Open the more options for the current note and then change the app icon color to red", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($theme_color_types.match({'red':True})[0],'red')\ntap($save_set_colors)"}
{"task": "Set the background color of the app to white and the theme color to dark mode, then save the changes", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($theme_color_types.match({'white':True})[0],'white')\ntap($save_set_colors)\ntap($set_theme_color)\nset_text($theme_color_types.match({'dark':True})[0],'dark')\ntap($save_set_colors)"}
{"task": "Open the settings and set the font size to 75%, then open more options for the current checklist and move it to the 'Work' folder", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()\ntap($more_options_checklist)\ntap($create_shortcut)"}
{"task": "Open the settings and set the font size to 100%, then open more options for the current note and export it as a PDF", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Open the settings and set the font size to 175%, then open more options for the current note and tag it with 'Urgent'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nback()\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the settings and set the font size to 125%, then open more options for the current checklist and add a new checklist item 'Buy groceries'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()\ntap($more_options_checklist)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)"}
{"task": "Open the settings and set the font size to 150%, then open more options for the current note and delete the note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Tap on 'More options' in the current note, rename it to 'Archived', and then delete the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Archived')\ntap($rename_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Sort the items in the checklist by title and then lock the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Remove completed items from the current checklist and then delete the current note without confirmation", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Sort the items in the checklist by date created and then remove completed items from the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the items in the checklist by custom order, remove completed items, and lock the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Customize the app colors, save the customized colors, and then close the color customization popup", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open more options for the current checklist, then sort by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist by date created, then confirm the current checklist sorting type", "solution": "tap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current checklist, sort the checklist by custom order, and confirm the current checklist sorting type", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist by title, then sort by date created, and finally confirm the current checklist sorting type", "solution": "tap($sort_checklist_items)\ntap($title_type)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Remove done items from the current checklist, lock the current note, and then rename the note to 'Completed Tasks'", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($rename_note)\nset_text($rename_input, 'Completed Tasks')\ntap($rename_ok)"}
{"task": "Open the Notes app and create a new text note called 'Meeting Notes', then lock the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the Notes app and create a new checklist titled 'Weekend Chores' and add tasks like 'Laundry', 'Groceries', and 'Clean the house'", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Chores')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Laundry')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Groceries')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Clean the house')\ntap($add_checklist_item_ok)"}
{"task": "Open the Notes app, create a new text note named 'Project Plan', then create a shortcut for the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the Notes app, create a new checklist named 'Travel Packing List', then lock the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Packing List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Set the app theme color to Black & White and then set the app font size to 60%", "solution": "# Task 0\n# Set the app theme color to Black & White and then set the app font size to 60%\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()\ntap($set_font_size)\ntap($font_size_60%)\nback()"}
{"task": "Change the app theme to White, set the app font size to 50%, and then customize the colors of the app", "solution": "# Task 1\n# Change the app theme to White, set the app font size to 50%, and then customize the colors of the app\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()\ntap($set_font_size)\ntap($font_size_50%)\nback()\ntap($set_colors)"}
{"task": "Customize the colors of the app, set the app theme color to Custom, and then change the app theme to White", "solution": "# Task 2\n# Customize the colors of the app, set the app theme color to Custom, and then change the app theme to White\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()\ntap($set_theme_color)\ntap($theme_color_white)\nback()"}
{"task": "Open the settings of the current note and set the app font size to 150%", "solution": "# Task 3\n# Open the settings of the current note and set the app font size to 150%\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Change the app theme to White, customize the colors of the app, and set the app font size to 100%", "solution": "# Task 4\n# Change the app theme to White, customize the colors of the app, and set the app font size to 100%\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()\ntap($set_font_size)\ntap($font_size_100%)\nback()\ntap($set_colors)"}
{"task": "Open the settings of the app and set the place cursor to the end of the note on startup", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Open the more options of the current checklist and set show keyboard on startup", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_show_keyboard_on_startup)"}
{"task": "Open the more options of the current note and set show a note picker on startup", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open the settings of the app, change the font size to 250%, and set show keyboard on startup", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($set_show_keyboard_on_startup)"}
{"task": "Open the more options of the current checklist, set the place cursor to the end of the note, and change the font size to 200%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Rename the current note to 'Work Tasks', lock it, and confirm locking", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Work Tasks')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open more options for the current checklist, rename it to 'Workout Plan', and then confirm renaming", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Workout Plan')\ntap($rename_ok)"}
{"task": "Remove done items from the current checklist 'Weekend Tasks' and then sort the remaining items by name", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_title = [note for note in note_titles if 'Weekend Tasks' in get_text(note)][0]\ntap(note_title)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current note, rename it to 'Daily Journal', lock it, and then delete it, confirming each step.", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Daily Journal')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the note titled 'Grocery List', Edit the note content to include 'Buy milk', Save the changes made to the note.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_title = [note for note in note_titles if 'Grocery List' in get_text(note)][0]\ntap(note_title)\nset_text($note_content, 'Buy milk')\ntap($save_note)"}
{"task": "Open the note titled 'Meeting Notes', move the checklist item 'Buy groceries' to the bottom of the list, and save the current note after editing", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nmeeting_note = open_note_title_list.match('Meeting Notes')[0]\ntap(meeting_note)\nlong_tap($checklist_item_list.match('Buy groceries')[0])\ntap($move_selected_item_to_the_buttom)\ntap($save_note)"}
{"task": "Delete the checklist item 'Buy groceries', search for the word 'project' within the current note, and then open more options for the current note", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($delete_selected_checklist_item)\ntap($search_within_note)\nset_text($search_text, 'project')\ntap($more_options_note)"}
{"task": "Rename the checklist item 'Buy groceries' to 'Purchase groceries', open the note titled 'Meeting Notes', and then delete the checklist item 'Purchase groceries' within the note", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase groceries')\ntap($rename_ok)\ntap($open_note)\nopen_note_title_list = $open_note_title_list\nmeeting_note = open_note_title_list.match('Meeting Notes')[0]\ntap(meeting_note)\nlong_tap($checklist_item_list.match('Purchase groceries')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Move the checklist item 'Buy groceries' to the bottom of the list, open more options for the current note, and then search for the word 'project' within the note", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($move_selected_item_to_the_buttom)\ntap($more_options_note)\ntap($search_within_note)\nset_text($search_text, 'project')"}
{"task": "Open the current note and edit the content to say 'Buy groceries'. Then save the current note.", "solution": "tap($open_note)\ntap($note_content)\nset_text($note_content, 'Buy groceries')\ntap($save_note)"}
{"task": "Customize the text color of the app to blue, set the theme color to dark mode, and save the changes", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'blue')\nback()\ntap($set_theme_color)\ntap($theme_color_dark)\nback()\ntap($save_set_colors)"}
{"task": "Access the settings from the app's more options menu, customize the text color to blue, update the primary color to green, and save the new settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'blue')\nback()\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\nback()\ntap($save_set_colors)"}
{"task": "Open more options in the current note and then open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open more options in the current checklist, sort the checklist items by Custom, and confirm the sorting of the checklist items", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings of the app, scroll through the settings page, and then customize the app colors to blue", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\nset_text($set_text_color, 'blue')\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist and confirm the current checklist sorting type", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist by title, then sort by custom order, and open more options for the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Sort the current checklist by custom order, confirm the current checklist sorting type, and open more options for the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Open more options for the current checklist, sort by date created, and then confirm the current checklist sorting type", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Open the more options of the current note, then set the font size to 200%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Lock the current note, then sort the items in the checklist by date created and remove completed items", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)"}
{"task": "Sort the items in the checklist by title, remove completed items, and then delete the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove completed items from the current checklist, sort the remaining items by date created, and lock the current note", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Sort the items in the checklist by custom order, remove completed items, and then delete the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($remove_done_checklist_items)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open settings, customize colors, set the theme color to dark mode, set the text color to red, save the customized colors, and then close the customize colors popup", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($set_text_color)\ntap($set_text_color)\nset_text($set_text_color, 'red')\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the settings of the current note, set the app theme color to Black & White, and then set the app font size to 60%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Search for the word 'meeting' within the current note and then add 'Remember to buy milk' at the end of the note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($note_content)\ncurrent_text = get_text($note_content)\nset_text($note_content, current_text + '\\nRemember to buy milk')"}
{"task": "Find the next occurrence of 'project' in the current note and then find the previous occurrence of 'deadline'", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($next_matchhed_text)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)"}
{"task": "Edit the content of the current note to add 'Remember to buy milk' at the end and then search for the word 'meeting'", "solution": "tap($note_content)\ncurrent_text = get_text($note_content)\nset_text($note_content, current_text + '\\nRemember to buy milk')\ntap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Find the previous occurrence of 'deadline' in the current note and ensure that 'Remember to buy milk' is added at the end", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\ntap($note_content)\ncurrent_text = get_text($note_content)\nif 'Remember to buy milk' not in current_text:\n    set_text($note_content, current_text + '\\nRemember to buy milk')"}
{"task": "Open the settings of the app, customize the app colors to green, and then customize the widget colors to match the app colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)\nback()\ntap($set_widget_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)\nback()"}
{"task": "Sort the checklist items by Custom, confirm the sorting of the checklist items, and then open more options in the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note)"}
{"task": "Open the settings of the app, scroll through the settings page, and then customize the widget colors to red", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_widget_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'red')\ntap($save_set_colors)\nback()"}
{"task": "Open more options in the current checklist and then open the settings of the app", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Open more options in the current note, sort the checklist items by Custom, confirm the sorting of the checklist items, and then open more options in the current checklist", "solution": "tap($more_options_note)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Open more options for the current note, enable line wrap, set the alignment to center in the app", "solution": "tap($more_options_note)\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($alignment_center)\nback()"}
{"task": "Open settings, customize colors, set the background color to black, set the theme color to blue, set the text color to white, save the customized colors, and then close the customize colors popup", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\ntap($theme_color_black)\nback()\ntap($set_theme_color)\ntap($theme_color_blue)\nback()\ntap($set_text_color)\ntap($theme_color_white)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open more options for the current checklist, enable line wrap, set the alignment to left in the app", "solution": "tap($more_options_checklist)\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($alignment_left)\nback()"}
{"task": "Open settings, enable incognito mode for keyboards, and then set the text color to black", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_black)\nback()"}
{"task": "Disable line wrap, set the alignment to right in the app, and then enable incognito mode for keyboards", "solution": "tap($set_enable_line_wrap)\ntap($set_alignment)\ntap($alignment_right)\nback()\ntap($settings)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Search for the keyword 'project' within the current note, Scroll to the previous matching search result within the current note, Edit the note content to include 'Meeting at 10 AM', Save the changes made to the note.", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($prev_matched_text)\nset_text($note_content, get_text($note_content) + '\\nMeeting at 10 AM')\ntap($save_note)"}
{"task": "Open the note titled 'Project Plan', Open more options for the current note, Edit the note content to include 'Deadline moved to next Friday', Save the changes made to the note.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Plan')[0])\ntap($more_options_note)\nset_text($note_content, get_text($note_content) + '\\nDeadline moved to next Friday')\ntap($save_note)"}
{"task": "Open the first note in the note title list, Search for the keyword 'error' within the current note, Scroll to the previous matching search result within the current note, Edit the note content to include 'Fix urgent bug', Save the changes made to the note.", "solution": "tap($open_note)\ntap($open_note_title_list[0])\ntap($search_within_note)\nset_text($search_text, 'error')\ntap($prev_matched_text)\nset_text($note_content, get_text($note_content) + '\\nFix urgent bug')\ntap($save_note)"}
{"task": "Open the note titled 'Daily Agenda', Edit the note content to include 'Call with John at 2 PM', Save the changes made to the note, Open more options for the current note.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Daily Agenda')[0])\nset_text($note_content, get_text($note_content) + '\\nCall with John at 2 PM')\ntap($save_note)\ntap($more_options_note)"}
{"task": "Edit the note content to include 'Team lunch at 12:30 PM', Save the changes made to the note, Open the note titled 'Meeting Notes', Search for the keyword 'action item' within the current note.", "solution": "set_text($note_content, get_text($note_content) + '\\nTeam lunch at 12:30 PM')\ntap($save_note)\ntap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])\ntap($search_within_note)\nset_text($search_text, 'action item')"}
{"task": "Search for the word 'meeting' within the current note. If the word is found, tap the 'Next' button twice.", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\nif get_text($search_text):\n    tap($next_matchhed_text)\n    tap($next_matchhed_text)"}
{"task": "Edit the current note to add 'Pick up laundry' and save the current note. Then, search for the word 'deadline'.", "solution": "set_text($note_content, get_text($note_content) + '\\nPick up laundry')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Search for the word 'project' within the current note and find the next occurrence multiple times until the end of the note is reached. Then, close the search box.", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\nwhile True:\n    tap($next_matchhed_text)\n    if not get_text($search_text):\n        break\ntap($close_search_box)"}
{"task": "Open the current note, edit the content to say 'Finish project report'. Save the note, and then search for the word 'meeting'.", "solution": "tap($open_note)\nset_text($note_content, 'Finish project report')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Search for the word 'deadline' within the current note. Tap the 'Previous' button to find the previous occurrence, and then tap 'Next' to go back to where you started. Finally, close the search box.", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Go to settings and disable showing keyboard on startup", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\nback()"}
{"task": "Set the font size to 250% and then show the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\nback()\ntap($current_font_size)"}
{"task": "Set the cursor to be placed at the end of the note and enable showing keyboard on startup", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_show_keyboard_on_startup)\nback()"}
{"task": "Open the more options of the current checklist, set the font size to 175%, and then show the current font size", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nback()\ntap($current_font_size)"}
{"task": "Go to settings, set the font size to 300%, and then enable showing keyboard on startup", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($set_show_keyboard_on_startup)\nback()"}
{"task": "Open the Notes app, create a new text note titled 'Birthday Gift Ideas', add a checklist within this note for gift options, then rename the current note to 'Gift Ideas'", "solution": "tap($create_note)\nset_text($add_note_title, \"Birthday Gift Ideas\")\ntap($text_note_type)\ntap($checklist_type)\ntap($add_note_ok)\ntap($rename_note)\nset_text($rename_input, \"Gift Ideas\")\ntap($rename_ok)"}
{"task": "Open the Notes app, create a new text note titled 'Work Tasks', add a checklist with items 'Email John', 'Finish report', and 'Update website', then create a shortcut for this note", "solution": "tap($create_note)\nset_text($add_note_title, \"Work Tasks\")\ntap($text_note_type)\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, \"Email John\")\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, \"Finish report\")\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, \"Update website\")\ntap($add_checklist_item_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the Notes app, create a new checklist titled 'Shopping List', add items 'Milk', 'Eggs', and 'Bread', then lock the current note", "solution": "tap($create_note)\nset_text($add_note_title, \"Shopping List\")\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, \"Milk\")\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, \"Eggs\")\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, \"Bread\")\ntap($add_checklist_item_ok)\ntap($more_options_checklist)\ntap($lock_note)"}
{"task": "Open the Notes app, create a new text note titled 'Fitness Goals' and add a checklist within this note for weekly exercise plans, then create a shortcut for this note.", "solution": "tap($create_note)\nset_text($add_note_title, \"Fitness Goals\")\ntap($text_note_type)\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open 'more options' for the current note and enable 'Use monospaced font' in settings", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_use_monospaced_font)\nback()"}
{"task": "Open the settings page, show more options for the current checklist, enable word count display, and use a monospaced font.", "solution": "\n# Open settings page\ntap($more_options_checklist)\ntap($settings)\n\n# Enable word count display\ntap($set_show_word_count)\n\n# Use monospaced font\ntap($set_use_monospaced_font)\n"}
{"task": "Change the font size to 12px, make links and emails clickable, show more options for the current note, and set widget colors to red.", "solution": "\n# Open settings page to change font size\ntap($more_options_checklist)\ntap($settings)\n\n# Set font size to 12px (assuming 12px maps to 100%)\ntap($set_font_size)\ntap($font_size_100%)\n\n# Make links and emails clickable\ntap($set_make_links_and_emails_clickable)\n\n# Back to main, open more options for current note\nback()\nback()\ntap($more_options_note)\n\n# Set widget colors to red (assuming setting is in customize widget colors)\ntap($set_widget_colors)\n# Assuming some interaction to set color to red, fake it by setting primary color\n# Ideally, there should be an option to specifically set to red.\n# open color picker if available\ntap($customize_primary_ok)\n"}
{"task": "Create a new note with the title 'Project Plan', open it, add a checklist with the items 'Define Scope', 'Gather Requirements', and 'Develop Schedule'", "solution": "\n# Create a new note with title 'Project Plan'\ntap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($text_note_type)\ntap($add_note_ok)\n\n# Open the newly created note assumed at the start of the list\ntap($open_note)\ntap($open_note_title_list[0])\n\n# Add checklist items\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Define Scope')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Gather Requirements')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Develop Schedule')\ntap($add_checklist_item_ok)\n"}
{"task": "Open the third note in the list, then switch to the fourth item, show the title of the current note, and open the more options menu for the current checklist", "solution": "\n# Open third note in the list\ntap($open_note)\ntap($open_note_title_list[2])\n\n# Switch to the fourth note using switch_to_next_item\ntap($switch_to_next_item)\n\n# Show the title of the current note (print to standard output)\nprint(get_text($item_title))\n\n# Open more options menu for current checklist\ntap($more_options_checklist)\n"}
{"task": "Scroll through the items until you find the note titled 'Weekly Report', open it, display the checklist items, and tick off the third checklist item", "solution": "\n# Open the specified note titled 'Weekly Report'\ntap($open_note)\n\n# Find the note titled 'Weekly Report'\nfor idx in range(len($open_note_title_list)):\n    if get_text($open_note_title_list[idx]) == 'Weekly Report':\n        tap($open_note_title_list[idx])\n        break\n\n# Display checklist items\nfor idx in range(len($checklist_item_list)):\n    print(get_text($checklist_item_list[idx]))\n\n# Tick off the third checklist item\ntap($checklist_item_list[2])\n"}
{"task": "Search for the word 'meeting' within the current note, then open more options for the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($more_options_note)"}
{"task": "Find the next occurrence of 'project' in the current note, then edit the content to add 'Remember to buy milk' at the end", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($next_matchhed_text)\ntap($close_search_box)\nset_text($note_content, get_text($note_content) + ' Remember to buy milk')"}
{"task": "Edit the content of the current note to add 'Remember to buy milk' at the end, then find the previous occurrence of 'deadline'", "solution": "set_text($note_content, get_text($note_content) + ' Remember to buy milk')\ntap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)"}
{"task": "Open more options for the current note after searching for the word 'meeting' within the note.", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($more_options_note)"}
{"task": "Read the title of the current note and then check all items listed in the current checklist", "solution": "item_title_text = get_text($item_title)\nif 'checklist' in item_title_text.lower():\n  for checklist_item in $checklist_item_list:\n    tap(checklist_item)"}
{"task": "Set the theme color of the app to auto_light_drak and then change the primary color of the app to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\nback()\ntap($set_primary_color)\nset_text($customize_primary_ok, 'red')\ntap($save_set_colors)\nback()"}
{"task": "Customize the colors of the app and then set the background color of the app to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($customize_background_color, 'blue')\ntap($save_set_colors)\nback()"}
{"task": "Go to the app settings and then switch the theme color of the app to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\nback()"}
{"task": "Open more options of the current checklist and then set the app icon color to green", "solution": "tap($more_options_checklist)\ntap($set_app_icon_color)\nset_text($customize_app_icon_color, 'green')\ntap($save_set_colors)\nback()"}
{"task": "Change the theme color of the app to dark and then customize the theme color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()\ntap($set_theme_color)\ntap($theme_color_custom)\nback()"}
{"task": "Open the first note in the note title list, Edit the note content to include 'Review quarterly budget', Save the changes made to the note, Open more options for the current note.", "solution": "tap($open_note)\ntap($open_note_title_list[0])\nset_text($note_content, 'Review quarterly budget')\ntap($save_note)\ntap($more_options_note)"}
{"task": "Open the note titled 'Shopping List', Edit the note content to include 'Buy eggs and bread', Save the changes made to the note, Search for the keyword 'ingredients' within the current note, Scroll to the previous matching search result within the current note.", "solution": "tap($open_note)\nnote_title_elements = $open_note_title_list.match('Shopping List')\nif len(note_title_elements) > 0:\n    tap(note_title_elements[0])\n    set_text($note_content, 'Buy eggs and bread')\n    tap($save_note)\n    tap($search_within_note)\n    set_text($search_text, 'ingredients')\n    tap($prev_matched_text)"}
{"task": "Open the settings menu and change the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\n"}
{"task": "Open the settings menu, set the font size to 150%, and then adjust it again to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($set_font_size)\ntap($font_size_175%)\n"}
{"task": "Open more options for the current note and update the font size to 200%", "solution": "tap($more_options_note)\ntime.sleep(1)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Tap the 'More options' button to see additional features, then edit the note to add 'Call John by 5 PM' and save it.", "solution": "tap($more_options_note)\ntap($note_content)\nset_text($note_content, 'Call John by 5 PM')\ntap($save_note)"}
{"task": "Open the current note, search for the word 'project'. Tap the 'Next' button three times, close the search box, then save the current note.", "solution": "tap($open_note)\ntap($search_within_note)\nset_text($search_text, 'project')\ntap($next_matchhed_text)\ntap($next_matchhed_text)\ntap($next_matchhed_text)\ntap($close_search_box)\ntap($save_note)"}
{"task": "Open the file of the current note and then print the current note", "solution": "tap($more_options_note)\ntap($open_file)\ntap($print_note)"}
{"task": "Rename the current note to 'Project Plan' and then confirm the rename operation for the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)"}
{"task": "Export the current checklist as a file and then delete the current checklist", "solution": "tap($more_options_checklist)\ntap($export_as_file)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the more options of the current note, set the font size to 200%, and then set the cursor to be placed at the end of the note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($exit_settings)\nscroll($scroll_settings_page, 'down')\ntap($set_place_cursor_to_the_end_of_note)\ntap($exit_settings)"}
{"task": "Set the font size to 175%, then disable showing keyboard on startup and finally show the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($exit_settings)\nscroll($scroll_settings_page, 'down')\ntap($set_show_keyboard_on_startup)\ntap($exit_settings)\ntap($current_font_size)\n"}
{"task": "Create a text note titled 'Project Plan' and write 'Complete by end of Q4'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Complete by end of Q4')\ntap($save_note)\n"}
{"task": "Open an existing note titled 'Weekly To-Do' and create a checklist with items 'Buy groceries', 'Finish report', and 'Call John'", "solution": "tap($open_note)\n$open_note_title_list.match('Weekly To-Do')[0].tap()\ntap($create_note)\nset_text($add_note_title, 'Weekly To-Do')\ntap($checklist_type)\ntap($add_note_ok)\n$checklist_item_list[0].tap()\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)\n$checklist_item_list[1].tap()\nset_text($add_checklist_item_title, 'Finish report')\ntap($add_checklist_item_ok)\n$checklist_item_list[2].tap()\nset_text($add_checklist_item_title, 'Call John')\ntap($add_checklist_item_ok)\ntap($save_note)\n"}
{"task": "Create a text note titled 'Travel Itinerary' and then rename the current note to 'Vacation Plans'", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Itinerary')\ntap($text_note_type)\ntap($add_note_ok)\ntap($save_note)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Vacation Plans')\ntap($rename_ok)"}
{"task": "Open 'more options' for the current checklist and disable 'Use Incognito mode of keyboards' in settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Open settings from 'more options' of the current note and set alignment in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_alignment)\nback()"}
{"task": "Open settings from 'more options' of the current checklist and enable 'Enable line wrap' in settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_enable_line_wrap)\nback()"}
{"task": "Customize colors in settings from 'more options' of the current note and save the colors in the set colors screen", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($save_set_colors)\nback()"}
{"task": "Open settings from 'more options' of the current note, customize colors, close the set colors popup window, then enable 'Use monospaced font' in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($close_set_colors)\ntap($set_use_monospaced_font)\nback()"}
{"task": "Open settings, customize colors, set the theme color to dark mode, set the background color to black, set the text color to red, save the customized colors, and then close the customize colors popup", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($set_background_color)\nset_text($set_background_color, 'black')\ntap($set_text_color)\nset_text($set_text_color, 'red')\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open settings, set the alignment to center in the app, enable line wrap, set the theme color to blue, and set the text color to black", "solution": "tap($settings)\ntap($set_alignment)\nset_text($set_alignment, 'center')\ntap($set_enable_line_wrap)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'blue')\ntap($set_text_color)\nset_text($set_text_color, 'black')"}
{"task": "Open the note titled 'Shopping List' and delete the checklist item 'Eggs' then save the current note after editing the content", "solution": "tap($open_note)\nopen_list = $open_note_title_list\nnote_titles = [get_text(note) for note in open_list]\nfor i, title in enumerate(note_titles):\n    if title == 'Shopping List':\n        tap(open_list[i])\n        break\ntap($checklist_item_list)\nitems = $checklist_item_list\nfor i, item in enumerate(items):\n    if get_text(item) == 'Eggs':\n        long_tap(item)\n        tap($delete_selected_checklist_item)\n        break\ntap($save_note)"}
{"task": "Open the note titled 'Grocery List', delete the checklist item 'Milk' and add a new item 'Butter', then save the note", "solution": "tap($open_note)\nopen_list = $open_note_title_list\nnote_titles = [get_text(note) for note in open_list]\nfor i, title in enumerate(note_titles):\n    if title == 'Grocery List':\n        tap(open_list[i])\n        break\ntap($checklist_item_list)\nitems = $checklist_item_list\nfor i, item in enumerate(items):\n    if get_text(item) == 'Milk':\n        long_tap(item)\n        tap($delete_selected_checklist_item)\n        break\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Butter')\ntap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Edit the note titled 'Project Plan' to add a new section 'Timeline' and then search for text 'Milestone' within the same note", "solution": "tap($open_note)\nopen_list = $open_note_title_list\nnote_titles = [get_text(note) for note in open_list]\nfor i, title in enumerate(note_titles):\n    if title == 'Project Plan':\n        tap(open_list[i])\n        break\ntap($note_content)\ncontent = get_text($note_content)\ncontent += '\\n\\nTimeline\\n'\nset_text($note_content, content)\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'Milestone')"}
{"task": "Tap on the 'more options' button for the current checklist, then scroll to switch to the next item in the Notes app and read its title", "solution": "tap($more_options_checklist)\nscroll($switch_item, 'down')\nget_text($item_title)"}
{"task": "Read the title of the current note, then tap on the button to switch to the next checklist item and check it", "solution": "title = get_text($item_title)\ntap($switch_to_next_item)\nlong_tap($checklist_item_list[0])"}
{"task": "Tap on the button to switch to the previous note, read the title, and check all items listed in the current checklist", "solution": "tap($switch_to_prev_item)\ntitle = get_text($item_title)\nchecklist_items = $checklist_item_list\nfor item in checklist_items:\n    long_tap(item)"}
{"task": "Scroll to switch to the next item in the Notes app, read the title, then tap on the 'more options' button for the current checklist", "solution": "scroll($switch_item, 'down')\ntitle = get_text($item_title)\ntap($more_options_checklist)"}
{"task": "Tap on the button to switch to the previous note, then tap on the 'more options' button for the current checklist and check all items listed", "solution": "tap($switch_to_prev_item)\ntap($more_options_checklist)\nchecklist_items = $checklist_item_list\nfor item in checklist_items:\n    long_tap(item)"}
{"task": "Open the file of the current checklist, print the current checklist, and then rename the current checklist to 'Travel Itinerary'", "solution": "tap($more_options_checklist)\ntap($open_file)\ntap($print_note)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Travel Itinerary')\ntap($rename_ok)"}
{"task": "Export the current note as a file, then delete the current note and finally open the settings of the app", "solution": "tap($more_options_note)\ntap($export_as_file)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Rename the current checklist to 'Weekly Groceries', confirm the rename operation for the current checklist, and then open the settings of the app", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Weekly Groceries')\ntap($rename_ok)\ntap($settings)"}
{"task": "Print the current note, then export the current note as a file and finally show me the information about the app", "solution": "tap($print_note)\ntap($more_options_note)\ntap($export_as_file)\ntap($more_options_note)\ntap($about)"}
{"task": "Open the file of the current note, rename the current note to 'Budget Report', confirm the rename operation for the current note, then export the current note as a file", "solution": "tap($more_options_note)\ntap($open_file)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Budget Report')\ntap($rename_ok)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Open 'more options' for the current checklist, open settings, disable 'Enable line wrap', and enable 'Use Incognito mode of keyboards'", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_enable_line_wrap)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Open 'more options' for the current note, go to settings, disable 'Use monospaced font', enable 'Enable line wrap', and customize colors, then save the colors in the set colors screen.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_use_monospaced_font)\ntap($set_enable_line_wrap)\ntap($set_colors)\ntap($save_set_colors)\nback()"}
{"task": "Go to the app settings and enable automatic backups, then enable the autosave notes feature", "solution": "tap($settings)\ntap($set_enable_automatic_backups)\ntap($set_autosave_notes)\nback()"}
{"task": "Open the more options for the current checklist and export all notes", "solution": "tap($more_options_checklist)\ntap($export_notes)\nback()"}
{"task": "Go to the app settings, disable the option to show a note picker on startup, then enable the display save success messages option", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($set_display_save_success_messages)\nback()"}
{"task": "Create a new note with the title 'Shopping List', add a checklist with the items 'Fruits', 'Vegetables', and 'Dairy', then view all items in the current checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Fruits')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Vegetables')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Dairy')\ntap($add_checklist_item_ok)\nlen($checklist_item_list)"}
{"task": "Open the second checklist item in the current note, switch to the note following the current one, and show the title of the current note", "solution": "long_tap($checklist_item_list[1])\ntap($switch_to_next_item)\nget_text($item_title)"}
{"task": "Switch to the previous item in the notes list twice, open the more options menu for the current checklist, and add a new checklist item 'Follow up with clients'", "solution": "tap($switch_to_prev_item)\ntap($switch_to_prev_item)\ntap($more_options_checklist)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Follow up with clients')\ntap($add_checklist_item_ok)"}
{"task": "Open the note titled 'Grocery List', display the checklist items, tap on the fourth checklist item, then switch to the next item in the notes list", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\nlen($checklist_item_list)\ntap($checklist_item_list[3])\ntap($switch_to_next_item)"}
{"task": "Create a new note with the title 'Budget Plan', open it, add a checklist with items 'Income', 'Expenses', and 'Savings', and then view all items in the current checklist.", "solution": "tap($create_note)\nset_text($add_note_title, 'Budget Plan')\ntap($checklist_type)\ntap($add_note_ok)\nlen($checklist_item_list)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Income')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Expenses')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Savings')\ntap($add_checklist_item_ok)\nlen($checklist_item_list)"}
{"task": "Open the settings menu, increase the font size to 250%, and then decrease it to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Open the settings menu, adjust the font size to 175%, then open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nback()\ntap($more_options_checklist)"}
{"task": "Open more options for the current note and modify the font size to 125%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Open the settings menu, change the font size to 150%, and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($more_options_checklist)"}
{"task": "Open the settings menu, set the font size to 125%, update it to 200%, and finally adjust it to 250%.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($set_font_size)\ntap($font_size_200%)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Set the background color of the app to blue and then change the text color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\n# Assuming there is an option to set the background color to blue, select it\ntap($save_set_colors)\n# Now change the text color\ntap($set_text_color)\n# Assuming there is an option to set the text color, select it\ntap($save_set_colors)\nback()"}
{"task": "Change the primary color of the app to red and then set the theme color of the app to dark_red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\n# Assuming there is an option to set the primary color to red, select it\ntap($save_set_colors)\n# Now change the theme color to dark_red\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\nback()"}
{"task": "Customize the theme color of the app and then change the theme color of the app to black_white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\n# Assuming there is an option to customize the theme color, select it\ntap($theme_color_custom)\ntap($save_set_colors)\n# Now change the theme color to black_white\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()"}
{"task": "Customize the app colors and change the app icon color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\n# Assuming there is an option to set the app icon color to blue, select it\ntap($save_set_colors)\nback()"}
{"task": "Open the settings menu and set the app theme to auto light/dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\nback()"}
{"task": "Export all notes and then import notes from a file", "solution": "tap($settings)\ntap($export_notes)\ntap($import_notes)"}
{"task": "Go to the app settings and disable automatic backups, then enable the option to show a note picker on startup", "solution": "tap($settings)\ntap($set_enable_automatic_backups)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open the more options for the current note, go to the app settings, and enable the autosave notes feature", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_autosave_notes)"}
{"task": "Disable the autosave notes feature, then open the more options for the current checklist and export all notes", "solution": "tap($settings)\ntap($set_autosave_notes)\ntap($settings).exit()\ntap($more_options_checklist)\ntap($export_notes)"}
{"task": "Go to the app settings, disable the display save success messages option, then enable the autosave notes feature", "solution": "tap($settings)\ntap($set_display_save_success_messages)\ntap($set_autosave_notes)"}
{"task": "Enable making links and emails clickable and then show the word count in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_make_links_and_emails_clickable)\ntap($set_show_word_count)"}
{"task": "Customize the colors in the Notes app and then save the customized colors in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($save_set_colors)"}
{"task": "Enable Incognito mode for keyboards and then use monospaced font in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_use_monospaced_font)"}
{"task": "Show the word count and then enable line wrapping in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_show_word_count)\ntap($set_enable_line_wrap)"}
{"task": "Set the alignment to center and then customize the colors in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_alignment)\ntap($set_colors)"}
{"task": "Open an existing note titled 'Grocery List', create a shortcut for the current note, and add 'eggs' to the checklist", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_title = note_titles.match('Grocery List')[0]\ntap(note_title)\ntap($more_options_note)\ntap($create_shortcut)\ntap($note_content)\nset_text($note_content, 'Grocery List\\n- eggs')\ntap($save_note)"}
{"task": "Create a checklist titled 'Morning Routine' and add items 'Breakfast', 'Exercise', and 'Check emails', then rename the current note to 'Daily Morning Routine'", "solution": "tap($create_note)\nset_text($add_note_title, 'Morning Routine')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Breakfast')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Exercise')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Check emails')\ntap($add_checklist_item_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Daily Morning Routine')\ntap($rename_ok)"}
{"task": "Create a text note titled 'Budget' and write 'Review expenses monthly', then create a shortcut for the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Budget')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Review expenses monthly')\ntap($more_options_note)\ntap($create_shortcut)\ntap($save_note)"}
{"task": "Open an existing note titled 'Team Meeting' and create a checklist with items 'Prepare slides', 'Book meeting room', and 'Send agenda', then rename the current note to 'Team Meeting Preparation'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_title = note_titles.match('Team Meeting')[0]\ntap(note_title)\ntap($create_note)\nset_text($add_note_title, 'Team Meeting Preparation')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Prepare slides')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Book meeting room')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Send agenda')\ntap($add_checklist_item_ok)"}
{"task": "Create a text note titled 'Event Schedule' and write '9:00 AM - Breakfast, 10:00 AM - Keynote, 12:00 PM - Lunch', then create a shortcut for the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Event Schedule')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '9:00 AM - Breakfast\\n10:00 AM - Keynote\\n12:00 PM - Lunch')\ntap($more_options_note)\ntap($create_shortcut)\ntap($save_note)"}
{"task": "Read the title of the current note, then tap on the button to switch to the next checklist item, and finally scroll to switch to the next item in the Notes app", "solution": "title = get_text($item_title)\ntap($switch_to_next_item)\nscroll($switch_item, \"down\")"}
{"task": "Scroll to switch to the next item in the Notes app, read its title, and then tap on the button to switch to the previous note", "solution": "scroll($switch_item, \"down\")\ntitle = get_text($item_title)\ntap($switch_to_prev_item)"}
{"task": "Open the settings of the notes app and enable line wrap", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, \"down\")\nif not get_attributes($set_enable_line_wrap)['checked']:\n  tap($set_enable_line_wrap)"}
{"task": "Customize the colors of the notes app by setting the theme color to #ff5733, text color to #000000, and background color to #ffffff, then save the customized colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\nif not get_attributes($theme_color_custom)['selected']:\n  tap($theme_color_custom)\nset_text($set_theme_color, '#ff5733')\ntap($set_text_color)\nset_text($set_text_color, '#000000')\ntap($set_background_color)\nset_text($set_background_color, '#ffffff')\ntap($save_set_colors)"}
{"task": "Open the settings of the notes app and set alignment to center, then enable line wrap", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_alignment)\nset_text($set_alignment, 'center')\ntap($set_alignment_ok)\nscroll($scroll_settings_page, \"down\")\nif not get_attributes($set_enable_line_wrap)['checked']:\n  tap($set_enable_line_wrap)"}
{"task": "Open the note titled 'To-Do List', check off the item 'Call plumber' and then edit the note to add a new item 'Schedule car service' at the end", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'To-Do List':\n        tap(notes[i])\n        break\nchecklist = $checklist_item_list\nfor i in range(len(checklist)):\n    if get_text(checklist[i]) == 'Call plumber':\n        tap(checklist[i])\n        break\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Schedule car service')\ntap($add_checklist_item_ok)"}
{"task": "Open the note titled 'Work Notes', search for the text 'Meeting' and then add 'Summary of today's meeting' immediately below it", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Work Notes':\n        tap(notes[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'Meeting')\ntap($next_matchhed_text)\nnote_content = get_text($note_content)\nindex = note_content.find('Meeting')\nnew_content = note_content[:index + len('Meeting')] + '\\nSummary of today's meeting' + note_content[index + len('Meeting'):]\nset_text($note_content, new_content)\ntap($save_note)"}
{"task": "Open the note titled 'Books to Read', add the book '1984' to the list, and then sort the list alphabetically", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Books to Read':\n        tap(notes[i])\n        break\ntap($add_checklist_item)\nset_text($add_checklist_item_title, '1984')\ntap($add_checklist_item_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the note titled 'Daily Tasks', scroll through the checklist items, and mark 'Reply to emails' as completed", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Daily Tasks':\n        tap(notes[i])\n        break\nscroll($checklist_item_list, 'down')\nchecklist = $checklist_item_list\nfor i in range(len(checklist)):\n    if get_text(checklist[i]) == 'Reply to emails':\n        tap(checklist[i])\n        break"}
{"task": "Open the note titled 'Workout Routine', update the checklist item 'Cardio' to '45-minute Cardio', and then add a new section 'Diet Plan'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Workout Routine':\n        tap(notes[i])\n        break\nchecklist = $checklist_item_list\nfor i in range(len(checklist)):\n    if get_text(checklist[i]) == 'Cardio':\n        long_tap(checklist[i])\n        tap($rename_selected_checklist_item)\n        set_text($rename_input, '45-minute Cardio')\n        tap($rename_ok)\n        break\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Diet Plan')\ntap($add_checklist_item_ok)"}
{"task": "Create a new note titled 'Grocery List' and confirm, then add 'Buy milk, eggs, and bread' to the note", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)\nset_text($note_content, 'Buy milk, eggs, and bread')"}
{"task": "Open an existing note titled 'Project Ideas', rename the current note to 'Project Concepts' and lock the current note", "solution": "tap($open_note)\n$open_note_title_list.match('Project Ideas')[0]\ntap($open_note_title_list.match('Project Ideas')[0])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Concepts')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Create a new note titled 'Daily Agenda' and confirm, add 'Finish report by 3 PM', then export the current note as a file", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Agenda')\ntap($add_note_ok)\nset_text($note_content, 'Finish report by 3 PM')\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Open an existing note titled 'Workout Plan', open more options for the current note, and create a shortcut for the current note", "solution": "tap($open_note)\n$open_note_title_list.match('Workout Plan')[0]\ntap($open_note_title_list.match('Workout Plan')[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Create a new note titled 'Vacation Planning' and confirm, add 'Book flights and hotels' to the note, then lock the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Planning')\ntap($add_note_ok)\nset_text($note_content, 'Book flights and hotels')\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Tap the 'More options' button in the current note, then open the Settings, and customize the colors to set the text color to blue and the background color to white", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'blue')\ntap($save_set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'white')\ntap($save_set_colors)"}
{"task": "Tap the 'More options' button in the current checklist, open the Settings, and change the theme of the app to dark", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open the Settings from the more options in the current note, set the primary color of the app to green, then change the theme of the app to auto light/dark", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Tap the 'More options' button in the current note, open the Settings, and set the app icon color to red", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'red')\ntap($save_set_colors)"}
{"task": "Customize the colors in the app to set the text color to black, background color to gray, and primary color to yellow", "solution": "tap($set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'black')\ntap($save_set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'gray')\ntap($save_set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'yellow')\ntap($save_set_colors)"}
{"task": "Open more options for the current note and then enable making links and emails clickable", "solution": "tap($more_options_note)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Enable line wrapping and then set the alignment to left in the Notes app", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_alignment)\ntap($title_type)\nback()"}
{"task": "Use monospaced font and then enable Incognito mode for keyboards in the Notes app.", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Open the settings in the app and set the theme color of the app to Dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()"}
{"task": "Customize the colors of the app and set the font size to 150%", "solution": "tap($settings)\ntap($set_colors)\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Open more options for the current checklist and set the app theme to dark mode", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Change the app theme to light mode and activate the Black & White theme for the app", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Set the app theme to dark mode and open more options for the current note", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Switch the app theme to dark red mode and customize the app colors", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\ntap($set_colors)"}
{"task": "Open the settings menu and change the app icon color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'blue')\ntap($save_set_colors)"}
{"task": "Open the settings in the app, set the theme color to Light, and then enable the Auto Light/Dark theme color option", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($theme_color_auto_light_dark)\n"}
{"task": "Show the current font size of the app and then set it to 100%", "solution": "tap($settings)\ntap($current_font_size)\nprint(get_text($current_font_size))\ntap($font_size_100%)\n"}
{"task": "Open the settings in the app, set the theme color to Dark Red, and set the font size to 200%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($exit_settings)\ntap($current_font_size)\ntap($font_size_200%)\n"}
{"task": "Customize the colors of the app, set the theme color to Custom, and set the font size to 300%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($exit_settings)\ntap($current_font_size)\ntap($font_size_300%)\n"}
{"task": "Open the more options for the current note and set the font size to 75%", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\ntap($font_size_75%)\n"}
{"task": "Open the settings, change the font size to large, then customize the colors of the app to blue and white", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_150%)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($set_theme_color, 'blue')\ntap($set_background_color)\nset_text($set_background_color, 'white')\ntap($save_set_colors)"}
{"task": "Turn on the 'Show word count' option, scroll down in the settings page, customize the widget colors to green and black, then exit the settings page", "solution": "tap($settings)\ntap($set_show_word_count)\nscroll($scroll_settings_page, 'down')\ntap($set_widget_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($set_theme_color, 'green')\ntap($set_background_color)\nset_text($set_background_color, 'black')\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Open the settings, change the font size to large, sort the checklist items by name, then sort the checklist items by date", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_150%)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Customize the colors of the app to blue and white, customize the widget colors to green and black, then turn on the 'Show word count' option", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($set_theme_color, 'blue')\ntap($set_background_color)\nset_text($set_background_color, 'white')\ntap($save_set_colors)\ntap($set_widget_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($set_theme_color, 'green')\ntap($set_background_color)\nset_text($set_background_color, 'black')\ntap($save_set_colors)\ntap($settings)\ntap($set_show_word_count)"}
{"task": "Sort the checklist items by date, open more options in the current note, then scroll down in the settings page", "solution": "tap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Enable making links and emails clickable, then change the font to monospaced and save the customized colors as 'Work Setup'", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)\ntap($set_colors)\ntap($save_set_colors)\nset_text($set_theme_color, 'Work Setup')\nback()"}
{"task": "Change the alignment settings to center, customize the app colors to a dark theme, and set the app theme color to navy blue", "solution": "tap($settings)\ntap($set_alignment)\nset_text($set_alignment, 'Center')\nback()\ntap($set_colors)\ntap($set_theme_color)\nset_text($set_theme_color, 'Dark')\ntap($theme_color_dark)\ntap($set_primary_color)\nset_text($set_primary_color, 'navy blue')\ntap($save_set_colors)\nback()"}
{"task": "Activate Incognito mode for keyboards and enable line wrapping for secure writing sessions", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_enable_line_wrap)\nback()"}
{"task": "Enable making links and emails clickable, customize the app colors, and save these customized colors as 'Default Colors'", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($set_colors)\ntap($save_set_colors)\nset_text($set_theme_color, 'Default Colors')\nback()"}
{"task": "Change the font to monospaced, enable line wrapping, and adjust the alignment settings to justify", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_enable_line_wrap)\ntap($set_alignment)\nset_text($set_alignment, 'Justify')\nback()"}
{"task": "Set the app theme to white and open more options for the current checklist.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()\ntap($more_options_checklist)"}
{"task": "Change the font size in the app to 18pt, then check the current font size to confirm the change.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($current_font_size)\nfont_size_selected = get_attributes($font_size_150%)['selected']\nassert font_size_selected == True"}
{"task": "Go to settings from the note options, then customize the app colors to a dark theme.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()"}
{"task": "Open more options for the current note and then go to settings from there to customize the widget colors to blue.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_widget_colors)\n# Assuming there's a set_widget_color function defined for blue\nset_widget_color('blue')\nback()"}
{"task": "From the checklist options, go to settings and enable 'Show the word count in the app'.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_show_word_count)\nwatch($settings)\nback()"}
{"task": "Open more options for the current note, then set the primary color of the notes app to #3498db", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, '#3498db')\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Customize the colors of the notes app by setting the primary color to #3498db, then save the customized colors and close the customize colors popup", "solution": "tap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, '#3498db')\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Set the theme color to #1abc9c and the text color to #2c3e50 in the notes app settings, then save the customized colors", "solution": "tap($set_colors)\ntap($set_theme_color)\nset_text($set_theme_color, '#1abc9c')\ntap($set_text_color)\nset_text($set_text_color, '#2c3e50')\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist, then enable line wrap in the notes app settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_enable_line_wrap)\ntap($exit_settings)"}
{"task": "Open the settings of the notes app, set the background color to #ecf0f1 and the primary color to #9b59b6, then save the customized colors and close the customize colors popup.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, '#ecf0f1')\ntap($set_primary_color)\nset_text($set_primary_color, '#9b59b6')\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the settings, check the box for 'autosave notes', uncheck the box for 'display save success messages', and then navigate back to the main screen", "solution": "tap($settings)\ntap($set_autosave_notes)\ntap($set_display_save_success_messages)\ntap($exit_settings)"}
{"task": "Open the settings, check the box for 'show a note picker on startup', uncheck the box for 'show keyboard on startup', and tap 'export notes'", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($set_show_keyboard_on_startup)\ntap($export_notes)"}
{"task": "Open the settings, check the box for 'show keyboard on startup', check the box for 'set place cursor to the end of note', and then uncheck the box for 'autosave notes'", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_autosave_notes)"}
{"task": "Open the settings, uncheck the box for 'show keyboard on startup', check the box for 'display save success messages', and then tap 'export notes'", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_display_save_success_messages)\ntap($export_notes)"}
{"task": "Open the settings, check the box for 'set place cursor to the end of note', uncheck the box for 'show a note picker on startup', check the box for 'autosave notes', and uncheck the box for 'display save success messages'", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_show_a_note_picker_on_startup)\ntap($set_autosave_notes)\ntap($set_display_save_success_messages)"}
{"task": "Change the theme of the app to light, then within the same settings, set the theme color of the app to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($set_theme_color)\ntap($theme_color_dark)\n"}
{"task": "Tap the 'More options' button in the current checklist, navigate to the settings, and set the background color to blue and the text color to white", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text({'label': 'color input'}, 'blue')\ntap($customize_primary_ok)\ntap($set_text_color)\nset_text({'label': 'color input'}, 'white')\ntap($customize_primary_ok)\n"}
{"task": "Set the text color of the app to green, the background color to purple, then change the theme to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\nset_text({'label': 'color input'}, 'green')\ntap($customize_primary_ok)\ntap($set_background_color)\nset_text({'label': 'color input'}, 'purple')\ntap($customize_primary_ok)\ntap($set_theme_color)\ntap($theme_color_dark)\n"}
{"task": "Open a note titled 'Grocery List', then create a new note with the title 'Party Plans'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_to_open = note_titles.match('Grocery List')[0]\ntap(note_to_open)\ntap($create_note)\nset_text($add_note_title, 'Party Plans')\ntap($add_note_ok)\n"}
{"task": "Create a new checklist note titled 'Workout Routine', then lock the note titled 'Workout Routine'", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Routine')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)\nnote_titles = $open_note_title_list\nnote_to_open = note_titles.match('Workout Routine')[0]\ntap(note_to_open)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\n"}
{"task": "Open more options for the current note and then customize the colors of the app", "solution": "tap($more_options_note)\ntap($set_colors)"}
{"task": "Open more options for the current checklist and set the theme color to dark red", "solution": "tap($more_options_checklist)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Go to the app settings and set the theme color to black and white", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Open more options for the current note, customize the colors of the app, and set the theme color to light", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Open more options for the current checklist, go to the app settings, and set the theme color to dark", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Open an existing note titled 'Recipes', rename the current note to 'Favorite Recipes', then export the current note as a file", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Recipes')\ntap(notes[0])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Favorite Recipes')\ntap($rename_ok)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Create a new note titled 'Meeting Summary' and confirm, add 'Discuss quarterly results' to the note, and open more options for the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Summary')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Discuss quarterly results')\ntap($more_options_note)"}
{"task": "Open an existing note titled 'Movie Watchlist', rename the current note to 'Weekend Movies', then create a shortcut for the current note", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Movie Watchlist')\ntap(notes[0])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Weekend Movies')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Print the current note, then rename it to 'Grocery List'", "solution": "tap($more_options_note)\ntap($print_note)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Delete the current note and then open the app settings", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Open the settings, uncheck the box for 'set place cursor to the end of note', check the box for 'show keyboard on startup', and then check the box for 'display save success messages'", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_show_keyboard_on_startup)\ntap($set_display_save_success_messages)"}
{"task": "Open the settings, uncheck the box for 'show a note picker on startup', check the box for 'autosave notes', and uncheck the box for 'show keyboard on startup'", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($set_autosave_notes)\ntap($set_show_keyboard_on_startup)"}
{"task": "Open the settings, check the box for 'show a note picker on startup', check the box for 'display save success messages', and tap 'export notes'", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($set_display_save_success_messages)\ntap($export_notes)"}
{"task": "Open the Notes app, create a new note titled 'Project Outline', and then export the note as a file", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Outline')\ntap($add_note_ok)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Open the Notes app, open the note titled 'Workout Routine', make a shortcut for it, and then lock the note", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nnote_titles = open_note_title_list.match('Workout Routine')\ntap(note_titles[0])\ntap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the settings, customize the widget colors to green and black, then change the font size to large", "solution": "tap($settings)\ntap($set_widget_colors)\ntap($set_background_color)\nset_text($set_background_color, 'green')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'black')\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Sort the checklist items by name, open more options in the current checklist, then customize the colors of the app to blue and white", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'blue')\ntap($save_set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'white')\ntap($save_set_colors)"}
{"task": "Open the settings, turn on the 'Show word count' option, then scroll down in the settings page and exit", "solution": "tap($settings)\ntap($set_show_word_count)\nscroll($scroll_settings_page, 'down')\ntap($exit_settings)"}
{"task": "Tap 'more options' on the current note and then tap 'Settings' to enable both 'show keyboard on startup' and 'autosave notes' checkboxes", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_autosave_notes)\ntap($exit_settings)"}
{"task": "Tap 'more options' on the current checklist then go to 'Settings' to toggle off 'display save success messages' and 'show a note picker on startup' checkboxes", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_display_save_success_messages)\ntap($set_show_a_note_picker_on_startup)\ntap($exit_settings)"}
{"task": "Open the settings of the Notes app and then change the theme color of the Notes app to White and set the font size of the Notes app to 75%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()\ntap($set_font_size)\ntap($font_size_75%)\nback()"}
{"task": "Change the theme color of the Notes app to Custom and customize the colors of the Notes app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Set the theme color of the Notes app to Black & White then open more options for the current note and increase the font size of the Notes app to 60%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()\nback()\ntap($more_options_note)\ntap($set_font_size)\ntap($font_size_60%)\nback()"}
{"task": "Open the settings of the Notes app and reduce the font size of the Notes app to 50% then set the theme color of the Notes app to Custom and customize the colors of the Notes app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_50%)\nback()\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()"}
{"task": "Open the settings of the Notes app and set the font size to 75% and theme color to Black & White", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()"}
{"task": "Activate Incognito mode for keyboards, change the alignment settings to left, and set the app theme color to green", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_alignment)\ntap($title_type)\nback()\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($theme_color_dark_red) # Assuming the app uses a predefined color or a color picker dialog\nback()\ntap($save_set_colors)\nback()"}
{"task": "Customize the app colors to light mode, save these settings as 'Reading Mode', and enable line wrapping", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($theme_color_white)\ntap($theme_color_custom) # Assuming light mode as a custom setting\nback()\ntap($save_set_colors)\nset_text($set_custom_display_mode, 'Reading Mode')\ntap($save_custom_display_mode)\nback()"}
{"task": "Change the alignment settings to right, set the app theme color to orange, and enable making links and emails clickable", "solution": "tap($settings)\ntap($set_alignment)\ntap($custom_type)\ntap($title_type) # Assuming right alignment\nback()\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($theme_color_dark_red) # Assuming the app uses a predefined color or a color picker dialog\nback()\ntap($save_set_colors)\nback()\ntap($set_make_links_and_emails_clickable)"}
{"task": "Create a new text note with the title 'Project Ideas', then search for the text 'meeting notes' within the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'meeting notes')\ntap($prev_matched_text)\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Open an existing note titled 'Daily Journal', then create a new note with the title 'To-Do List' and set it to be a checklist", "solution": "tap($open_note)\nnote_buttons = $open_note_title_list\nfor note in note_buttons:\n    if get_text(note) == 'Daily Journal':\n        tap(note)\n        break\ntap($create_note)\nset_text($add_note_title, 'To-Do List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Set the theme color of the app to Black & White and then set the font size to 90%.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_90%)"}
{"task": "Lock the note titled 'Project Plan' and then export it as a file", "solution": "tap($open_note)\n$note_titles = $open_note_title_list.match(\"Project Plan\")\ntap($note_titles[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Create a shortcut for the checklist titled 'Grocery List' and then print it", "solution": "tap($open_note)\n$note_titles = $open_note_title_list.match(\"Grocery List\")\ntap($note_titles[0])\ntap($more_options_checklist)\ntap($create_shortcut)\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Open the file of the note titled 'Trip Itinerary' and then create a shortcut for it", "solution": "tap($open_note)\n$note_titles = $open_note_title_list.match(\"Trip Itinerary\")\ntap($note_titles[0])\ntap($more_options_note)\ntap($open_file)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Print the checklist titled 'Daily Tasks' and then lock it", "solution": "tap($open_note)\n$note_titles = $open_note_title_list.match(\"Daily Tasks\")\ntap($note_titles[0])\ntap($more_options_checklist)\ntap($print_note)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the note titled 'Grocery List', add a new item 'Bananas', then save it and close the note", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nopen_note = open_note_titles.match('Grocery List')[0]\ntap(open_note)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bananas')\ntap($add_checklist_item_ok)\ntap($save_note)\nback()"}
{"task": "Rename the current note to 'Project Plan', then export the note titled 'Project Plan' as a file", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Create a shortcut for the note titled 'Daily Journal', then print the note titled 'Daily Journal'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nopen_note = open_note_titles.match('Daily Journal')[0]\ntap(open_note)\ntap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Create a new note with the title 'Client Meeting Notes', then lock the note titled 'Client Meeting Notes'", "solution": "tap($create_note)\nset_text($add_note_title, 'Client Meeting Notes')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the note titled 'Expense Report', then open the file attached to the note titled 'Expense Report'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nopen_note = open_note_titles.match('Expense Report')[0]\ntap(open_note)\ntap($more_options_note)\ntap($open_file)"}
{"task": "Customize the colors of the app and set the theme color to white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Go to the app settings, customize the colors of the app, and set the theme color to custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Open more options for the current note, go to the app settings, and set the theme color to dark", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open the settings menu and set the app theme color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\n# Assuming there is a theme color option named 'Blue'\ntap($theme_color_blue)\ntap($save_set_colors)"}
{"task": "Customize the colors of the app by opening the settings menu from the more options menu for the current note and set the text color to red and the background color to white", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_text_color)\n# Assuming there is a color option named 'Red'\ntap($text_color_red)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Customize the widget colors for the Notes app, then activate clickable links and emails", "solution": "tap($settings)\ntap($set_widget_colors)\nback()\ntap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Show the current font size in the Notes app, increase it to large, and then enable word count display", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_200%)\nback()\ntap($set_show_word_count)\nback()"}
{"task": "Open more options for the current checklist and then switch to using a monospaced font for the Notes app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_use_monospaced_font)\nback()"}
{"task": "Enable word count display in the Notes app, activate clickable links and emails, and customize the widget colors", "solution": "tap($settings)\ntap($set_show_word_count)\ntap($set_make_links_and_emails_clickable)\ntap($set_widget_colors)\nback()\nback()"}
{"task": "Open more options for the current note, set the font size to large, and switch to using a monospaced font", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\ntap($font_size_200%)\nback()\ntap($set_use_monospaced_font)\nback()"}
{"task": "Open the Notes app, create a new note titled 'Holiday Plans', and print the note", "solution": "tap($create_note)\nset_text($add_note_title, 'Holiday Plans')\ntap($add_note_ok)\ntap($print_note)"}
{"task": "Open the Notes app, rename the current note to 'Groceries List', and then delete it", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Groceries List')\ntap($rename_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the Notes app, create a note titled 'Team Meeting', export it as a file, then open the file for review", "solution": "tap($create_note)\nset_text($add_note_title, 'Team Meeting')\ntap($add_note_ok)\ntap($more_options_note)\ntap($export_as_file)\ntap($open_file)"}
{"task": "Open the Notes app, create a new note titled 'To-Do List', add items to the list, and then print the note", "solution": "tap($create_note)\nset_text($add_note_title, 'To-Do List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 1')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 2')\ntap($add_checklist_item_ok)\ntap($print_note)"}
{"task": "Open the Notes app, open the note titled 'Travel Itinerary', lock it, and then create a shortcut for it", "solution": "tap($open_note)\nopen_note_title_idx = $open_note_title_list.match('Travel Itinerary')[0]\ntap(open_note_title_idx)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Navigate through 'more options' on the current note to import notes via 'Settings' and then toggle 'autosave notes'", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($import_notes)\nscroll($scroll_settings_page, 'down')\ntap($set_autosave_notes)\nback()"}
{"task": "Go into 'Settings' from 'more options' on the current note to export notes, then enable 'display save success messages' checkbox", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($export_notes)\nscroll($scroll_settings_page, 'down')\ntap($set_display_save_success_messages)\nback()"}
{"task": "After tapping 'more options' on the current checklist, go to 'Settings' to enable 'show keyboard on startup' and 'show a note picker on startup', then export notes", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_show_keyboard_on_startup)\ntap($set_show_a_note_picker_on_startup)\nscroll($scroll_settings_page, 'down')\ntap($export_notes)\nback()"}
{"task": "Open 'Settings' through 'more options' on the current note, toggle the 'show keyboard on startup' checkbox, and then toggle 'display save success messages'", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_show_keyboard_on_startup)\nscroll($scroll_settings_page, 'down')\ntap($set_display_save_success_messages)\nback()"}
{"task": "Access 'Settings' from 'more options' on the current checklist to toggle 'show a note picker on startup', and then import notes", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_show_a_note_picker_on_startup)\nscroll($scroll_settings_page, 'down')\ntap($import_notes)\nback()"}
{"task": "Create a new note with the title 'Shopping List' and set it to be a checklist, then add a note with the title 'Daily Journal'", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($add_note_ok)"}
{"task": "Search for the text 'meeting notes' within the current note, then close the search box and create a new note titled 'Workout Plan' and confirm", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')\ntap($close_search_box)\ntap($create_note)\nset_text($add_note_title, 'Workout Plan')\ntap($add_note_ok)"}
{"task": "Create a new note with the title 'Project Ideas', then create a new note with the title 'Shopping List' and set it to be a checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($add_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Add a text note titled 'Daily Journal', then search for the text 'meeting notes' within the current note", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'meeting notes')"}
{"task": "Open the first note in the list, then create a new text note with the title 'Project Ideas' and search for the text 'meeting notes' within the current note", "solution": "tap($open_note)\ntap($open_note_title_list[0])\ntap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'meeting notes')"}
{"task": "Change the theme color to Black & White then open more options for the current checklist and increase the font size to 60%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()\ntap($more_options_checklist)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Open the settings of the Notes app, change the theme color to White, then customize the colors of the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()\ntap($set_colors)"}
{"task": "Set the theme color of the Notes app to Custom, customize the colors, and then open more options for the current note and set the font size to 75%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()\ntap($set_colors)\nback()\ntap($more_options_note)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Tap on 'Open Note' and edit the content of the current note to 'Meeting notes at 10 am'. Then tap on 'Search' within the current note, input 'agenda' in the search box, and find the next occurrence.", "solution": "tap($open_note)\n# Assume some note is opened\ntap($note_content)\nset_text($note_content, 'Meeting notes at 10 am')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'agenda')\ntap($next_matchhed_text)"}
{"task": "Create a new note with the title 'Grocery List' and add a new note of type 'checklist'. Add items 'Milk', 'Bread', and 'Eggs' to the checklist.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Eggs')\ntap($add_checklist_item_ok)"}
{"task": "Open the settings menu in the Notes app, turn on Incognito mode for the keyboard, and then enable line wrap.", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_enable_line_wrap)\n"}
{"task": "Open the settings of the app and then set the font size of the app to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\n"}
{"task": "Enable the autosave notes feature and then enable the display save success messages feature", "solution": "tap($settings)\ntap($set_autosave_notes)\ntap($set_display_save_success_messages)\n"}
{"task": "Open the more options of the current note and then export all notes", "solution": "tap($more_options_note)\ntap($export_notes)\n"}
{"task": "Set the font size of the app to 250% and enable the setting to show the keyboard on startup", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($set_show_keyboard_on_startup)\n"}
{"task": "Open the more options menu for the current note, go to settings from there, set the alignment to center and save the changes", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_alignment)\ntap($alignment_center)\ntap($save_alignment)"}
{"task": "Open the color settings from the more options menu for the current checklist, set the primary color to green, set the app icon color to yellow, and save the settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($primary_color_green)\ntap($set_app_icon_color)\ntap($app_icon_color_yellow)\ntap($save_set_colors)"}
{"task": "Open the settings menu, set the alignment of the app to left after opening it from the more options menu for the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_alignment)\ntap($alignment_left)\ntap($save_alignment)"}
{"task": "Open the more options menu for the current checklist, then go to color settings, set the theme color to dark mode, set the text color to light gray, and close the color settings popup afterwards", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($set_text_color)\ntap($text_color_light_gray)\ntap($close_set_colors)"}
{"task": "Open the settings menu directly and set both the primary color to purple and the background color to black before saving the settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($primary_color_purple)\ntap($set_background_color)\ntap($background_color_black)\ntap($save_set_colors)"}
{"task": "Open the Notes app, rename the current note to 'Event Planning', add details about venue and date, and then export it as a file", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Event Planning')\ntap($rename_ok)\nset_text($note_content, 'Venue: XYZ, Date: TBD')\ntap($save_note)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Open the more options menu in the note and then open the settings page from the more options note menu, scroll through the settings page and then exit the settings page", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\nback()"}
{"task": "Open the more options menu in the checklist and sort the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu in the note, open the settings page from the more options note menu, scroll through the settings page, and then open the more options menu in the checklist", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\nback()\ntap($more_options_checklist)"}
{"task": "Sort the current checklist by date created, then open the more options menu in the checklist and sort the current checklist by custom", "solution": "tap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Create a new note with the title 'Work Tasks', then add a checklist item 'Submit Report', and print the note titled 'Work Tasks'", "solution": "tap($create_note)\nset_text($add_note_title, 'Work Tasks')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Submit Report')\ntap($add_checklist_item_ok)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Enable monospaced font and then enable line wrap mode", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_enable_line_wrap)"}
{"task": "Customize the colors of the app and save the customized colors", "solution": "tap($settings)\ntap($set_colors)\ntap($save_set_colors)"}
{"task": "Set a new theme color and change the text color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_text_color)\nset_text($text_color_input, 'blue')\ntap($save_set_colors)"}
{"task": "Enable incognito mode for keyboards and then align all notes to center", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_alignment)\ntap($set_alignment_center)"}
{"task": "Using 'Settings' from 'more options' on the current note, enable 'autosave notes' and 'display save success messages', then export notes", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_autosave_notes)\ntap($set_display_save_success_messages)\ntap($export_notes)"}
{"task": "Open the more options for the current note and then change the theme color of the app to blue", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($set_theme_color, 'blue')\ntap($save_set_colors)"}
{"task": "Open the more options for the current checklist, open the settings, and then set the alignment of the app to center", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_alignment)\nset_text($set_alignment, 'center')\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings from the note options, customize the colors in the app, change the text color to red, and then save the customized colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'red')\ntap($save_set_colors)"}
{"task": "Open the more options for the current note, change the background color of the app to light gray, and then close the color customization window", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'light gray')\ntap($close_set_colors)"}
{"task": "Delete the note titled 'Old Recipes' and then show the information about the Notes App", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nnotes_to_delete = open_note_title_list.match('Old Recipes')\nif len(notes_to_delete) > 0:\n    tap(notes_to_delete[0])\n    tap($more_options_note)\n    tap($delete_note)\n    tap($delete_note_ok)\ntap($more_options_note)\ntap($about)"}
{"task": "Create a shortcut for the current note titled 'Meeting Minutes' and then lock it", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nmeeting_minutes_note = open_note_title_list.match('Meeting Minutes')\nif len(meeting_minutes_note) > 0:\n    tap(meeting_minutes_note[0])\n    tap($more_options_note)\n    tap($create_shortcut)\n    tap($lock_note)\n    tap($lock_note_ok)"}
{"task": "Export the checklist titled 'Shopping List' as a file and then print it", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nshopping_list_checklist = open_note_title_list.match('Shopping List')\nif len(shopping_list_checklist) > 0:\n    tap(shopping_list_checklist[0])\n    tap($more_options_checklist)\n    tap($export_as_file)\n    tap($more_options_checklist)\n    tap($print_note)"}
{"task": "Lock the checklist titled 'Holiday Packing' and then open the settings of the Notes App.", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nholiday_packing_checklist = open_note_title_list.match('Holiday Packing')\nif len(holiday_packing_checklist) > 0:\n    tap(holiday_packing_checklist[0])\n    tap($more_options_checklist)\n    tap($lock_note)\n    tap($lock_note_ok)\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Open the settings and set the theme color to Dark Red, then set the font size to 200%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntheme_options = $theme_color_types\nif len(theme_options.match('Dark red')) > 0:\n    tap(theme_options.match('Dark red')[0])\ntap($save_set_colors)\ntap($set_font_size)\nfont_size_options = $font_size_types\nif len(font_size_options.match('200%')) > 0:\n    tap(font_size_options.match('200%')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Enable the setting to show a note picker on startup and set the cursor to automatically go to the end of a note", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Open the settings of the app, change the font size to 300%, and then enable the autosave notes feature", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($set_autosave_notes)"}
{"task": "Open the more options of the current note, export all notes, and then enable the display save success messages feature", "solution": "tap($more_options_note)\ntap($export_notes)\ntap($set_display_save_success_messages)"}
{"task": "Open the settings of the app, enable the setting to show the keyboard on startup, and then set the font size to 250%", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Open 'Meeting Notes' note", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nmatching_titles = open_note_title_list.match('Meeting Notes')\nif len(matching_titles) > 0:\n    tap(matching_titles[0])"}
{"task": "Open the more options menu for the current note, customize the colors by setting the theme color to ocean blue, then close the color settings popup", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($custom_theme_color, 'ocean blue')\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Open the Notes APP, create a new text note titled 'Grocery List', and then create a shortcut for it.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the Notes APP, create a new checklist note for 'Daily Workout Routine', then lock it.", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Workout Routine')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)\ntap($lock_note)"}
{"task": "Open the Notes APP, access the more options of the note titled 'Project Ideas', rename it to 'Updated Project Ideas', and create a shortcut for it.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Ideas')[0])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Updated Project Ideas')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the Notes APP, create a shortcut for the note titled 'Meeting Agenda', then access the more options and lock it.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Agenda')[0])\ntap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)\ntap($lock_note)"}
{"task": "Create a new note titled 'Workout Plan' and confirm, then add a note with the title 'To-Do List' and set it to be a checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Plan')\ntap($add_note_ok)\ntap($create_note)\nset_text($add_note_title, 'To-Do List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the note titled 'Project Ideas', add 'Research AI trends' as a checklist item, save the current note titled 'Project Ideas'", "solution": "tap($open_note)\ntitles = $open_note_title_list\nnote_title_elements = titles.match('Project Ideas')\nnote_title_elements[0].tap()\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Research AI trends')\ntap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Open the note titled 'Vacation Plans', edit the content to include 'Visit Eiffel Tower', scroll through the checklist items and select 'Book Flights'", "solution": "tap($open_note)\ntitles = $open_note_title_list\nnote_title_elements = titles.match('Vacation Plans')\nnote_title_elements[0].tap()\nset_text($note_content, 'Visit Eiffel Tower')\nchecklist_items = $checklist_item_list\nscroll(checklist_items, 'down')\nitems = checklist_items.match('Book Flights')\nitems[0].tap()"}
{"task": "Search for the term 'Meeting' within the current note, if found, add 'Prepare slides' as a checklist item, save the current note titled 'Weekly Report'", "solution": "tap($search_within_note)\nset_text($search_text, 'Meeting')\nif get_text($search_text) == 'Meeting':\n    tap($close_search_box)\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'Prepare slides')\n    tap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Open the note titled 'Gym Schedule', select and delete the checklist item 'Water Plants', add 'New Workout Routine' as a checklist item, save the note", "solution": "tap($open_note)\ntitles = $open_note_title_list\nnote_title_elements = titles.match('Gym Schedule')\nnote_title_elements[0].tap()\nitems = $checklist_item_list.match('Water Plants')\nlong_tap(items[0])\ntap($delete_selected_checklist_item)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'New Workout Routine')\ntap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Tap on 'Open Note' and tap on 'More Options' to rename the note to 'Project Plan Q1'. Then include in the note the list 'Tasks: A. Research, B. Mapping, C. Implementation'. Close the note afterwards.", "solution": "tap($open_note)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan Q1')\ntap($rename_ok)\nset_text($note_content, 'Tasks: A. Research, B. Mapping, C. Implementation')\ntap($save_note)\nback()"}
{"task": "Tap on 'Open Note' and edit the content of the current note to 'Team Meeting Rescheduled to 2 pm'. Then tap on 'Search' within the current note, input 'deadline' in the search box, and find the previous occurrence.", "solution": "tap($open_note)\nset_text($note_content, 'Team Meeting Rescheduled to 2 pm')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)"}
{"task": "Create a new note with the title 'Workout Routine' and add a new note of type 'text note'. In the note, write 'Monday: Cardio, Tuesday: Strength Training, Wednesday: Rest Day'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Routine')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Monday: Cardio, Tuesday: Strength Training, Wednesday: Rest Day')\ntap($save_note)\nback()"}
{"task": "Tap on 'Open Note' and add a new note of type 'checklist'. Title the note 'Vacation Packing List'; add items 'Passport', 'Toothbrush', 'Sunscreen'.", "solution": "tap($open_note)\ntap($create_note)\nset_text($add_note_title, 'Vacation Packing List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Passport')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Toothbrush')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Sunscreen')\ntap($add_checklist_item_ok)\nback()"}
{"task": "Tap on 'Search' within the current note, input 'presentation' in the search box, and find the next occurrence. Close the search box and edit the content to include 'Presentation scheduled for Friday 3 pm'.", "solution": "tap($search_within_note)\nset_text($search_text, 'presentation')\ntap($next_matchhed_text)\ntap($close_search_box)\nset_text($note_content, get_text($note_content) + ' Presentation scheduled for Friday 3 pm')\ntap($save_note)\nback()"}
{"task": "Open the more options for the current checklist and then set the theme color to Black & White in the settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\nback()"}
{"task": "Open the settings, customize the colors, and set the theme color to Custom, then set the font size to 50%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nback()\ntap($set_font_size)\ntap($font_size_50%)\nback()"}
{"task": "Open the settings, change the theme color to White, and set the font size to 100%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\nback()\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Open more options for the current note and then set the theme color to Black & White and font size to 300%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\nback()\ntap($set_font_size)\ntap($font_size_300%)\nback()"}
{"task": "Open the settings, customize the colors and set the theme color to Dark Red, then change the font size to 50%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()\ntap($set_font_size)\ntap($font_size_50%)\nback()"}
{"task": "Open the more options menu in the note and sort the current checklist by title", "solution": "tap($more_options_note)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu in the checklist, open the settings page from the more options checklist menu, scroll through the settings page, and then exit the settings page", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\nback()"}
{"task": "Sort the current checklist by custom, open the more options menu in the checklist, and then sort the current checklist by title", "solution": "tap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist by date created, open the settings page from the more options checklist menu, scroll through the settings page, and then exit the settings page.", "solution": "tap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\nback()"}
{"task": "Open the font size settings and set the font to 300%, then navigate to settings and enable 'show keyboard on startup'", "solution": "tap($set_font_size)\ntap($font_size_300%)\ntap($settings)\ntap($set_show_keyboard_on_startup)"}
{"task": "Add the text 'Discuss Q4 targets' to the current note", "solution": "set_text($note_content, 'Discuss Q4 targets')"}
{"task": "Search for the word 'deadline' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Find the next occurrence of 'budget' in the note", "solution": "tap($next_matchhed_text)"}
{"task": "Create a new note titled 'Project Plan'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Add 'Timeline and milestones' as the content for the new note", "solution": "set_text($note_content, 'Timeline and milestones')"}
{"task": "Enable monospaced font, align all notes to center, and then enable line wrap mode", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_alignment)\ntap($set_enable_line_wrap)\ntap($exit_settings)"}
{"task": "Customize the colors of the app, save the customized colors, and then close the color settings popup", "solution": "tap($settings)\ntap($set_colors)\ntap($save_set_colors)\ntap($close_set_colors)\ntap($exit_settings)"}
{"task": "Set a new theme color to dark mode, change the text color to white, and enable monospaced font", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($set_text_color)\ntap($set_use_monospaced_font)\ntap($exit_settings)"}
{"task": "Enable line wrap mode, customize the colors of the app, set a new theme color, and save the customized colors", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_colors)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Set the theme of the app to Dark and change the font size to 100% in the Notes app", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($set_font_size)\ntap($font_size_100%)\ntap($exit_settings)"}
{"task": "Open the settings from the checklist options, set the alignment of the app to right, and then change the theme color of the app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_alignment)\ntap($alignment_right)\nback()\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Open the more options for the current checklist, open the settings, change the background color of the app to white, and then save the customized colors", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Open the more options for the current note, customize the colors in the app, change the text color to green, change the background color to yellow, and then save the customized colors", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_custom)\ntap($custom_color_green)\ntap($back)\ntap($set_background_color)\ntap($theme_color_custom)\ntap($custom_color_yellow)\ntap($save_set_colors)"}
{"task": "Open the more options for the current checklist, set the alignment of the app to left, change the theme color of the app, and then close the color customization window", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_alignment)\ntap($alignment_left)\nback()\ntap($set_colors)\ntap($set_theme_color)\nback()"}
{"task": "Increase the font size to 200% and display the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\nback()\nprint(get_text($current_font_size))"}
{"task": "Access more options of the current note, then open the settings menu and activate 'autosave notes'", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_autosave_notes)\nback()"}
{"task": "Go to the more options of the current checklist, then in the settings, turn on 'display save success messages'", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_display_save_success_messages)\nback()"}
{"task": "Open the app settings and set the font size to 300%, then enable 'place cursor to the end of note'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($exit_settings)\ntap($set_place_cursor_to_the_end_of_note)\nback()"}
{"task": "Enter settings and enable 'place cursor to the end of note', then enable 'show a note picker on startup'", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_show_a_note_picker_on_startup)\nback()"}
{"task": "Within settings, enable 'show a note picker on startup', then set the font to 300%", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($set_font_size)\ntap($font_size_300%)\nback()"}
{"task": "Open more options for the current checklist, open the settings, and set the font size to 300%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('300%')[0])"}
{"task": "Open the settings and set the theme color to White, then set the font size to 100%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('White')[0])\nback()\ntap($set_font_size)\ntap($font_size_types.match('100%')[0])"}
{"task": "View the current note's title and then open the checklist options", "solution": "title = get_text($item_title)\ntap($more_options_checklist)\nprint(title)"}
{"task": "Create a new note titled 'Shopping List', open the checklist options, and check the list of all checklist items", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)\nfor item in $checklist_item_list:\n    print(get_text(item))"}
{"task": "Open the latest note, switch to the next note, and then scroll through the notes and checklists", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nlatest_note = open_notes[-1]\ntap(latest_note)\ntap($switch_to_next_item)\nscroll($switch_item, 'down')\nfor item in $open_note_title_list:\n    print(get_text(item))"}
{"task": "Open 'Meeting Notes' note", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nmeeting_notes = note_titles.match(\"Meeting Notes\")\ntap(meeting_notes[0])"}
{"task": "Search for the word 'timeline' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'timeline')"}
{"task": "Find the previous occurrence of 'timeline' in the note", "solution": "tap($prev_matched_text)"}
{"task": "Search for the word 'budget' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')"}
{"task": "Find the next occurrence of 'budget' in the note", "solution": "tap($next_matchhed_text)"}
{"task": "Create a new note with the title 'Reading List' and add a new note of type 'text note'. List the books 'The Great Gatsby, Moby Dick, To Kill a Mockingbird'. Close the note.", "solution": "tap($create_note)\nset_text($add_note_title, 'Reading List')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'The Great Gatsby, Moby Dick, To Kill a Mockingbird')\ntap($save_note)\nback()"}
{"task": "Open more options in the current note and set the theme of the app to dark red", "solution": "tap($more_options_note)\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()"}
{"task": "Open more options in the current checklist, then open settings and set the theme of the app to black and white", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_black_white)\nback()"}
{"task": "Open settings from more options in the current note and customize app colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Open more options in the current checklist and set the theme of the app to Auto light / dark", "solution": "tap($more_options_checklist)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\nback()"}
{"task": "Open more options for the current note and change the font size to 175%", "solution": "tap($more_options_note)\ntap($set_font_size)\ntap($font_size_175%)"}
{"task": "Open more options for the current checklist and change the font size to 250%", "solution": "tap($more_options_checklist)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Open the settings of the app and then change the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Open the settings of the app, change the font size to 150%, and then display the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntext = get_text($current_font_size)\nprint(text)"}
{"task": "Set the cursor to place at the end of the note when editing and then change the font size to 200%", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Change the theme color of the app to Dark red and then navigate to the Settings in the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\nback()"}
{"task": "Customize the theme color to Custom in the Notes app and then set the font size to 60% in the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()\ntap($set_font_size)\ntap($font_size_60%)\nback()"}
{"task": "Open more options for the current checklist and then increase the font size to 300% in the Notes app", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($settings)\ntap($set_font_size)\ntap($font_size_300%)\nback()"}
{"task": "Set the Notes app theme to Black & White and customize colors in the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()"}
{"task": "Change the theme of the Notes app to White and then change the font size to 50% in the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()\ntap($set_font_size)\ntap($font_size_50%)\nback()"}
{"task": "Open the Notes APP, access the more options of the checklist titled 'Travel Packing List', create a shortcut for it, then rename it to 'Holiday Packing List'.", "solution": "tap($open_note)\nopen_note_list = $open_note_title_list\ntravel_packing_list = open_note_list.match('Travel Packing List')[0]\ntap(travel_packing_list)\ntap($more_options_checklist)\ntap($create_shortcut)\ntap($rename_note)\nset_text($rename_input, 'Holiday Packing List')\ntap($rename_ok)"}
{"task": "Open the Notes APP, access the more options of the note titled 'Recipe Ideas', lock it, then unlock it and rename it to 'Favorite Recipes'.", "solution": "tap($open_note)\nopen_note_list = $open_note_title_list\nrecipe_ideas = open_note_list.match('Recipe Ideas')[0]\ntap(recipe_ideas)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($rename_note)\nset_text($rename_input, 'Favorite Recipes')\ntap($rename_ok)"}
{"task": "Open the Notes APP, access the more options of the checklist titled 'Books to Read', lock it, then unlock it and create a shortcut for it.", "solution": "tap($open_note)\nopen_note_list = $open_note_title_list\nbooks_to_read = open_note_list.match('Books to Read')[0]\ntap(books_to_read)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_checklist)\ntap($create_shortcut)"}
{"task": "Open the Notes APP, open the note file for 'Weekly Summary', then access the more options and rename it to 'Bi-Weekly Summary'.", "solution": "tap($open_note)\nopen_note_list = $open_note_title_list\nweekly_summary = open_note_list.match('Weekly Summary')[0]\ntap(weekly_summary)\ntap($more_options_note)\ntap($open_file)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Bi-Weekly Summary')\ntap($rename_ok)"}
{"task": "Rename the current note to 'Project Plan', remove done items from the current checklist, then lock the current note", "solution": "tap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the note titled 'Grocery List', rename the selected checklist item to 'Buy Milk', add 'Buy Bread' as a checklist item, then save the note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\nlong_tap($checklist_item_list.match('')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy Milk')\ntap($rename_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy Bread')\ntap($add_checklist_item_ok)\ntap($save_note)"}
{"task": "Scroll through the note titles and open 'Weekly Report', search for the term 'Due Date', if found, edit the content to include 'Complete by Friday'", "solution": "tap($open_note)\nwhile True:\n    if any('Weekly Report' in get_text(el) for el in $open_note_title_list):\n        break\n    scroll($open_note_title_list, 'up')\ntap($open_note_title_list.match('Weekly Report')[0])\ntap($search_within_note)\nset_text($search_text, 'Due Date')\nif len($search_text) > 0:\n    note_content_text = get_text($note_content) + '\\nComplete by Friday'\n    set_text($note_content, note_content_text)\ntap($close_search_box)\ntap($save_note)"}
{"task": "Open the note titled 'Grocery List', scroll through the checklist items and select 'Exercise', rename the selected checklist item to 'Daily Workout', then save the note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])\nwhile True:\n    if any('Exercise' in get_text(el) for el in $checklist_item_list):\n        break\n    scroll($checklist_item_list, 'down')\nlong_tap($checklist_item_list.match('Exercise')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Daily Workout')\ntap($rename_ok)\ntap($save_note)"}
{"task": "Open the note titled 'Vacation Plans', add 'Visit Eiffel Tower' as a checklist item, check the status of the checklist item 'Call Doctor', save the note", "solution": "tap($open_note)\ntap($open_note_title_list.match('Vacation Plans')[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Visit Eiffel Tower')\ntap($add_checklist_item_ok)\nwhile True:\n    if any('Call Doctor' in get_text(el) for el in $checklist_item_list):\n        break\n    scroll($checklist_item_list, 'down')\nitem_elem = $checklist_item_list.match('Call Doctor')[0]\nif not get_attributes(item_elem)['selected']:\n    tap(item_elem)\ntap($save_note)"}
{"task": "Open an existing note titled 'Weekly Agenda' and search for the term 'budget approval'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Weekly Agenda')[0])\ntap($search_within_note)\nset_text($search_text, 'budget approval')"}
{"task": "Navigate to the Settings in the Notes app and open more options for the current note", "solution": "tap($open_note)\ntap($more_options_note)"}
{"task": "Set the theme of the app to Dark and then customize the theme color in the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($close_set_colors)"}
{"task": "Open the settings menu and set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Open the settings menu, set the font size to 175%, and enable 'Show keyboard on startup'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($set_show_keyboard_on_startup)"}
{"task": "Open more options for the current note and enable 'Place cursor to the end of note'", "solution": "tap($open_note)\ntap($more_options_note)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Navigate to settings and enable 'show keyboard on startup', then enable 'display save success messages'", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_display_save_success_messages)"}
{"task": "Open the settings menu and activate 'autosave notes', then navigate to settings and enable 'show keyboard on startup'", "solution": "tap($settings)\ntap($set_autosave_notes)\nback()\ntap($settings)\ntap($set_show_keyboard_on_startup)"}
{"task": "Open more options of the current note and set the font size of the app to 150%", "solution": "tap($more_options_note)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Open the settings of the app and set the theme color of the app to dark and set the font size of the app to 100%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Customize the app colors and set a custom theme color for the app and set the theme color of the app to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($font_size_150%)\nback()\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()"}
{"task": "Open more options in the current note and change the theme to custom", "solution": "\ntap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Custom')[0])\ntap($save_set_colors)"}
{"task": "Open settings from more options in the current checklist and set the theme to white", "solution": "\ntap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('White')[0])\ntap($save_set_colors)"}
{"task": "Open more options in the current note, open settings, and then set the theme of the app to light", "solution": "\ntap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Light')[0])\ntap($save_set_colors)"}
{"task": "Open settings from more options in the current note, then customize app colors and set the theme to dark", "solution": "\ntap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Dark')[0])\ntap($save_set_colors)"}
{"task": "Open the note titled 'Grocery List' and move the checklist item named 'Buy milk' to the top of the list, then save the current note", "solution": "\ntap($open_note) \ntap($open_note_title_list.match('Grocery List')[0]) \nlong_tap($checklist_item_list.match('Buy milk')[0]) \ntap($move_selected_item_to_the_top) \ntap($save_note)"}
{"task": "Change the font size to 175%, display the current font size of the app, and then open more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nfonts = get_text($current_font_size)\ntap($exit_settings)\ntap($more_options_note)"}
{"task": "Open more options for the current checklist, change the font size to 250%, and set the cursor to place at the end of the note when editing", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($exit_settings)\ntap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($exit_settings)"}
{"task": "Enable dark theme color, then set the font size to 125%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($exit_settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($exit_settings)"}
{"task": "Open Settings, customize theme colors to dark red, then show the current font size", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\nfonts = get_text($current_font_size)\ntap($exit_settings)"}
{"task": "Enable dark theme color, open more options in the current checklist, then adjust the font size to 150%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($exit_settings)\ntap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($exit_settings)"}
{"task": "Open the latest note and create a new note titled 'Work Tasks'", "solution": "\ntap($open_note)\ntap($open_note_title_list[len($open_note_title_list) - 1])\ntap($create_note)\nset_text($add_note_title, 'Work Tasks')\ntap($add_note_ok)\n"}
{"task": "Switch to the previous note, view the current note's title, and then open the checklist options", "solution": "\ntap($switch_to_prev_item)\nget_text($item_title)\ntap($more_options_checklist)\n"}
{"task": "Create a new note titled 'ToDo List', open the latest note, and then switch to the next note", "solution": "\ntap($create_note)\nset_text($add_note_title, 'ToDo List')\ntap($add_note_ok)\ntap($open_note)\ntap($open_note_title_list[len($open_note_title_list) - 1])\ntap($switch_to_next_item)\n"}
{"task": "Open the latest note, switch to the previous note, and then switch to the next note", "solution": "\ntap($open_note)\ntap($open_note_title_list[len($open_note_title_list) - 1])\ntap($switch_to_prev_item)\ntap($switch_to_next_item)\n"}
{"task": "Create a new note titled 'Holiday Plans', open the checklist options, and then check the list of all checklist items", "solution": "\ntap($create_note)\nset_text($add_note_title, 'Holiday Plans')\ntap($add_note_ok)\ntap($more_options_checklist)\nlen($checklist_item_list)\n"}
{"task": "Close the search box", "solution": "tap($close_search_box)"}
{"task": "Open the options for 'Groceries List' note", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Groceries List':\n        tap(notes[i])\n        break\ntap($more_options_note)"}
{"task": "Set the font size to 125%, then check the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()\ntap($current_font_size)\nattrs = get_attributes($font_size_125%.match('selected'))\nprint(attrs['selected'])"}
{"task": "Open the more options of the current note, then set the font size to 75%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()"}
{"task": "Go to Settings, set the font size to 150%, then check the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($current_font_size)\nattrs = get_attributes($font_size_150%.match('selected'))\nprint(attrs['selected'])"}
{"task": "Sort checklist items by title, rename the current note to 'Grocery List', then delete the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note.match(\"rename note\"))\nset_text($rename_input, \"Grocery List\")\ntap($rename_ok)\ntap($more_options_note.match(\"delete note\"))\ntap($delete_note_ok)"}
{"task": "Open about section in the notes app, then close it, and rename the current note to 'Team Meeting'", "solution": "tap($more_options_note.match(\"about\"))\nback()\ntap($more_options_note.match(\"rename note\"))\nset_text($rename_input, \"Team Meeting\")\ntap($rename_ok)"}
{"task": "Rename the current note to 'Workout Routine', remove done items from the current checklist, lock the current note, and then delete the current note", "solution": "tap($more_options_note.match(\"rename note\"))\nset_text($rename_input, \"Workout Routine\")\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_note.match(\"lock note\"))\ntap($lock_note_ok)\ntap($more_options_note.match(\"delete note\"))\ntap($delete_note_ok)"}
{"task": "Sort checklist items by title, then rename the current note to 'Household Chores' and lock the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note.match(\"rename note\"))\nset_text($rename_input, \"Household Chores\")\ntap($rename_ok)\ntap($more_options_note.match(\"lock note\"))\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Vacation Itinerary', remove done items from the current checklist, sort checklist items by title, and lock the current note", "solution": "tap($more_options_note.match(\"rename note\"))\nset_text($rename_input, \"Vacation Itinerary\")\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note.match(\"lock note\"))\ntap($lock_note_ok)"}
{"task": "Create a new note with the title 'Shopping List', add a checklist type, and confirm the creation of the new note", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open an existing note titled 'Customer Feedback' and rename the current note to 'Client Reviews'", "solution": "tap($open_note)\n$open_note_title_list.match('Customer Feedback')[0].tap()\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Client Reviews')\ntap($rename_ok)"}
{"task": "Create a new note titled 'Daily Workout Routine', select 'Text Note' type, and create a shortcut for this note", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Workout Routine')\ntap($text_note_type)\ntap($add_note_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Search for the term 'annual meeting' in the current note, then close the search box", "solution": "tap($search_within_note)\nset_text($search_text, 'annual meeting')\ntap($search_close)"}
{"task": "Create a new note titled 'Grocery Items' with the checklist type, confirm the creation, and open more options for the current checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery Items')\ntap($checklist_type)\ntap($add_note_ok)\ntap($more_options_checklist)"}
{"task": "Open the settings menu, enable 'Show a note picker on startup', and set the font size to 250%", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Enable 'Show keyboard on startup', and open more options for the current checklist", "solution": "tap($set_show_keyboard_on_startup)\ntap($more_options_checklist)"}
{"task": "Open the settings menu, set the font size to 150%, enable 'Place cursor to the end of note', and enable 'Show a note picker on startup'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open more options for the current note, set the font size to 300%, and enable 'Show keyboard on startup'", "solution": "tap($more_options_note)\ntap($set_font_size)\ntap($font_size_300%)\ntap($set_show_keyboard_on_startup)"}
{"task": "Open the settings menu and set the font size to 175%, enable 'Show a note picker on startup', and enable 'Place cursor to the end of note'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($set_show_a_note_picker_on_startup)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Open the more options of the current checklist, then set the font size to 200%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($font_size_200%)"}
{"task": "Go to Settings, set the font size to 60%, then check the current font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)\ntap($current_font_size)\nget_attributes($font_size_60%)"}
{"task": "Open the more options of the current checklist, check the current font size, then set it to 100%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($current_font_size)\nget_attributes($font_size)\ntap($font_size_100%)"}
{"task": "Set the font size to 175%, then open the more options of the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nback()\ntap($more_options_note)"}
{"task": "Go to Settings, set the font size to 90%, then open the more options of the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()\ntap($more_options_checklist)"}
{"task": "Open Settings, change the theme to black & white, then set the font size to 125%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_125%)\ntap($save_set_colors)"}
{"task": "Change the theme to white, open more options in the current note, then show the current font size", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\ntap($more_options_note)\ntap($current_font_size)"}
{"task": "Set theme color to dark in app settings, then change the theme to a custom color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Customize theme colors, change theme to dark red, then adjust font size to 150%", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_150%)\ntap($save_set_colors)"}
{"task": "Open Settings, enable dark theme color for the app, then open more options in the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($more_options_note)"}
{"task": "Switch to the next item, show the title of the current item, and then open more options for the current checklist.", "solution": "tap($switch_to_next_item)\nprint(get_text($item_title))\ntap($more_options_checklist)"}
{"task": "Enable the option to show word count and customize the note app colors to dark theme", "solution": "tap($settings)\ntap($set_show_word_count)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Open the note's more options and enable the use of monospaced font", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_use_monospaced_font)\nback()"}
{"task": "Set the font size of the app to 18pt and enable clickable links and emails", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($save_set_colors)\ntap($set_make_links_and_emails_clickable)\ntap($exit_settings)"}
{"task": "Enable the incognito mode for keyboards and then open app settings", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Open more options of the current checklist and set the font size of the app to 175%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Set the font size of the app to 200% and set the theme color of the app to black and white", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($sort_checklist_items_ok)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()"}
{"task": "Set the theme color of the app to light and set the font size of the app to 125%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_125%)\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Open more options of the current note and set the theme color of the app to white", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()"}
{"task": "Set the font size of the app to 90% and set a custom theme color for the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\ntap($sort_checklist_items_ok)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()"}
{"task": "Open the app settings and change the app's font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Customize the app's colors and set the theme color of the app to custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Open more options in the current note and show the current font size of the app", "solution": "tap($more_options_note)\ntap($current_font_size)\ncurrent_size = get_text($current_font_size)\nprint(current_size)"}
{"task": "Open the app settings, change the app's font size to 50%, then change the app's font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Open the app settings, set the font size of the app to 200%, and then set the font size of the app to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Open the note titled 'Meeting Minutes', edit its content to add 'Action Items: Follow up with the design team', and save the note", "solution": "tap($open_note)\n$open_note_title_list.match('Meeting Minutes')[0].tap()\nset_text($note_content, get_text($note_content) + 'Action Items: Follow up with the design team')\ntap($save_note)"}
{"task": "Open the note titled 'Project Plan', search for the term 'deadline', and highlight each instance", "solution": "tap($open_note)\n$open_note_title_list.match('Project Plan')[0].tap()\ntap($search_within_note)\nset_text($search_text, 'deadline')\nwhile get_attributes($next_matchhed_text)['enabled']:\n    tap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Open the note titled 'Shopping List', edit its content to add 'milk, eggs, and bread', then search for 'bread' and go to the next match", "solution": "tap($open_note)\n$open_note_title_list.match('Shopping List')[0].tap()\nset_text($note_content, get_text($note_content) + 'milk, eggs, and bread')\ntap($search_within_note)\nset_text($search_text, 'bread')\ntap($next_matchhed_text)"}
{"task": "Edit the note titled 'Recipe' to change '1 cup of sugar' to '1/2 cup of sugar', save the note, and then search for 'flour' within it", "solution": "tap($open_note)\n$open_note_title_list.match('Recipe')[0].tap()\nset_text($note_content, get_text($note_content).replace('1 cup of sugar', '1/2 cup of sugar'))\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'flour')"}
{"task": "Open the note titled 'Daily Journal', delete the last entry, add a new entry 'Went to the gym today', and save the note", "solution": "tap($open_note)\n$open_note_title_list.match('Daily Journal')[0].tap()\ncontent = get_text($note_content)\nentries = content.split('\\n')\nif len(entries) > 0:\n    entries.pop()\nnew_content = '\\n'.join(entries) + '\\nWent to the gym today'\nset_text($note_content, new_content)\ntap($save_note)"}
{"task": "Rename the current note to 'Project Plan - Q4 2023' and export it as a PDF file", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan - Q4 2023')\ntap($rename_ok)\ntap($more_options_note)\ntap($export_as_file)\n# Assuming export_as_file automatically exports as PDF by default"}
{"task": "Create a shortcut for the current note on the home screen and lock it", "solution": "tap($more_options_note)\ntap($create_shortcut)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the current checklist file and print it", "solution": "tap($more_options_checklist)\ntap($open_file)\ntap($print_note)"}
{"task": "Rename the current note to 'Weekly Summary' and delete it", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Weekly Summary')\ntap($rename_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Export the current note as a PDF file and print it", "solution": "tap($more_options_note)\ntap($export_as_file)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Delete the current note, then open about section in the notes app and close it", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($about)\nback()"}
{"task": "Remove done items from the current checklist, rename the current note to 'Personal Goals', sort checklist items by title, then lock the current note", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Personal Goals')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the checklist titled 'Grocery List' to 'Supermarket List', then lock the note titled 'Shopping List'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nidx = [i for i, x in enumerate(notes) if get_text(x)== 'Grocery List'][0]\ntap(notes[idx])\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Supermarket List')\ntap($rename_ok)\ntap($open_note)\nnotes = $open_note_title_list\nidx = [i for i, x in enumerate(notes) if get_text(x)== 'Shopping List'][0]\ntap(notes[idx])\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the note titled 'Meeting Minutes', export it as a file, and then delete the note titled 'Weekly Report'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nidx = [i for i, x in enumerate(notes) if get_text(x)== 'Meeting Minutes'][0]\ntap(notes[idx])\ntap($more_options_note)\ntap($export_as_file)\ntap($open_note)\nnotes = $open_note_title_list\nidx = [i for i, x in enumerate(notes) if get_text(x)== 'Weekly Report'][0]\ntap(notes[idx])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Print the note titled 'Travel Itinerary' and then lock the note titled 'Shopping List'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nidx = [i for i, x in enumerate(notes) if get_text(x)== 'Travel Itinerary'][0]\ntap(notes[idx])\ntap($more_options_note)\ntap($print_note)\ntap($open_note)\nnotes = $open_note_title_list\nidx = [i for i, x in enumerate(notes) if get_text(x)== 'Shopping List'][0]\ntap(notes[idx])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open more options for the current checklist and sort items by custom order, then confirm the sort type", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open settings from the more options in a checklist, scroll through the settings page, and customize the app colors", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)"}
{"task": "Open more options for the current checklist, sort items by title, then confirm the sort type, and exit the settings page", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($settings)\nback()"}
{"task": "Open more options for the current checklist, open settings from this more options, scroll through the settings, customize the app colors, and then exit the settings", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\nback()"}
{"task": "Open more options for the current checklist, sort items by title, open settings from this more options, customize the app colors, and exit the settings page", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($settings)\ntap($set_colors)\nback()"}
{"task": "Enable the use of monospaced font, then customize the widget colors to match the app theme", "solution": "tap($settings)\ntap($set_use_monospaced_font)\nback()\ntap($set_widget_colors)\ntap($save_set_colors)"}
{"task": "Open app settings, check the current font size of the app, and then set it to 16pt", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_font_size = get_text($current_font_size)\nif current_font_size != '100%':\n\ttap($font_size_types[4])\nelse:\n\ttap($exit_settings)"}
{"task": "Customize the note app colors to a light blue theme and enable clickable links and emails", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light_blue)\ntap($save_set_colors)\ntap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Open the note's more options, enable the option to show word count, and then set the font size of the app to 14pt.", "solution": "tap($more_options_note)\ntap($set_show_word_count)\ntap($current_font_size)\ntap($font_size_16pt)\nback()"}
{"task": "Open the settings in the Notes app and set the font size to 250%", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_250%)\nback()"}
{"task": "Open the checklist options, sort the checklist by title, and confirm the sort type for the checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the checklist options, sort the checklist by date created, and confirm the sort type for the checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the checklist options, sort the checklist by custom order, then scroll through the settings page and customize the app colors", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)"}
{"task": "Open the settings page through checklist more options, scroll through the settings page, and customize the widget colors", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'right')\ntap($set_widget_colors)"}
{"task": "Open the settings page through note more options, scroll through the settings page, and customize the app colors", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)"}
{"task": "Open more options in the current checklist and customize the app's colors", "solution": "tap($more_options_checklist)\ntap($set_colors)"}
{"task": "Set the theme color of the app to custom and then open more options in the current note", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nback()\nback()\ntap($more_options_note)"}
{"task": "Open the app settings, change the app's font size to 300%, and show the current font size of the app.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\nback()\ntap($current_font_size)\nget_text($current_font_size)\nback()"}
{"task": "Open the settings in the app and set the font size of the app to 150%, then show the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($current_font_size)\nget_text($current_font_size)\nback()"}
{"task": "Open more options in the current note, set the font size of the app to 125%, and then open more options in the current checklist", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()\nback()\ntap($more_options_checklist)"}
{"task": "Open the note titled 'Grocery List' and search the current note for the term 'urgent', then rename the checklist item named 'Buy milk' to 'Purchase milk' if it exists", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_index = [i for i, title in enumerate(open_note_titles) if get_text(title) == 'Grocery List'][0]\ntap(open_note_titles[note_index])\ntap($search_within_note)\nset_text($search_text, 'urgent')\nsearch_results = $checklist_item_list.match('Buy milk')\nif len(search_results) > 0:\n    long_tap(search_results[0])\n    tap($rename_selected_checklist_item)\n    set_text($rename_input, 'Purchase milk')\n    tap($rename_ok)\nback()"}
{"task": "Open the note titled 'Grocery List', move the checklist item named 'Buy milk' to the bottom of the list, and then save the current note", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_index = [i for i, title in enumerate(open_note_titles) if get_text(title) == 'Grocery List'][0]\ntap(open_note_titles[note_index])\nchecklist_items = $checklist_item_list.match('Buy milk')\nif len(checklist_items) > 0:\n    long_tap(checklist_items[0])\n    tap($move_selected_item_to_the_buttom)\ntap($save_note)\nback()"}
{"task": "Open the note titled 'Grocery List', delete the checklist item named 'Buy milk', and then search the current note for the term 'urgent'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_index = [i for i, title in enumerate(open_note_titles) if get_text(title) == 'Grocery List'][0]\ntap(open_note_titles[note_index])\nchecklist_items = $checklist_item_list.match('Buy milk')\nif len(checklist_items) > 0:\n    long_tap(checklist_items[0])\n    tap($delete_selected_checklist_item)\ntap($search_within_note)\nset_text($search_text, 'urgent')\nback()"}
{"task": "Open the note titled 'Grocery List', rename the checklist item named 'Buy milk' to 'Purchase milk', move it to the top of the list, and save the current note", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_index = [i for i, title in enumerate(open_note_titles) if get_text(title) == 'Grocery List'][0]\ntap(open_note_titles[note_index])\nchecklist_items = $checklist_item_list.match('Buy milk')\nif len(checklist_items) > 0:\n    long_tap(checklist_items[0])\n    tap($rename_selected_checklist_item)\n    set_text($rename_input, 'Purchase milk')\n    tap($rename_ok)\n    long_tap(checklist_items[0])\n    tap($move_selected_item_to_the_top)\ntap($save_note)\nback()"}
{"task": "Search the current note for the term 'urgent', then open the note titled 'Grocery List' and move the checklist item named 'Buy milk' to the bottom of the list", "solution": "tap($search_within_note)\nset_text($search_text, 'urgent')\ntap($open_note)\nopen_note_titles = $open_note_title_list\nnote_index = [i for i, title in enumerate(open_note_titles) if get_text(title) == 'Grocery List'][0]\ntap(open_note_titles[note_index])\nchecklist_items = $checklist_item_list.match('Buy milk')\nif len(checklist_items) > 0:\n    long_tap(checklist_items[0])\n    tap($move_selected_item_to_the_buttom)\nback()\n"}
{"task": "Open the note titled 'To-Do List', search for 'gym', go to the next match, and add 'check gym schedule' after the current match", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('To-Do List')[0]\ntap(note)\ntap($search_within_note)\nset_text($search_text, 'gym')\ntap($next_matchhed_text)\ntap($note_content)\nset_text($note_content, get_text($note_content) + '\\ncheck gym schedule')\ntap($save_note)"}
{"task": "Open the note titled 'Financial Plan', search for 'budget', highlight the term, and add a comment 'Review budget next Monday'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('Financial Plan')[0]\ntap(note)\ntap($search_within_note)\nset_text($search_text, 'budget')\nset_text($note_content, get_text($note_content) + '\\nReview budget next Monday')\ntap($save_note)"}
{"task": "Open the note titled 'Ideas for Blog', add a new entry 'Explore AI in Healthcare', search for 'Healthcare' within the note, and highlight it", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('Ideas for Blog')[0]\ntap(note)\ntap($note_content)\nset_text($note_content, get_text($note_content) + '\\nExplore AI in Healthcare')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'Healthcare')"}
{"task": "Create a new text note titled 'Project Ideas' and then search for the text 'milestone' within the note", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'milestone')"}
{"task": "Create a new note with the title 'Shopping List' and confirm the new note creation after typing the title 'Grocery Items'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery Items')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Rename the current note to 'Travel Itinerary' and create a shortcut for it on the home screen", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Travel Itinerary')\ntap($rename_ok)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Export the current note as a PDF file and then lock it", "solution": "tap($more_options_note)\ntap($export_as_file)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Shopping List' and open the app settings", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Open the Notes app, create a new note titled 'Grocery List' and add 'Apples, Bananas, Bread, Milk'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Apples, Bananas, Bread, Milk')\ntap($save_note)"}
{"task": "Search for the term 'budget' within the note titled 'Financial Plan', and go to the next three instances of 'budget'.", "solution": "tap($open_note)\n$note_list = $open_note_title_list\n$target_note = $note_list.match('Financial Plan')[0]\ntap($target_note)\ntap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)\ntap($next_matchhed_text)\ntap($next_matchhed_text)"}
{"task": "Enable the autosave notes feature and show the current font size", "solution": "tap($settings)\nset_text($set_autosave_notes, 'true')\ncurrent_font_size = get_text($current_font_size)\nprint(current_font_size)\n"}
{"task": "Open the more options menu for the current checklist and enable the setting to show the keyboard on startup", "solution": "tap($more_options_checklist)\ntap($settings)\nset_text($set_show_keyboard_on_startup, 'true')\n"}
{"task": "Enable the setting to place the cursor at the end of the note and set the font size to 200%", "solution": "tap($settings)\nset_text($set_place_cursor_to_the_end_of_note, 'true')\ntap($set_font_size)\ntap($font_size_200%)\n"}
{"task": "Open the settings in the Notes app, set the font size to 300%, and enable the setting to show a note picker on startup", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($set_show_a_note_picker_on_startup)\n"}
{"task": "Open the more options menu for the current note and enable the autosave notes feature", "solution": "tap($more_options_note)\ntap($settings)\nset_text($set_autosave_notes, 'true')\n"}
{"task": "Open settings from the more options in a checklist, scroll through the settings page, and then exit the settings page", "solution": "tap($more_options_checklist)\ntap($settings)\nwhile True:\n    scroll($scroll_settings_page, 'down')\n    if get_attributes($scroll_settings_page)['scrollable'] == False:\n        break\nback()"}
{"task": "Open more options for the current checklist, sort items by date created, confirm the sort type, open settings from this more options, and scroll through the settings page", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($settings)\nwhile True:\n    scroll($scroll_settings_page, 'down')\n    if get_attributes($scroll_settings_page)['scrollable'] == False:\n        break"}
{"task": "Open settings in the Notes app and enable the 'Place cursor to the end of note' and 'Show keyboard on startup' settings", "solution": "tap($settings)\nif get_attributes($set_place_cursor_to_the_end_of_note)['checked'] == False:\n    tap($set_place_cursor_to_the_end_of_note)\nif get_attributes($set_show_keyboard_on_startup)['checked'] == False:\n    tap($set_show_keyboard_on_startup)"}
{"task": "Enable the 'Autosave notes' and 'Display save success messages' settings, then export all notes", "solution": "tap($settings)\nif get_attributes($set_autosave_notes)['checked'] == False:\n    tap($set_autosave_notes)\nif get_attributes($set_display_save_success_messages)['checked'] == False:\n    tap($set_display_save_success_messages)\ntap($export_notes)"}
{"task": "Open settings in the Notes app, enable automatic backups, and then import notes from the latest backup", "solution": "tap($settings)\nif get_attributes($set_enable_automatic_backups)['checked'] == False:\n    tap($set_enable_automatic_backups)\ntap($import_notes)"}
{"task": "Open the settings of the Notes app, and show the about section of the Notes app", "solution": "tap($open_note)\ntap($more_options_note)\ntap($settings)\ntap($about)"}
{"task": "Rename the checklist titled 'Grocery List' to 'Supermarket List', then print the note titled 'Travel Itinerary'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nchecklists = open_note_titles.match('Grocery List')\nif checklists:\n    tap(checklists[0])\n    long_tap($checklist_item_list)\n    tap($rename_selected_checklist_item)\n    set_text($rename_input, 'Supermarket List')\n    tap($rename_ok)\nnote_names = open_note_titles.match('Travel Itinerary')\nif note_names:\n    tap(note_names[0])\n    tap($more_options_note)\n    tap($print_note)"}
{"task": "Delete the note titled 'Weekly Report', then open the note titled 'Meeting Minutes' and export it as a file", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nweekly_reports = open_note_titles.match('Weekly Report')\nif weekly_reports:\n    tap(weekly_reports[0])\n    tap($more_options_note)\n    tap($delete_note)\n    tap($delete_note_ok)\nmeeting_minutes = open_note_titles.match('Meeting Minutes')\nif meeting_minutes:\n    tap(meeting_minutes[0])\n    tap($more_options_note)\n    tap($export_as_file)"}
{"task": "Lock the note titled 'Shopping List' and then open the settings of the Notes app", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nshopping_lists = open_note_titles.match('Shopping List')\nif shopping_lists:\n    tap(shopping_lists[0])\n    tap($more_options_note)\n    tap($lock_note)\n    tap($lock_note_ok)\ntap($open_note)\ntap($more_options_note)\ntap($settings)"}
{"task": "Show the about section of the Notes app, and then rename the checklist titled 'Grocery List' to 'Supermarket List'.", "solution": "tap($open_note)\ntap($more_options_note)\ntap($settings)\ntap($about)\ntap($open_note)\nopen_note_titles = $open_note_title_list\nchecklists = open_note_titles.match('Grocery List')\nif checklists:\n    tap(checklists[0])\n    long_tap($checklist_item_list)\n    tap($rename_selected_checklist_item)\n    set_text($rename_input, 'Supermarket List')\n    tap($rename_ok)"}
{"task": "Open the checklist options, sort the checklist by title, then sort it by date created and confirm the sort type for the checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings page through checklist more options, customize the app colors, and then customize the widget colors", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($save_set_colors)\ntap($set_widget_colors)\nback()"}
{"task": "Open the checklist options, sort the checklist by date created, open the settings page through note more options, and customize the widget colors", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($settings)\ntap($set_widget_colors)\nback()"}
{"task": "Sort the items in the current checklist by Custom and then open more options in the current checklist to add a new task named 'Buy groceries'", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)"}
{"task": "Go to the settings page from the notes main screen, then customize the colors of the app to blue and green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\nset_text($set_theme_color, 'blue')\ntap($set_background_color)\nset_text($set_background_color, 'green')\ntap($save_set_colors)\nback()"}
{"task": "Set the font size of the app to 100%, then open the settings in the app and set the font size of the app to 200%, and finally show the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($exit_settings)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)\nsize_buttons = $font_size_types\ncurrent_size_text = get_text(size_buttons.match({'checked': True})[0])\nprint(current_size_text)"}
{"task": "Open more options in the current note, set the font size of the app to 90%, then open more options in the current checklist and set the font size of the app to 250%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)\ntap($exit_settings)\ntap($back)\ntap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Open the settings in the app and set the font size of the app to 300%, then open more options in the current note and show the current font size of the app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($exit_settings)\ntap($close_settings)\ntap($back)\ntap($more_options_note)\nsize_buttons = $font_size_types\ncurrent_size_text = get_text(size_buttons.match({'checked': True})[0])\nprint(current_size_text)"}
{"task": "Set the font size of the app to 175%, open more options in the current checklist, and then set the font size of the app to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($exit_settings)\ntap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Open more options in the current note, set the font size of the app to 150%, and then open more options in the current checklist, and show the current font size of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($exit_settings)\ntap($back)\ntap($more_options_checklist)\nsize_buttons = $font_size_types\ncurrent_size_text = get_text(size_buttons.match({'checked': True})[0])\nprint(current_size_text)"}
{"task": "Set the font size to 125% in the Notes app and then open more options in the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()\ntap($more_options_note)"}
{"task": "Open the settings of the Notes app to configure the #todo section and then set the font size to 150%", "solution": "tap($settings)\n# configure #todo section (details of actions not provided in the task)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Set the font size to 90% in the Notes app and then open more options in the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()\ntap($more_options_checklist)"}
{"task": "Open the settings of the Notes app to configure the #todo section and then set the font size to 175%", "solution": "tap($settings)\n# configure #todo section (details of actions not provided in the task)\ntap($set_font_size)\ntap($font_size_175%)\nback()"}
{"task": "Set the font size to 200% in the Notes app and then open more options in the current note to check formatting adjustments", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\nback()\ntap($more_options_note)"}
{"task": "Create a new checklist note titled 'Travel Packing List' and include items like 'Passport', 'Tickets', 'Charger', then check if 'Passport' is listed.", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Packing List')\ntap($checklist_type)\ntap($add_note_ok)\nset_text($checklist_item, 'Passport')\ntap($add_checklist_item_ok)\nset_text($checklist_item, 'Tickets')\ntap($add_checklist_item_ok)\nset_text($checklist_item, 'Charger')\ntap($add_checklist_item_ok)\nassert 'Passport' in [get_text(item) for item in $checklist_item_list]"}
{"task": "Open the note titled 'Meeting Notes', search for the term 'action items', then find the next two occurrences.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])\ntap($search_within_note)\nset_text($search_text, 'action items')\ntap($next_matchhed_text)\ntap($next_matchhed_text)"}
{"task": "Start creating a new note and set its title to 'Workout Schedule', then list out 'Monday: Cardio', 'Tuesday: Strength Training', 'Wednesday: Yoga'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Schedule')\ntap($add_note_ok)\nset_text($note_content, 'Monday: Cardio\\nTuesday: Strength Training\\nWednesday: Yoga')\ntap($save_note)"}
{"task": "Open the note titled 'Financial Plan', search for the term 'savings goal', find the next instance, then close the search box.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Financial Plan')[0])\ntap($search_within_note)\nset_text($search_text, 'savings goal')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Open the most recently edited note, search for the term 'summary', and go to the previous occurrence.", "solution": "tap($open_note)\ntap($open_note_title_list[-1])\ntap($search_within_note)\nset_text($search_text, 'summary')\ntap($prev_matched_text)"}
{"task": "Exit the settings page, open more options in the current note, and then create a new note titled 'Meeting Notes'", "solution": "back()\ntap($more_options_note)\ntap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($add_note_ok)"}
{"task": "Scroll through the settings page and set the font size of the app to 16", "solution": "scroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Customize the colors of the widget to match the app theme and then show the current font size of the app", "solution": "tap($set_widget_colors)\ntap($save_set_colors)\nfont_size_text = get_text($current_font_size)\nprint(font_size_text)"}
{"task": "Open more options in the current checklist, then sort the items in the current checklist by Custom and finally exit to the notes main screen", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\nback()"}
{"task": "Exit the settings page and immediately scroll through the settings page to find the notifications section", "solution": "back()\nscroll($scroll_settings_page, 'down')\nscroll($scroll_settings_page, 'down')"}
{"task": "Open the note titled 'Grocery List', search for the term 'urgent', rename the checklist item named 'Buy milk' to 'Purchase milk', and then save the current note", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Grocery List')\ntap(notes[0])\ntap($search_within_note)\nset_text($search_text, 'urgent')\ntap($close_search_box)\nchecklist_items = $checklist_item_list.match('Buy milk')\nlong_tap(checklist_items[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase milk')\ntap($rename_ok)\ntap($save_note)"}
{"task": "Open the note titled 'Grocery List', move the checklist item named 'Buy milk' to the top of the list, delete it, and then save the current note", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Grocery List')\ntap(notes[0])\nchecklist_items = $checklist_item_list.match('Buy milk')\nlong_tap(checklist_items[0])\ntap($move_selected_item_to_the_top)\nlong_tap(checklist_items[0])\ntap($delete_selected_checklist_item)\ntap($save_note)"}
{"task": "Open the settings menu from the more options of the current note, then set the font size to 250% and enable the setting to place cursor to the end of note.", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Grocery List')\ntap(notes[0])\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($exit_settings)\nscroll($scroll_settings_page, 'down')\ntap($set_place_cursor_to_the_end_of_note)\ntap($exit_settings)"}
{"task": "Open the more options menu of the current note, then open the font size settings from the app settings and set the font size to 200%.", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Grocery List')\ntap(notes[0])\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($exit_settings)"}
{"task": "Open the settings menu from the more options of the current note, then enable the setting to autosave notes and enable the setting to display save success messages.", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Grocery List')\ntap(notes[0])\ntap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_autosave_notes)\ntap($set_display_save_success_messages)\ntap($exit_settings)"}
{"task": "Search for the text 'meeting' within the note titled 'Team Updates', find the next occurrence of 'meeting', and then exit the search mode", "solution": "tap($open_note)\n$open_note_title_list.match('Team Updates')[0]\ntap($open_note_title_list.match('Team Updates')[0])\ntap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Create a new checklist note titled 'Weekend Tasks' and add items 'Laundry', 'Grocery shopping', 'Clean the house'", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Tasks')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Laundry')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Grocery shopping')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Clean the house')\ntap($add_checklist_item_ok)"}
{"task": "Open the note titled 'Travel Plans', find the next occurrence of 'itinerary', and then find the previous occurrence of 'flight'", "solution": "tap($open_note)\n$open_note_title_list.match('Travel Plans')[0]\ntap($open_note_title_list.match('Travel Plans')[0])\ntap($search_within_note)\nset_text($search_text, 'itinerary')\ntap($next_matchhed_text)\nset_text($search_text, 'flight')\ntap($prev_matched_text)\ntap($close_search_box)"}
{"task": "Create a new text note titled 'Project Ideas', search for the text 'brainstorm' and then find the previous occurrence of 'discussion'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'brainstorm')\ntap($next_matchhed_text)\nset_text($search_text, 'discussion')\ntap($prev_matched_text)\ntap($close_search_box)"}
{"task": "Open the note titled 'Daily Journal', confirm the new note creation after typing the title, and then search for the text 'highlights' within the note", "solution": "tap($open_note)\n$open_note_title_list.match('Daily Journal')[0]\ntap($open_note_title_list.match('Daily Journal')[0])\ntap($search_within_note)\nset_text($search_text, 'highlights')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Open more options for the current note, enable the 'Autosave notes' setting, and export the note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_autosave_notes)\nback()\ntap($export_as_file)\n"}
{"task": "Open settings in the Notes app, enable the 'Show keyboard on startup' and 'Show a note picker on startup' settings, then create a new note and save it", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_show_a_note_picker_on_startup)\nback()\ntap($create_note)\nset_text($add_note_title, \"New Note\")\ntap($text_note_type)\ntap($add_note_ok)\ntap($save_note)\n"}
{"task": "Enable the 'Place cursor to the end of note' and 'Autosave notes' settings, then create a checklist, complete one item on the checklist, and save it", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_autosave_notes)\nback()\ntap($create_note)\nset_text($add_note_title, \"New Checklist\")\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, \"Item 1\")\ntap($add_checklist_item_ok)\ntap($checklist_item_list.match(\"Item 1\"))\ntap($save_note)\n"}
{"task": "Open more options for the current checklist, export all checklist items, and then delete the checklist", "solution": "tap($more_options_checklist)\ntap($export_as_file)\ntap($delete_note)\ntap($delete_note_ok)\n"}
{"task": "Open settings in the Notes app, enable all available settings, and then create a new note titled 'Meeting Minutes' and save it", "solution": "\ntap($settings)\nsettings_elements = [\n  'set_show_word_count',\n  'set_make_links_and_emails_clickable',\n  'set_use_monospaced_font',\n  'set_use_incognito_mode_of_keyboards',\n  'set_enable_line_wrap',\n  'set_place_cursor_to_the_end_of_note',\n  'set_show_keyboard_on_startup',\n  'set_show_a_note_picker_on_startup',\n  'set_autosave_notes',\n  'set_display_save_success_messages',\n  'set_enable_automatic_backups'\n]\nfor element in settings_elements:\n  tap(globals()[element])\nback()\ntap($create_note)\nset_text($add_note_title, \"Meeting Minutes\")\ntap($text_note_type)\ntap($add_note_ok)\ntap($save_note)\n"}
{"task": "Set the font size of the app to 200%, open the settings in the app, and then open more options in the current note and set the font size of the app to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($more_options_note)\ntap($set_font_size)\ntap($font_size_175%)"}
{"task": "Create a new note titled 'Meeting Notes', then edit the content of the note to 'Discuss project timeline and milestones', and search for the word 'timeline' within this note", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($add_note_ok)\nset_text($note_content, 'Discuss project timeline and milestones')\ntap($search_within_note)\nset_text($search_text, 'timeline')"}
{"task": "Open the note titled 'Shopping List', then search for the word 'apples', move to the next match of 'apples' within the note, and close the search box", "solution": "tap($open_note)\ntap($open_note_title_list.match({'text': 'Shopping List'})[0])\ntap($search_within_note)\nset_text($search_text, 'apples')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Create a new note titled 'Workout Plan', add a title 'Daily Routine' to the new note, and select text type for the note as 'Bold Header'", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Plan')\ntap($add_note_ok)\nset_text($note_content, 'Daily Routine')\n# Assuming there is a 'Bold Header' option to select text type"}
{"task": "Open the note titled 'Grocery List', then search for the word 'milk', move to the previous match of 'milk' within the note, and close the search box", "solution": "tap($open_note)\ntap($open_note_title_list.match({'text': 'Grocery List'})[0])\ntap($search_within_note)\nset_text($search_text, 'milk')\ntap($prev_matched_text)\ntap($close_search_box)"}
{"task": "Show the current font size and then set the font size to 175%", "solution": "\nfont_size = get_text($current_font_size)\nprint(f\"Current font size: {font_size}\")\ntap($set_font_size)\ntap($font_size_175%)"}
{"task": "Open the more options menu for the current checklist and enable the setting to place the cursor at the end of the note", "solution": "\ntap($more_options_checklist)\nscroll($settings, 'down')\ntap($set_place_cursor_to_the_end_of_note)\n"}
{"task": "Create a new note with the title 'Meeting Notes' and then add a bullet list under it with three items: 'Agenda', 'Discussion Points', 'Action Items'.", "solution": "\ntap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, '1. Agenda\\n2. Discussion Points\\n3. Action Items')\ntap($save_note)\n"}
{"task": "Open a note titled 'Shopping List' and convert it into a checklist adding three new items: 'Eggs', 'Milk', 'Bread'.", "solution": "\ntap($open_note)\nopen_note_titles = $open_note_title_list.match('Shopping List')\nif open_note_titles:\n    tap(open_note_titles[0])\n    tap($more_options_note)\n    tap($checklist_type)\n    tap($save_note)\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'Eggs')\n    tap($add_checklist_item_ok)\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'Milk')\n    tap($add_checklist_item_ok)\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'Bread')\n    tap($add_checklist_item_ok)\n"}
{"task": "Search for the term 'Q3 Budget' within the note titled 'Finance Plan' and then extract the entire paragraph containing it to create a new note titled 'Q3 Budget Summary'.", "solution": "\ntap($open_note)\nopen_note_titles = $open_note_title_list.match('Finance Plan')\nif open_note_titles:\n    tap(open_note_titles[0])\n    tap($search_within_note)\n    set_text($search_text, 'Q3 Budget')\n    text = get_text($note_content)\n    search_text_prev, search_text_next = text.split('Q3 Budget')[0], text.split('Q3 Budget')[1]\n    paragraph = f'{search_text_prev.splitlines()[-1]} Q3 Budget {search_text_next.splitlines()[0].strip()}'\n    tap($close_search_box)\n    back()\n    tap($create_note)\n    set_text($add_note_title, 'Q3 Budget Summary')\n    tap($text_note_type)\n    tap($add_note_ok)\n    set_text($note_content, paragraph)\n    tap($save_note)\n"}
{"task": "Open the more options menu of the current checklist, then open the app settings and set the font size to 300%.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Enable the setting to show keyboard on startup, then enable the setting to show a note picker on startup.", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open the more options menu of the current checklist, then enable the setting to display save success messages and enable the setting to autosave notes.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_display_save_success_messages)\ntap($set_autosave_notes)"}
{"task": "Open the settings menu from the more options of the current note, set the font size to 300%, then enable the setting to show a note picker on startup.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open the more options menu of the current checklist, open the font size settings from the app settings, set the font size to 200%, then enable the setting to show keyboard on startup.", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($set_show_keyboard_on_startup)"}
{"task": "Create a new text note titled 'Vacation Ideas', search for the text 'destinations', find the next occurrence, and then exit the search mode", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Ideas')\ntap($text_note_type)\ntap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'destinations')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Open the settings of the Notes app and enable word count display", "solution": "tap($settings)\ntap($set_show_word_count)\nback()"}
{"task": "Open the settings of the Notes app and increase the font size by two levels", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_types.match({'selected': True})[0])\ntap($font_size_types.match({'selected': True})[0])\nback()"}
{"task": "Open the settings of the Notes app and switch to a monospaced font", "solution": "tap($settings)\ntap($set_use_monospaced_font)\nback()"}
{"task": "Open the settings of the Notes app and set links and emails to be clickable", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Create a new checklist note titled 'Conference To-do' and add 'Book hotel', 'Register', 'Prepare presentation', then open the most recently edited note and ensure it contains the word 'Update'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Conference To-do')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Book hotel')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Register')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Prepare presentation')\ntap($add_checklist_item_ok)\ntap($switch_item)\ntap($switch_to_next_item)\ntap($note_content)\nif 'Update' in get_text($note_content):\n    pass"}
{"task": "Go to settings from the current note and enable incognito mode of keyboards and line wrap", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($set_enable_line_wrap)\ntap($exit_settings)"}
{"task": "Customize colors in the app to a dark theme and set alignment options to justify in the app settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($set_alignment)\nset_text($set_alignment, 'justify')\ntap($exit_settings)"}
{"task": "Open more options of the current note and make links and emails clickable in the app settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_make_links_and_emails_clickable)\ntap($exit_settings)"}
{"task": "Open more options of the current checklist and then go to settings and show word count in the app settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_show_word_count)\ntap($exit_settings)"}
{"task": "Go to the settings page from the notes main screen and then customize the colors of the app followed by customizing the colors of the widget to ensure both match the new theme", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($set_widget_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Rename the checklist item 'Buy groceries' to 'Purchase groceries' and then move 'Purchase groceries' to the bottom of the list", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase groceries')\ntap($rename_ok)\nlong_tap($checklist_item_list.match('Purchase groceries')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Open the note titled 'Meeting Notes', search for the word 'project' within the note, and then save the current note after editing", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])\ntap($search_within_note)\nset_text($search_text, 'project')\ntap($close_search_box)\ntap($note_content)\nset_text($note_content, get_text($note_content) + ' Edited')\ntap($save_note)"}
{"task": "Delete the checklist item 'Buy groceries', open more options for the current note, and save the current note after editing", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($delete_selected_checklist_item)\ntap($more_options_note)\ntap($note_content)\nset_text($note_content, get_text($note_content) + ' Edited')\ntap($save_note)"}
{"task": "Rename the checklist item 'Buy groceries' to 'Purchase groceries' and then search for the word 'project' within the current note", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase groceries')\ntap($rename_ok)\ntap($search_within_note)\nset_text($search_text, 'project')"}
{"task": "Set the font size to 100% in the Notes app, open more options in the current checklist, and then navigate back to the settings of the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('100%')[0])\ntap($more_options_checklist)\nback()"}
{"task": "Open the settings of the Notes app to configure the #todo section, set the font size to 125%, and then open more options in the current note to add formatting preferences", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('125%')[0])\ntap($more_options_note)\nback()"}
{"task": "Set the font size to 150% in the Notes app, open more options in the current note, and then switch the font size back to 100% to compare readability.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('150%')[0])\ntap($more_options_note)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('100%')[0])"}
{"task": "Tap on 'More options' in the current note and rename the current note to 'Shopping List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)"}
{"task": "Rename the current note to 'Shopping List' and lock the current note", "solution": "tap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Remove completed items from the current checklist and then sort the current checklist items by date created", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current checklist, sort the current checklist items by title, and confirm the sorting type for the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by custom order, remove completed items from the current checklist, and then confirm the sorting type for the current checklist", "solution": "tap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open more options for the current note, open the app settings, and exit the settings page", "solution": "tap($more_options_note)\ntap($settings)\ntap($exit_settings)"}
{"task": "Sort the current checklist items by custom order, remove completed items from the current checklist, and then open more options for the current checklist", "solution": "tap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)"}
{"task": "Tap more options on the current note, then open settings and go to customize colors to set the primary color of the app to blue", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_types.match('blue')[0])\ntap($save_set_colors)"}
{"task": "Open settings, go to customize colors, set the app icon color to green, then set the theme color to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\ntap($theme_color_types.match('green')[0])\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Tap more options on the current checklist, then open settings, go to customize colors, set the theme color to auto light/dark mode, and finally set the primary color of the app to blue", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\ntap($set_primary_color)\ntap($theme_color_types.match('blue')[0])\ntap($save_set_colors)"}
{"task": "Open settings, go to customize colors, set the primary color of the app to blue, then set the app icon color to green, and finally set the theme color to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_types.match('blue')[0])\ntap($save_set_colors)\ntap($set_app_icon_color)\ntap($theme_color_types.match('green')[0])\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Tap more options on the current note, then open settings and set the theme color to light", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Enable monospaced font in the app settings and then return to the current note and enable incognito mode of keyboards", "solution": "tap($settings)\ntap($set_use_monospaced_font)\nback()\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Show word count and set alignment options to center in the app settings", "solution": "tap($settings)\ntap($set_show_word_count)\ntap($set_alignment)\ntap($alignment_types.match('Center')[0])\nback()"}
{"task": "Use monospaced font and customize colors to a blue theme in the app", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Blue')[0])\ntap($save_set_colors)\nback()"}
{"task": "Enable line wrap and incognito mode of keyboards in the app settings", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Open the more options menu for the current note and set the text color to blue", "solution": "tap($more_options_note)\ntap($set_text_color)\ntap($text_color_types.match('Blue')[0])\nback()"}
{"task": "Open the settings of the Notes app, turn on line wrap, and set the text alignment to center", "solution": "tap($settings);\ntap($set_enable_line_wrap); \ntap($set_alignment); tap($set_alignment_center);"}
{"task": "Enable Incognito mode for keyboards in the Notes app and set the font size to 16", "solution": "tap($settings);\ntap($set_use_incognito_mode_of_keyboards);\ntap($current_font_size);\ntap($font_size_16px);"}
{"task": "Open the more options menu of the current note, go to settings, and enable word count display", "solution": "tap($more_options_note);\ntap($settings);\ntap($set_show_word_count);"}
{"task": "Open the more options menu of the current checklist, go to settings, and enable word count display.", "solution": "tap($more_options_checklist);\ntap($settings);\ntap($set_show_word_count);"}
{"task": "Open the settings page, change the font size to 16px, and then scroll through the settings page.", "solution": "tap($settings);\ntap($current_font_size);\ntap($font_size_16px);\nscroll($scroll_settings_page, 'down');"}
{"task": "Create a new checklist note titled 'Vacation Packing List', edit the content of the note to include items: 'Passport, Tickets, Camera', and search for the word 'Camera' within this note", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Packing List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Passport')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Tickets')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Camera')\ntap($add_checklist_item_ok)\ntap($search_within_note)\nset_text($search_text, 'Camera')"}
{"task": "Create a new note titled 'Birthday Party Plan', then edit the content of the note to 'Decorations, Cake, Music', search for the word 'Cake', move to the next match of 'Decorations', and close the search box", "solution": "tap($create_note)\nset_text($add_note_title, 'Birthday Party Plan')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Decorations, Cake, Music')\ntap($search_within_note)\nset_text($search_text, 'Cake')\ntap($next_matchhed_text)\ntap($close_search_box)"}
{"task": "Open the note titled 'Workout Plan', then search for the word 'cardio', move to the next match of 'cardio', edit the content to include 'Morning cardio sessions', and close the search box", "solution": "tap($open_note)\n$notes = $open_note_title_list.match('Workout Plan')\ntap($notes[0])\ntap($search_within_note)\nset_text($search_text, 'cardio')\ntap($next_matchhed_text)\nset_text($note_content, 'Morning cardio sessions')\ntap($close_search_box)"}
{"task": "Create a new note titled 'Project Ideas', add a title 'App Development' to the new note, select text type for the note, and edit the content to 'Develop a task management app'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Develop a task management app')"}
{"task": "Sort the current checklist by Date Created and confirm, then open the more options menu for the current checklist and customize the colors of the widget", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($set_widget_colors)"}
{"task": "Tap more options on the current checklist, then open settings, go to customize colors, set the primary color of the app to blue, and finally set the theme color to white", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'blue')\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Open settings, set the app icon color to green, then set the theme color to light, and finally set the theme color to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'green')\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Go to customize colors, set the theme color to dark, set the primary color of the app to blue, and finally set the app icon color to green", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'blue')\ntap($save_set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'green')\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist, sort the current checklist items by date created, and then open more options for the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match('Date created'))\ntap($sort_checklist_items_ok)\ntap($more_options_note)"}
{"task": "Open more options for the current note, sort the current checklist items by title, and then confirm the sorting type for the current checklist", "solution": "tap($more_options_note)\ntap($switch_to_next_item)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match('Title'))\ntap($sort_checklist_items_ok)"}
{"task": "Remove completed items from the current checklist, sort the current checklist items by date created, and open more options for the current note", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match('Date created'))\ntap($sort_checklist_items_ok)\ntap($more_options_note)"}
{"task": "Open the app settings and set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('150%'))\ntap($exit_settings)"}
{"task": "Open the more options of the current note and then open the app settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings of the app from the current checklist, scroll down the settings page, customize the colors of the app, and set the font size of the app", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\nback()\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Open the more options menu for the current note, open the settings of the app from the current note, and scroll up the settings page", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'up')"}
{"task": "Sort the current checklist by Custom and confirm, then open the more options menu for the current checklist and sort by Date Created again", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings of the app from the current checklist, customize the colors of the widget, and exit the settings page", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_widget_colors)\nback()\ntap($exit_settings)"}
{"task": "Open the settings of the app from the current note, set the font size of the app, scroll down the settings page, and scroll up the settings page", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\ntap($font_size_125%)\nscroll($scroll_settings_page, 'down')\nscroll($scroll_settings_page, 'up')"}
{"task": "Customize the app colors by setting the background color to grey and the primary color to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'grey')\nback()\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\nback()"}
{"task": "Open the settings of the app and enable auto light/dark theme for the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\nback()"}
{"task": "Set the theme color to dark mode, then set the app icon color to red and save the customized colors of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'red')\nback()\ntap($save_set_colors)"}
{"task": "Open the more options menu for the current checklist, set the background color to grey, and set the text color to blue", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'grey')\nback()\ntap($set_text_color)\nset_text($set_text_color, 'blue')\nback()"}
{"task": "Save the customized colors of the app after setting the primary color to green and the app icon color to red", "solution": "tap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\nback()\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'red')\nback()\ntap($save_set_colors)"}
{"task": "Customize the colors of the app to dark mode, enable word count display, and set the widget colors to blue.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\ntap($set_widget_colors)\ntap($set_app_icon_color)\n# The exact steps to select blue color are not available from the given elements, so assume this is completed as a placeholder.\ntap($save_set_colors)\nback()\ntap($set_show_word_count)\nback()"}
{"task": "Show the current font size, make links and emails clickable, and use a monospaced font for all notes.", "solution": "tap($settings)\nt print(get_text($current_font_size))\ntap($set_make_links_and_emails_clickable)\ntap($set_use_monospaced_font)\nback()"}
{"task": "Open the settings page, set the widget colors to green, and enable word count display for the current note.", "solution": "tap($settings)\ntap($set_widget_colors)\ntap($set_app_icon_color)\n# The exact steps to select green color are not available from the given elements, so assume this is completed as a placeholder.\ntap($save_set_colors)\nback()\ntap($set_show_word_count)\nback()"}
{"task": "Change the font size to 14px, make links and emails clickable, and then scroll through the settings page.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_14%)\ntap($set_make_links_and_emails_clickable)\nscroll($scroll_settings_page, \"down\")"}
{"task": "Open the settings page, show more options for the current note, and customize the app colors to a light theme.", "solution": "tap($settings)\ntap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\nback()"}
{"task": "Create a new checklist with the title 'Groceries', add five items to it: 'Apples', 'Bananas', 'Carrots', 'Detergent', 'Tomatoes', and then mark 'Detergent' as completed.", "solution": "tap($create_note)\nset_text($add_note_title, 'Groceries')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Apples')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bananas')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Carrots')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Detergent')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Tomatoes')\ntap($add_checklist_item_ok)\nlong_tap($checklist_item_list.match('Detergent')[0])\ntap($checklist_item)"}
{"task": "Rename the current note titled 'Work Tasks' to 'Office Tasks', add a new section under it titled 'Emails to Send', and list three email topics under it.", "solution": "long_tap($open_note_title_list.match('Work Tasks')[0])\ntap($rename_note)\nset_text($rename_input, 'Office Tasks')\ntap($rename_ok)\ntap($note_content)\nset_text($note_content, get_text($note_content) + '\\n\\nEmails to Send:')\ntap($save_note)"}
{"task": "Open a note titled 'Holiday Plans', search for the term 'Flight Details', and once found, copy that section to a new note titled 'Travel Itinerary'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Holiday Plans')[0])\ntap($search_within_note)\nset_text($search_text, 'Flight Details')\nif 'Flight Details' in get_text($note_content):\n    flight_details_section = get_text($note_content).split('Flight Details')[1].split('\\n')[0]\n    tap($create_note)\n    set_text($add_note_title, 'Travel Itinerary')\n    tap($text_note_type)\n    tap($add_note_ok)\n    tap($note_content)\n    set_text($note_content, 'Flight Details' + flight_details_section)\n    tap($save_note)"}
{"task": "Interact with more options for the note titled 'Project Ideas' and move it to a new folder named 'Archived Projects'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Ideas')[0])\ntap($more_options_note)\ntap($open_file)\n# Note that specifics about moving to the folder 'Archived Projects' aren't clear, so assuming a generalized action for open file or move option."}
{"task": "Create a new note with the title 'Reading List', switch to the checklist type, add three books: 'Book A', 'Book B', 'Book C', and then mark 'Book A' as read.", "solution": "tap($create_note)\nset_text($add_note_title, 'Reading List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Book A')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Book B')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Book C')\ntap($add_checklist_item_ok)\nlong_tap($checklist_item_list.match('Book A')[0])\ntap($checklist_item)"}
{"task": "Open the more options menu for the current checklist, open the settings of the app from the current checklist, and customize the colors of the app and the widget before exiting the settings page", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($close_set_colors)\ntap($set_widget_colors)\nback()"}
{"task": "Sort the current checklist by Date Created and confirm, then open the settings of the app from the current checklist, and scroll down the settings page to customize the colors of the app", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\nback()\ntap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)"}
{"task": "Open app settings and set the font size to 200% and then open more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($more_options_note)"}
{"task": "Open more options for the current checklist, set the font size to 150%, and then open app settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Open app settings, set the font size to 125%, and then return to the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Open the more options of the current checklist and set the font size to 100%", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'50%': False, '60%': False, '75%': False, '90%': False, '100%': True})[0])\nback()"}
{"task": "Open the app settings, set the font size to 125%, and then open the more options of the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'50%': False, '60%': False, '75%': False, '90%': False, '100%': False, '125%': True})[0])\nback()\ntap($more_options_checklist)"}
{"task": "Open the more options of the current note, then open the app settings, and set the font size to 200%", "solution": "tap($more_options_note)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'200%': True})[0])\nback()"}
{"task": "Set the font size to 75%, then open the more options of the current checklist and then set the font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'75%': True})[0])\nback()\ntap($more_options_checklist)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'250%': True})[0])\nback()"}
{"task": "Open the app settings, set the font size to 90%, then set the font size to 175% and open the more options of the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'90%': True})[0])\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'175%': True})[0])\nback()\ntap($more_options_note)"}
{"task": "Enable auto light/dark theme for the app and then set the theme color to white mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap(theme_color_types.match('Auto light / dark')[0])\ntap($set_theme_color)\ntap(theme_color_types.match('White')[0])\ntap($exit_settings)"}
{"task": "Customize the app colors to dark mode, set the text color to blue, set the background color to grey", "solution": "tap($settings)\ntap($set_colors)\ntap($theme_color_dark)\ntap($set_text_color)\ntap(theme_color_types.match('blue')[0])\ntap($save_set_colors)\ntap($set_background_color)\ntap(theme_color_types.match('grey')[0])\ntap($save_set_colors)"}
{"task": "Open the settings of the app and set the primary color of the app to red and the background color of the app to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap(theme_color_types.match('red')[0])\ntap($save_set_colors)\ntap($set_background_color)\ntap(theme_color_types.match('blue')[0])\ntap($save_set_colors)"}
{"task": "Open the more options of the current checklist and change the app icon color to green then set the theme color to dark red mode", "solution": "tap($more_options_checklist)\ntap($set_app_icon_color)\ntap(theme_color_types.match('green')[0])\ntap($save_set_colors)\ntap($set_theme_color)\ntap(theme_color_types.match('Dark red')[0])\ntap($exit_settings)"}
{"task": "Open the settings of the app, customize the colors, and set the theme color to auto light/dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap(theme_color_types.match('Auto light / dark')[0])\ntap($exit_settings)"}
{"task": "Open settings, change the font size to 75%, then immediately set it back to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Access the settings, set the font size to 90%, then ensure the current note saves and change a task label to 'High Priority'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()\nback()\ntap($save_note)\nlong_tap($checklist_item)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'High Priority')\ntap($rename_ok)"}
{"task": "Open more options in the checklist, set the font size to 100%, add a new task labeled 'URGENT', then adjust the font size to 60%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()\nback()\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'URGENT')\ntap($add_checklist_item_ok)\ntap($settings)\ntap($set_font_size)\ntap($font_size_60%)\nback()"}
{"task": "Update the app's font size to 125% via settings, then navigate to a specific note titled 'Meeting Notes' and append the text 'Discussion Points'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()\ntap($open_note)\nnotes_list = $open_note_title_list\nfor i in range(len(notes_list)):\n    if get_text(notes_list[i]) == 'Meeting Notes':\n        tap(notes_list[i])\n        break\ntap($note_content)\ncurrent_text = get_text($note_content)\nset_text($note_content, current_text + ' Discussion Points')\ntap($save_note)"}
{"task": "Set the font size to 150% by accessing the settings, then organize all tasks by priority and finally change the font size back to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Set the font size to 175%, open more options for the current note, and then open app settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nback()\ntap($more_options_note)\ntap($settings)"}
{"task": "Open app settings and set the font size to 300%, then return to the current checklist and open more options", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\nback()\nback()\ntap($more_options_checklist)"}
{"task": "Open more options for the current note, then set the font size to 250% and open app settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_250%)\nback()\ntap($settings)"}
{"task": "Set the font size to 100%, open more options for the current checklist, and then open app settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Open app settings, set the font size to 125%, and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()\ntap($more_options_checklist)"}
{"task": "Open the more options of the current note and set the theme color to light mode and then change the app icon color to green", "solution": "tap($more_options_note)\ntap($set_theme_color)\ntap($theme_color_light)\nback()\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'green')\ntap($save_set_colors)"}
{"task": "Open the settings of the app, set the theme color to dark mode, and then customize the colors", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()\ntap($set_colors)"}
{"task": "Open the more options of the current checklist and then set the theme color to auto light/dark mode and change the app icon color to green", "solution": "tap($more_options_checklist)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\nback()\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'green')\ntap($save_set_colors)"}
{"task": "Open the settings of the app and set the background color of the app to blue and the theme color to dark red mode", "solution": "tap($settings)\ntap($set_background_color)\nset_text($set_background_color, 'blue')\ntap($save_set_colors)\nback()\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()"}
{"task": "Customize the colors in the settings then set the background color of the app to blue and finally change the app icon color to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'blue')\ntap($save_set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'green')\ntap($save_set_colors)"}
{"task": "Set the font size to 100%, open the more options of the current note and then open the more options of the current checklist", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_100%)\nback()\ntap($more_options_note)\ntap($more_options_checklist)"}
{"task": "Launch the app, open theme settings, set the theme color to dark, then customize the text color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($close_set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'blue')\ntap($save_set_colors)"}
{"task": "Access app settings, change the background color to yellow, then set the primary color of the app to green, and finally change the app icon color to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'yellow')\ntap($save_set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'red')\ntap($save_set_colors)"}
{"task": "Open more options for the current note, access settings, set the theme color to dark_red, then enable Auto light/dark theme mode", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($close_set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($close_set_colors)"}
{"task": "Open the app, access customize colors in settings, set a custom theme, then select the light theme in theme settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($close_set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($close_set_colors)"}
{"task": "Tap on more options in the checklist, change the font size to 75%, and add a new checklist item 'Buy Groceries' with a deadline set for tomorrow", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($exit_settings)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy Groceries')\n# Here we need to set the deadline for tomorrow, assuming there is a datetime picker or some form of setting the date which is not detailed in the provided UI elements"}
{"task": "Go to the more options checklist and adjust the font size to 125%, then mark all tasks labeled 'completed' as done, and set the font size to 150%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($exit_settings)\ntap($checklist_item_list.match('completed'))\nfor item in $checklist_item_list.match('completed'):\n    tap(item)\n    long_tap(item)\n# Assuming the item is marked as 'done' from the interaction\nscroll($more_options_checklist, 'down')\ntap($set_font_size)\ntap($font_size_150%)\ntap($exit_settings)"}
{"task": "Access more options in the current note, change the font size to 50% through settings, add a caption 'Important' to the note, then change the font size to 90%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_50%)\ntap($exit_settings)\ntap($note_content)\nset_text($note_content, 'Important')\ntap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)\ntap($exit_settings)"}
{"task": "Access more options for the current note, then choose the option to delete the current note, and confirm the deletion of the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove the completed items from the checklist, then sort the checklist items by title, and save the current sort type of the checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($save_note)"}
{"task": "Go to Settings from the more options menu of the current note and change the app theme to Black & White", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\n"}
{"task": "Open the more options menu for the current checklist and navigate to Settings to customize the colors of the app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\n"}
{"task": "Open the Font size settings from the Settings and set the font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\n"}
{"task": "Go to Settings from the more options menu of the current note, open the Font size settings, and set the font size to 100%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\n"}
{"task": "Open the more options menu for the current note, go to Settings, and set the app theme to Custom", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\n"}
{"task": "Launch the app, open more options for the current checklist, access customize colors, and then set the theme color to dark_red", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Dark red')[0])"}
{"task": "Open the theme settings, enable Auto light/dark theme mode, set the primary color of the app to green, and then customize the text color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Auto light / dark')[0])\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($set_text_color)\nset_text($set_text_color, 'blue')"}
{"task": "Open more options for the current note, access settings, change the background color to yellow, and then change the app icon color to red", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'yellow')\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'red')"}
{"task": "Access app settings, set the primary color of the app to green, then disable Auto light/dark theme mode, and finally set the theme color to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($set_theme_color)\ntap($theme_color_types.match('Auto light / dark')[0])\ntap($theme_color_types.match('Dark')[0])"}
{"task": "Rename the current note to 'Project Plan', remove done items from the current checklist, and then lock the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Sort the checklist items by date created and then remove the completed items from the checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the checklist items by custom order, access more options for the current note, and confirm the deletion of the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Delete the note that's currently open, then access more options for the next note to confirm the deletion as well", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($switch_to_next_item)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove the completed items from the checklist and sort the remaining items by date created, then save the current sort type of the checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)"}
{"task": "Access more options for the current note, then choose the option to delete the current note, sort the next note's checklist items by title, and remove the completed items from the checklist", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($switch_to_next_item)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "From the Settings, change the app theme to Black & White and then adjust the font size to 90%", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($font_size_types.match('90%'][0])"}
{"task": "Go to Settings from the more options menu of the current checklist, customize the colors of the app, and then set the font size to 50%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\nsave_set_colors()\ntap($set_font_size)\ntap($font_size_types.match('50%'][0])"}
{"task": "Access the more options menu for the current note, go to Settings, open Theme settings, and then set the app theme to Custom", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Show the list of all checklist items, then switch to the next item and show the title of the current item.", "solution": "tap($checklist_item_list)\ntap($switch_to_next_item)\nitem_title = get_text($item_title)"}
{"task": "Open more options for the current checklist, switch to the previous item, and show the content and state of the first checklist item.", "solution": "tap($more_options_checklist)\ntap($switch_to_prev_item)\nchecklist_items = $checklist_item_list\nfirst_checklist_item = checklist_items[0]\nstate = get_attributes(first_checklist_item)['checked']"}
{"task": "Sort the checklist items by date created, then access more options for the current note to remove the completed items and confirm the deletion of another note.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\nback()\ntap($open_note)\ntap($open_note_title_list[<target_note_index>])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Export the current note as a file, rename it to 'Project Plan', and print the note", "solution": "tap($more_options_note)\ntap($export_as_file)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Rename the current checklist to 'Groceries', then export it as a file and lock the checklist", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Groceries')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($export_as_file)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Print the current note, delete the note, and show information about the app", "solution": "tap($more_options_note)\ntap($print_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($about)"}
{"task": "Export the current note as a file, lock the note, and rename it to 'Confidential'", "solution": "tap($more_options_note)\ntap($export_as_file)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Confidential')\ntap($rename_ok)"}
{"task": "Rename the current note to 'Shopping List', sort the items in the current checklist by title, and then remove done items from the current checklist", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\n"}
{"task": "Delete the current note after removing done items from the checklist and lock the app", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\n"}
{"task": "Remove done items from the current checklist, rename the note to 'Weekly Report', sort the items by title, and then lock the current note", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Weekly Report')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\n"}
{"task": "Rename the current note to 'Travel Itinerary', remove done items from the checklist, sort them by title, and then delete the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Travel Itinerary')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\n"}
{"task": "Sort the items in the current checklist by title, rename the note to 'Task List', remove done items, and lock the current note", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Task List')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\n"}
{"task": "Add a new checklist item called 'Buy groceries', then switch to the next item and show the title of the current item.", "solution": "tap($create_note)\nset_text($add_note_title, 'New Checklist')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)\ntap($switch_to_next_item)\nget_text($item_title)"}
{"task": "Switch to the previous item, show the content and state of the first checklist item, then switch to the next item.", "solution": "tap($switch_to_prev_item)\nget_text($checklist_item_list[0])\ntap($switch_to_next_item)"}
{"task": "Show the list of all checklist items, open more options for the current checklist, and add a new checklist item called 'Buy groceries'.", "solution": "get_text($checklist_item_list)\ntap($more_options_checklist)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)"}
{"task": "Show the content and state of the first checklist item, then show the title of the current item.", "solution": "get_text($checklist_item_list[0])\nget_text($item_title)"}
{"task": "Add a new checklist item called 'Buy groceries', switch to the previous item, and show the list of all checklist items.", "solution": "tap($create_note)\nset_text($add_note_title, 'New Checklist')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)\ntap($switch_to_prev_item)\nget_text($checklist_item_list)"}
{"task": "Lock the current checklist, delete the checklist, and open the settings", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\ntap($delete_note)\ntap($delete_note_ok)\ntap($settings)"}
{"task": "Print the current note, rename it to 'Trip Itinerary', and lock the note", "solution": "tap($more_options_note)\ntap($print_note)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Trip Itinerary')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current checklist to 'Workout Routine', print it, and export it as a file", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Workout Routine')\ntap($rename_ok)\ntap($print_note)\ntap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Delete the current note, then rename the current checklist to 'Household Chores' and lock it", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Household Chores')\ntap($rename_ok)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Set the font size to 150% in the Notes app and then enable 'show keyboard on startup' in settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '150%'})[0])\ntap($settings)\ntap($set_show_keyboard_on_startup)"}
{"task": "Remove done items from the current checklist, sort the items by title, rename the note to 'Monthly Agenda', and then lock the current note", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Monthly Agenda')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Daily Schedule', remove done items from the checklist, sort the items by title, lock the note, and then delete it.", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Daily Schedule')\ntap($rename_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the settings from the current note, then lock the current note", "solution": "tap($more_options_note)\ntap($settings)\nback()\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Rename the current note to 'Meeting Notes' and then show the information of the app from the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)\ntap($more_options_note)\ntap($about)"}
{"task": "Delete the current note and then open the settings from the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Set the font size to 200% in the Notes app and then open more options for the current note", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_200%)\ntap($exit_settings)\ntap($more_options_note)"}
{"task": "Enable 'place cursor to the end of note' in settings and set the font size to 125% in the Notes app", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($current_font_size)\ntap($font_size_125%)\ntap($exit_settings)"}
{"task": "Set the font size to 300% in the Notes app, open the Notes app settings, and enable 'show keyboard on startup' in settings", "solution": "tap($current_font_size)\ntap($font_size_300%)\ntap($settings)\ntap($set_show_keyboard_on_startup)\ntap($exit_settings)"}
{"task": "Open more options for the current checklist and then set the font size to 175% in the Notes app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($current_font_size)\ntap($font_size_175%)\ntap($exit_settings)"}
{"task": "Set the font size to 250% in the Notes app, open the Notes app settings, and then enable 'place cursor to the end of note' in settings", "solution": "tap($current_font_size)\ntap($font_size_250%)\ntap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($exit_settings)"}
{"task": "Sort items in the current checklist and remove all done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Rename the current note to 'Project Plan', lock the current note, and then show the information of the app from the current note", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($about)"}
{"task": "Remove all done items from the current checklist, sort items in the current checklist, and then open the settings from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Open the settings from the current note, show the information of the app from the current note, and then rename the current note to 'Daily Tasks'", "solution": "tap($more_options_note)\ntap($settings)\ntap($more_options_note)\ntap($about)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Daily Tasks')\ntap($rename_ok)"}
{"task": "Lock the current note, then delete the current note, and finally open the settings from the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Open the Notes app settings, enable 'show keyboard on startup', and then set the font size to 200% in the Notes app", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_font_size)\ntap($font_size_200%)\n"}
{"task": "Set the font size to 125% in the Notes app, open more options for the current note, and then enable 'place cursor to the end of note' in settings", "solution": "tap($set_font_size)\ntap($font_size_125%)\nback()\ntap($more_options_note)\ntap($settings)\ntap($set_place_cursor_to_the_end_of_note)\n"}
{"task": "Set font size to 300% and show the current font size", "solution": "tap($set_font_size)\ntap($font_size_300%)\ntap($current_font_size)\n"}
{"task": "Enable show keyboard on startup and enable show note picker on startup", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($set_show_a_note_picker_on_startup)\n"}
{"task": "Set cursor to place at the end of the note, then enable autosave notes", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_autosave_notes)\n"}
{"task": "Open the settings from the more options of the current note and then set the font size of the app to 'Medium'", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Open the more options menu for the current checklist and enable the 'Show word count' option from settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_show_word_count)"}
{"task": "Open the more options menu for the current note, navigate to settings, and customize the colors of the app to 'Dark Mode'", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Open the more options menu for the current checklist, open the settings, and enable the 'Make links and emails clickable' option", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Set the widget colors to 'Blue' after opening the settings from the more options of the current note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_widget_colors)\ntap($set_primary_color)\ntap($theme_color_dark)"}
{"task": "Open settings and enable display save success messages", "solution": "tap($settings)\ntap($set_display_save_success_messages)"}
{"task": "Export notes and then disable export confirmations", "solution": "tap($settings)\ntap($export_notes)\ntap($set_display_save_success_messages)"}
{"task": "Import notes and then display a summary of imported notes", "solution": "tap($settings)\ntap($import_notes)\n# Show summary placeholder\nimported_notes_summary = 'Summary of imported notes'\nprint(imported_notes_summary)"}
{"task": "Open more options for the current note and set a reminder for '10:00 AM tomorrow'", "solution": "# Open more options for the current note\ntap($more_options_note)\n# Set a reminder for '10:00 AM tomorrow'\n# The reminder feature is not explicitly mentioned in the provided UI elements\n# Assuming it's part of a hypothetical reminder element placeholder\n# tap($set_reminder)\n# set_text($reminder_time, '10:00 AM tomorrow')\n# tap($reminder_ok)"}
{"task": "Open more options for the current checklist and share it with 'john.doe@example.com'", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'Share'})[0])\n# The share feature is not explicitly mentioned in the provided UI elements\n# Assuming it's part of a hypothetical share element placeholder\n# set_text($share_with, 'john.doe@example.com')\n# tap($share_ok)"}
{"task": "Open the settings from the more options of the current checklist then scroll through the settings page to find and check the current font size of the app", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, \"down\")"}
{"task": "Enable both the 'Show word count' and 'Make links and emails clickable' options after opening the settings from the more options of the current note", "solution": "tap($more_options_note)\ntap($settings)\nset_attr = get_attributes($set_show_word_count)\nif not set_attr[\"checked\"]:\n    tap($set_show_word_count)\nset_attr = get_attributes($set_make_links_and_emails_clickable)\nif not set_attr[\"checked\"]:\n    tap($set_make_links_and_emails_clickable)"}
{"task": "Open the settings from the more options of the current note, customize the app colors, set the font size to 'Large', and then exit the settings page.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($save_set_colors)\nback()\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Set the font size in the Notes app to large, then enable word count display and switch to using a monospaced font", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()\ntap($set_show_word_count)\ntap($set_use_monospaced_font)"}
{"task": "Open the settings menu in the Notes app, enable line wrap, and turn on Incognito mode for the keyboard", "solution": "tap($settings)\ntap($set_enable_line_wrap)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open the app settings, then open color customization settings for the app, set the theme color of the app to blue and save the colors in the color customization settings.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($set_theme_color, 'blue')\ntap($save_set_colors)"}
{"task": "Open more options for the current note and then set the background color of the app to light grey.", "solution": "tap($more_options_note)\ntap($set_background_color)\ntap($set_background_color,'light grey')"}
{"task": "Open the app settings, then set the text color of the app to dark green and the app icon color to orange.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\nset_text($set_text_color, 'dark green')\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'orange')\ntap($save_set_colors)"}
{"task": "Open color customization settings for the app, set the primary color of the app to teal, set the text color to white, and save the changes.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'teal')\ntap($set_text_color)\nset_text($set_text_color, 'white')\ntap($save_set_colors)"}
{"task": "Show the theme color types, then set the theme color to the first type that appears.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types[0])\ntap($save_set_colors)"}
{"task": "Open the app settings, set the background color of the app to beige, set the primary color to navy blue, and save the colors.", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, \"#F5F5DC\")\ntap($set_primary_color)\nset_text($set_primary_color, \"#001F3F\")\ntap($save_set_colors)\nback()"}
{"task": "Open more options for the current note, then open color customization settings, set the theme color to pastel yellow and set the app icon color to purple.", "solution": "tap($more_options_note)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, \"#FDFD96\")\ntap($set_app_icon_color)\nset_text($set_app_icon_color, \"#800080\")\ntap($save_set_colors)\nback()"}
{"task": "Open the app settings, show the theme color types, set the theme color to the last type displayed, then set the text color of the app to black.", "solution": "tap($settings)\ntap($set_theme_color)\nlen_theme_color_types = len($theme_color_types)\ntap($theme_color_types[len_theme_color_types-1])\ntap($set_text_color)\nset_text($set_text_color, \"#000000\")\ntap($save_set_colors)\nback()"}
{"task": "Enable dark red theme color and then set font size to 75%", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\ntap($set_font_size)\ntap($font_size_75%)\nback()"}
{"task": "Open more options in the current note, then open settings from the more options in the current note, and finally change theme color to white", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()"}
{"task": "Open settings from the more options in the current checklist, customize colors in the app by changing the theme color to custom and set font size to 50%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($exit_settings)\ntap($set_font_size)\ntap($font_size_50%)\ntap($exit_settings)"}
{"task": "Open more options in the current note, open settings from the more options in the current note, and customize colors in the app by changing the theme color to black & white", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Enable dark red theme color, customize colors in the app, and set font size to 60%", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\ntap($exit_settings)\ntap($set_font_size)\ntap($font_size_60%)\ntap($exit_settings)"}
{"task": "Open settings from the more options in the current note, change theme color to black & white, and set font size to 75%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\ntap($exit_settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($exit_settings)"}
{"task": "Change theme color to custom, then enable dark red theme color and set font size to 60%", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($exit_settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\ntap($exit_settings)\ntap($set_font_size)\ntap($font_size_60%)\ntap($exit_settings)"}
{"task": "Open more options in the current note, then open settings from the more options in the current note, and set font size to 50%.", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_50%)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings in the Notes App and set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current note and set the font size to 125% in the Notes App", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size to 150% in the Notes App and then open more options for the current checklist", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($sort_checklist_items_ok)\nback()\ntap($open_note)\ntap($more_options_checklist)"}
{"task": "Open the settings in the Notes App, set the font size to 75%, and then open more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\ntap($sort_checklist_items_ok)\nback()\nback()\ntap($more_options_note)"}
{"task": "Set the font size to 60% in the Notes App and open more options for the current note", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)\nback()\ntap($more_options_note)"}
{"task": "Open more options for the current checklist and then set the font size to 175% in the Notes App", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nback()"}
{"task": "Set the font size to 50% in the Notes App and open the settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)\nback()\ntap($settings)"}
{"task": "Open more options for the current checklist, set the font size to 90%, and then open the settings in the Notes App", "solution": "tap($more_options_checklist)\nback()\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()\ntap($settings)"}
{"task": "Open more options for the current checklist and sort items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}

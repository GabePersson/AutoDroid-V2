{"task": "Open the 'more options' menu.", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist items.", "solution": "tap($more_options_checklist); tap($sort_checklist_items)"}
{"task": "Sort the current checklist items by title.", "solution": "tap($more_options_checklist); tap($sort_checklist_items); tap($title_type); tap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by date created.", "solution": "tap($more_options_checklist); tap($sort_checklist_items); tap($date_created_type); tap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items using custom sorting.", "solution": "tap($more_options_checklist); tap($sort_checklist_items); tap($custom_type); tap($sort_checklist_items_ok)"}
{"task": "Open the note 'Ideas' and draft a new section", "solution": "tap($open_note)\nnote_list = $open_note_title_list\nideas_note = note_list.match('Ideas')[0]\ntap(ideas_note)\nset_text($note_content, get_text($note_content) + '\\n\\nNew Section: ')"}
{"task": "Open the note 'Dream Journal' and update today's entry", "solution": "tap($open_note)\nnote_list = $open_note_title_list\njournal_note = note_list.match('Dream Journal')[0]\ntap(journal_note)\nset_text($note_content, get_text($note_content) + '\\n\\nToday\\'s Entry: ')"}
{"task": "Retrieve the note 'Project Tasks' and change the deadline of task 3", "solution": "tap($open_note)\nnote_list = $open_note_title_list\ntasks_note = note_list.match('Project Tasks')[0]\ntap(tasks_note)\nlong_tap($checklist_item_list[3])\nrename_button = $rename_selected_checklist_item\ntap(rename_button)\nset_text($rename_input, 'Updated Task 3 with new deadline')\ntap($rename_ok)"}
{"task": "Tap on 'Open Note'", "solution": "tap($open_note)"}
{"task": "Tap on 'Create Note' button", "solution": "tap($create_note)"}
{"task": "Open the notes font size settings", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Display the current font size", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_size = get_attributes($font_size_types.match({'selected': true}))[0]\nprint(current_size)"}
{"task": "Open the settings of the Notes App", "solution": "tap($settings)"}
{"task": "Customize the colors of the Notes App", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the primary color of the Notes App to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'blue')\ntap($save_set_colors)"}
{"task": "Open more options in the note titled 'Workout Routine'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor idx in range(len(open_note_titles)):\n    if get_text(open_note_titles[idx]) == 'Workout Routine':\n        tap(open_note_titles[idx])\n        break\ntap($more_options_note)"}
{"task": "Set the theme color to White in the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\nfor idx in range(len($theme_color_types)):\n    if get_text($theme_color_types[idx]) == 'White':\n        tap($theme_color_types[idx])\n        break"}
{"task": "Open the more options menu in the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the Notes app", "solution": "tap($settings)"}
{"task": "Customize the colors of the Notes app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Tap on 'more options note'", "solution": "tap($more_options_note)"}
{"task": "Tap on 'more options checklist'", "solution": "tap($more_options_checklist)"}
{"task": "Tap on 'more options note' and then select 'Lock note'", "solution": "tap($more_options_note)\ntap($lock_note)"}
{"task": "Tap on 'more options checklist' and then select 'Lock note'", "solution": "tap($more_options_checklist)\ntap($lock_note)"}
{"task": "Tap on 'more options note' and then select 'Open file'", "solution": "tap($more_options_note)\ntap($open_file)"}
{"task": "Tap on 'Settings' from the 'more options' of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Tap 'Open Note'", "solution": "tap($open_note)"}
{"task": "Create a new note titled 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Add a checklist item 'Buy Milk' to the current note", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy Milk')\ntap($add_checklist_item_ok)"}
{"task": "Add a checklist item 'Buy Eggs' to the current note", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy Eggs')\ntap($add_checklist_item_ok)"}
{"task": "Export all notes", "solution": "tap($settings)\ntap($export_notes)\n"}
{"task": "Move the checklist item 'Buy Groceries' to the top of the list", "solution": "long_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($move_selected_item_to_the_top)\n"}
{"task": "Rename the checklist item 'Finish Report' to 'Complete Report'", "solution": "long_tap($checklist_item_list.match('Finish Report')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Complete Report')\ntap($rename_ok)\n"}
{"task": "Delete the checklist item 'Call Mom'", "solution": "long_tap($checklist_item_list.match('Call Mom')[0])\ntap($delete_selected_checklist_item)\n"}
{"task": "Move the checklist item 'Workout' to the bottom of the list", "solution": "long_tap($checklist_item_list.match('Workout')[0])\ntap($move_selected_item_to_the_buttom)\n"}
{"task": "Change the theme color of the Notes app", "solution": "tap($settings); tap($set_colors);"}
{"task": "Set the theme color to Black & White in the Notes app", "solution": "tap($settings); tap($set_colors); tap($set_theme_color); tap($theme_color_black_white); back(); tap($save_set_colors);"}
{"task": "Open the more options menu in the current checklist", "solution": "tap($more_options_checklist);"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note);"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist);"}
{"task": "Tap on 'more options checklist' and then select 'Open file'", "solution": "tap($more_options_checklist)\ntap($open_file)"}
{"task": "Tap on 'more options' for the current note", "solution": "tap($more_options_note)"}
{"task": "Tap on 'more options' for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings to show word count", "solution": "tap($settings)\ntap($set_show_word_count)"}
{"task": "Open settings to make links and emails clickable", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Search for the checklist item with the text 'Doctor appointment'", "solution": "$checklist_item_list.match('Doctor appointment')"}
{"task": "Duplicate the checklist item 'Grocery shopping'", "solution": "long_tap($checklist_item_list.match('Grocery shopping')[0]); tap($duplicate_checklist_item)"}
{"task": "Open the more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the app settings from the more options of the current note", "solution": "tap($more_options_note); tap($settings)"}
{"task": "Turn on the 'Make links and emails clickable' option in the settings.", "solution": "tap($settings)\nif not get_attributes($set_make_links_and_emails_clickable)[\"checked\"]:\n    tap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Turn off the 'Make links and emails clickable' option in the settings.", "solution": "tap($settings)\nif get_attributes($set_make_links_and_emails_clickable)[\"checked\"]:\n    tap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Turn on the 'use monospaced font' option in the settings.", "solution": "tap($settings)\nif not get_attributes($set_use_monospaced_font)[\"checked\"]:\n    tap($set_use_monospaced_font)\nback()"}
{"task": "Turn off the 'use monospaced font' option in the settings.", "solution": "tap($settings)\nif get_attributes($set_use_monospaced_font)[\"checked\"]:\n    tap($set_use_monospaced_font)\nback()"}
{"task": "Open more options for the current note.", "solution": "tap($more_options_note)"}
{"task": "Select 'Text Note Type' for a new note", "solution": "tap($text_note_type)"}
{"task": "Add a note title 'Shopping List'", "solution": "set_text($add_note_title, 'Shopping List')"}
{"task": "Add 'Checklist Type' for a new note", "solution": "tap($checklist_type)"}
{"task": "Tap 'OK' to confirm the new note", "solution": "tap($add_note_ok)"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open settings of the app", "solution": "tap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($set_colors)"}
{"task": "Save the customized colors of the app", "solution": "tap($save_set_colors)"}
{"task": "Close the color customization popup", "solution": "tap($close_set_colors)"}
{"task": "Switch to the next note", "solution": "tap($switch_to_next_item)"}
{"task": "Set the app icon color of the Notes App to green", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_app_icon_color)\n# Assuming there is a button to select the color green.\n# This must be done based on the assumption that the list or available colors are identifiable.\n# Here, it attempts to match the button associated with the green color\ntap($theme_colors.match('Green'))\ntap($save_set_colors)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Create a shortcut for my grocery list note", "solution": "tap($open_note)\ntap($open_note_title_list.match('my grocery list'))\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Lock the meeting notes", "solution": "tap($open_note)\ntap($open_note_title_list.match('meeting notes'))\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Switch to the next checklist item", "solution": "tap($switch_to_next_item)"}
{"task": "View all items in the checklist", "solution": "tap($more_options_checklist)\ntap($checklist_item_list)"}
{"task": "Open the 'Meeting Notes' note", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nmeeting_note = open_note_titles.match('Meeting Notes')[0]\ntap(meeting_note)"}
{"task": "Create a new note titled 'Shopping List' with a checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Add a new note and title it 'Vacation Packing List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Packing List')\ntap($add_note_ok)"}
{"task": "Uncheck the 'Show word count' option in settings", "solution": "tap($settings)\nif get_attributes($set_show_word_count)[\"checked\"]:\n    tap($set_show_word_count)"}
{"task": "Check the 'Make links and emails clickable' option in settings", "solution": "tap($settings)\nif not get_attributes($set_make_links_and_emails_clickable)[\"checked\"]:\n    tap($set_make_links_and_emails_clickable)"}
{"task": "Open the font size settings", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Change the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Change the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Open the app settings from the more options of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize the app colors from the settings", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the theme color to Black & White", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Set the theme color to Custom", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Access the settings from the more options menu of a note.", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Access the settings from the more options menu of a checklist.", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Print the current note about grocery list", "solution": "if get_text($item_title) == 'Grocery List':\n    tap($more_options_note)\n    tap($print_note)"}
{"task": "Delete the current note titled 'Meeting Minutes'", "solution": "if get_text($item_title) == 'Meeting Minutes':\n    tap($more_options_note)\n    tap($delete_note)\n    tap($delete_note_ok)"}
{"task": "Complete the current note by tapping 'OK'", "solution": "tap($add_note_ok)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Tap 'Create Note' to add a new note", "solution": "tap($create_note)"}
{"task": "Edit the current checklist to remove 'Buy Milk'", "solution": "long_tap($checklist_item_list.match('Buy Milk')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Scroll through the list of existing notes to find 'Meeting Notes'", "solution": "open_note_titles = $open_note_title_list\nfor idx in range(len(open_note_titles)):\n    note_title = get_text(open_note_titles[idx])\n    if note_title == 'Meeting Notes':\n        tap(open_note_titles[idx])\n        break"}
{"task": "Move the checklist item 'Read a Book' to the top of the list", "solution": "checklist_item = $checklist_item_list.match('Read a Book')[0]\nlong_tap(checklist_item)\ntap($move_selected_item_to_the_top)"}
{"task": "Rename the checklist item 'Meeting at 3PM' to 'Team Meeting at 3PM'", "solution": "checklist_item = $checklist_item_list.match('Meeting at 3PM')[0]\nlong_tap(checklist_item)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Team Meeting at 3PM')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Dentist Appointment'", "solution": "checklist_item = $checklist_item_list.match('Dentist Appointment')[0]\nlong_tap(checklist_item)\ntap($delete_selected_checklist_item)"}
{"task": "Tap 'more options' button in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Remove done items from the current checklist via the 'Remove done items' button", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Export the project checklist as a file", "solution": "tap($more_options_checklist)\ntap($open_note_title_list.match('project checklist')[0])\ntap($export_as_file)"}
{"task": "Open the travel itinerary note", "solution": "tap($open_note)\ntap($open_note_title_list.match('travel itinerary')[0])"}
{"task": "Create a shortcut for my workout plan checklist", "solution": "tap($open_note_title_list.match('workout plan')[0])\ntap($more_options_checklist)\ntap($create_shortcut)"}
{"task": "Lock the holiday plans checklist", "solution": "tap($open_note_title_list.match('holiday plans')[0])\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Export the birthday party notes as a file", "solution": "tap($open_note_title_list.match('birthday party')[0])\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Confirm the new note titled 'Daily Journal'", "solution": "tap($add_note_ok)"}
{"task": "Open the 'Project Ideas' note", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Project Ideas')[0]\ntap(note_to_open)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Rename the current note to 'Shopping List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings from more options of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open settings from more options of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize colors in the settings", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the text color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)"}
{"task": "Open more options for the current note about travel plans", "solution": "tap($open_note)\ntap($open_note_title_list.match(\"travel plans\")[0])\ntap($more_options_note)"}
{"task": "Open more options for the current checklist for the weekend chores", "solution": "tap($open_note)\ntap($open_note_title_list.match(\"weekend chores\")[0])\ntap($more_options_checklist)"}
{"task": "Print the current checklist for office supplies", "solution": "tap($open_note)\ntap($open_note_title_list.match(\"office supplies\")[0])\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Print the current note that contains recipe for pasta", "solution": "tap($open_note)\ntap($open_note_title_list.match(\"recipe for pasta\")[0])\ntap($more_options_note)\ntap($print_note)"}
{"task": "Delete the current note containing the address of the new apartment", "solution": "tap($open_note)\ntap($open_note_title_list.match(\"address of the new apartment\")[0])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the app settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Show the current font size setting", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\nfont_sizes = $font_size_types\nfor size in font_sizes:\n    attributes = get_attributes(size)\n    if attributes['selected']:\n        print(get_text(size))"}
{"task": "Set the font size to 300% in the Notes app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Open 'Meeting Notes' by tapping 'Open Note'", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nmeeting_notes = open_notes.match('Meeting Notes')\ntap(meeting_notes[0])"}
{"task": "Long tap to select the note titled 'Birthday Plans'", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nbirthday_plans = open_notes.match('Birthday Plans')\nlong_tap(birthday_plans[0])"}
{"task": "Create a new note with the title 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)"}
{"task": "Open a note", "solution": "tap($open_note)"}
{"task": "Create a new note with the title 'Meeting Agenda'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Agenda')\ntap($add_note_ok)"}
{"task": "Sort items of the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort items of the current checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort items of the current checklist by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Change the theme to light mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Open the settings page in the Notes app", "solution": "tap($settings)"}
{"task": "Exit the settings page in the Notes app", "solution": "tap($exit_settings)"}
{"task": "Scroll down the settings page in the Notes app", "solution": "scroll($scroll_settings_page, 'down')"}
{"task": "Scroll up the settings page in the Notes app", "solution": "scroll($scroll_settings_page, 'up')"}
{"task": "Open the shopping list checklist", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nshopping_list = note_titles.match('Shopping list')[0]\ntap(shopping_list)"}
{"task": "Tap on the 'more options' button for the current note", "solution": "tap($more_options_note)"}
{"task": "Tap on the 'more options' button for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Export the current note as a file", "solution": "tap($more_options_note)\noption_buttons = $more_option_note_buttons\nexport_button = option_buttons.match('Export as file')[0]\ntap(export_button)"}
{"task": "Export the current checklist as a file", "solution": "tap($more_options_checklist)\noption_buttons = $more_option_checklist_buttons\nexport_button = option_buttons.match('Export as file')[0]\ntap(export_button)"}
{"task": "Rename the current checklist to 'Grocery List'", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('rename note')[0])\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Lock the current note and confirm", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('lock note')[0])\ntap($lock_note_ok)"}
{"task": "Lock the current checklist and confirm", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('lock note')[0])\ntap($lock_note_ok)"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('settings')[0])"}
{"task": "Set the theme color of the app", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Tap more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Tap settings from more options in the note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Tap more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Tap settings from more options in the checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Show information about the app from the current note", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Open the more options menu for the current note in the Notes app", "solution": "tap($more_options_note)"}
{"task": "Go to the Settings menu in the Notes app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the more options menu for the current checklist in the Notes app", "solution": "tap($more_options_checklist)"}
{"task": "Adjust the font size settings in the Notes app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)"}
{"task": "Show the current font size of the app in the Notes app", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\nget_text($current_font_size)"}
{"task": "Open a note and create a text note", "solution": "tap($open_note)\ntap($create_note)\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open a note and create a checklist", "solution": "tap($open_note)\ntap($create_note)\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Create a new note with the title 'Travel Itinerary'", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Itinerary')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new note with the title 'Project Ideas'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open a note and add a checklist titled 'Weekend Chores'", "solution": "tap($open_note)\ntap($create_note)\nset_text($add_note_title, 'Weekend Chores')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open more options for the current checklist for project tasks", "solution": "open_note_titles = $open_note_title_list.match(\"project tasks\")\ntap(open_note_titles[0])\ntap($more_options_checklist)"}
{"task": "Print the current note about upcoming birthdays", "solution": "open_note_titles = $open_note_title_list.match(\"upcoming birthdays\")\ntap(open_note_titles[0])\ntap($more_options_note)\ntap($print_note)"}
{"task": "Tapping the 'more options' button on the main screen", "solution": "tap($more_options_checklist)"}
{"task": "Tapping the 'Sort by' button after opening 'more options' in the checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)"}
{"task": "Tapping the 'Title' checkbox to sort items by title in the checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)"}
{"task": "Change the font size in settings", "solution": "tap($settings)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open settings from the main screen", "solution": "tap($settings)"}
{"task": "Set the font size to 200% in the app settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Set the font size to 250% in the app settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the app to custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Increase the font size of the app to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Decrease the font size of the app to 60%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set the font size of the app to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($exit_settings)"}
{"task": "Set the font size of the app to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($exit_settings)"}
{"task": "Display the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_size = get_text($current_font_size)\ntap($exit_settings)\ncurrent_size"}
{"task": "Tap the 'more options' button on the current note", "solution": "tap($more_options_note)"}
{"task": "Edit the content in the note by typing 'Meeting notes: Discuss project updates and timelines'", "solution": "set_text($note_content, 'Meeting notes: Discuss project updates and timelines')"}
{"task": "Set the cursor to start at the end of the note in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\nif not get_attributes($set_place_cursor_to_the_end_of_note)[\"checked\"]:\n    tap($set_place_cursor_to_the_end_of_note)\n"}
{"task": "Search for the word 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Find the next occurrence of the word 'schedule' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'schedule')\ntap($next_matchhed_text)"}
{"task": "Locate the previous instance of the term 'deadline' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)"}
{"task": "Open settings to set the show keyboard on startup", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\nif not get_attributes($set_show_keyboard_on_startup)[\"checked\"]:\n    tap($set_show_keyboard_on_startup)"}
{"task": "Open a note and add a text note titled 'Daily Journal'", "solution": "tap($open_note)\ntap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Enable the incognito mode of keyboards in settings", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Disable the incognito mode of keyboards in settings", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Enable line wrap in settings", "solution": "tap($settings)\ntap($set_enable_line_wrap)\nback()"}
{"task": "Disable line wrap in settings", "solution": "tap($settings)\ntap($set_enable_line_wrap)\nback()"}
{"task": "Set the font size of the app to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Show the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\nback()"}
{"task": "Open the file of the current note", "solution": "tap($more_options_note)\ntap($open_file)"}
{"task": "Open the file of the current checklist", "solution": "tap($more_options_checklist)\ntap($open_file)"}
{"task": "Export the current note as a file", "solution": "tap($more_options_note)\ntap($export_as_file)"}
{"task": "Print the current note", "solution": "print(get_text($note_content))"}
{"task": "Print the current checklist", "solution": "for item in $checklist_item_list: print(get_text(item))"}
{"task": "Enable autosave notes", "solution": "tap($settings); if not get_attributes($set_autosave_notes)['checked']: tap($set_autosave_notes); back()"}
{"task": "Disable autosave notes", "solution": "tap($settings); if get_attributes($set_autosave_notes)['checked']: tap($set_autosave_notes); back()"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Show information about the app from the current checklist", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'About'})[0])"}
{"task": "Rename the current note to 'Shopping List'", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match({'text': 'Rename note'})[0])\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)"}
{"task": "Rename the current checklist to 'To-Do List'", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'Rename note'})[0])\nset_text($rename_input, 'To-Do List')\ntap($rename_ok)"}
{"task": "Set the app alignment to left.", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match({'text': 'Settings'})[0])\ntap($set_alignment)\ntap($alignment.match({'text': 'Left'})[0])\nback()"}
{"task": "Set the app alignment to center.", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match({'text': 'Settings'})[0])\ntap($set_alignment)\ntap($alignment.match({'text': 'Center'})[0])\nback()"}
{"task": "Scroll through the content in the note to review previous entries", "solution": "scroll($note_content, 'up')"}
{"task": "Long tap the note content to select text for copying", "solution": "long_tap($note_content)"}
{"task": "Delete all text in the current note", "solution": "set_text($note_content, '')"}
{"task": "Add a list of tasks: '1. Buy groceries, 2. Finish report, 3. Call mom'", "solution": "set_text($note_content, '1. Buy groceries\n2. Finish report\n3. Call mom')"}
{"task": "Change the font size of the note content to large", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Tapping the 'Date created' checkbox to sort items by date created in the checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Rename the checklist item 'Buy Groceries' to 'Buy Vegetables'", "solution": "long_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy Vegetables')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Complete Homework'", "solution": "long_tap($checklist_item_list.match('Complete Homework')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Rename the checklist item 'Plan Vacation' to 'Book Flights'", "solution": "long_tap($checklist_item_list.match('Plan Vacation')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Book Flights')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Morning Run'", "solution": "long_tap($checklist_item_list.match('Morning Run')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Check the current font size in the app settings", "solution": "tap($settings)\ntap($current_font_size)\nfont_size = get_text($font_size_types.match({'selected': true})[0])\nback()"}
{"task": "Rename the current note to 'Grocery List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Create a shortcut for the note titled 'Project Ideas'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_index = [i for i in range(len(open_note_titles)) if get_text(open_note_titles[i]) == 'Project Ideas'][0]\ntap(open_note_titles[note_index])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Rename the current checklist to 'Morning Routine'", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Morning Routine')\ntap($rename_ok)"}
{"task": "Open settings to set the show note picker on startup", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Enable the option to show keyboard on startup", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_show_keyboard_on_startup).checked is False"}
{"task": "Disable the option to show keyboard on startup", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_show_keyboard_on_startup).checked is True"}
{"task": "Set the app alignment to right.", "solution": "tap($set_alignment)"}
{"task": "Open the settings of the app.", "solution": "tap($settings)"}
{"task": "Customize the app colors.", "solution": "tap($set_colors)"}
{"task": "Close the color customization window.", "solution": "tap($close_set_colors)"}
{"task": "Open more options for the current note.", "solution": "tap($more_options_note)"}
{"task": "Export the current checklist as a file", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('export as file')[0])"}
{"task": "Print the current note", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('print')[0])"}
{"task": "Print the current checklist", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('print')[0])"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('delete note')[0])\ntap($delete_note_ok)"}
{"task": "Delete the current checklist", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('delete note')[0])\ntap($delete_note_ok)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Navigate to settings from the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Go to settings", "solution": "tap($settings)"}
{"task": "Enable display save success messages", "solution": "\nattributes = get_attributes($set_display_save_success_messages)\nif not attributes['checked']:\n\ttap($set_display_save_success_messages)"}
{"task": "Disable display save success messages", "solution": "\nattributes = get_attributes($set_display_save_success_messages)\nif attributes['checked']:\n\ttap($set_display_save_success_messages)"}
{"task": "Edit the content of the note to say 'Meeting at 10am on Monday'", "solution": "\nset_text($note_content, 'Meeting at 10am on Monday')\ntap($save_note)"}
{"task": "Rename the checklist item 'Read Book' to 'Read Novel'", "solution": "long_tap($checklist_item_list.match('Read Book')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Read Novel')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Clean Room'", "solution": "long_tap($checklist_item_list.match('Clean Room')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Search within the current note for the text 'meeting agenda'.", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting agenda')"}
{"task": "Close the search box in the current note.", "solution": "tap($close_search_box)"}
{"task": "Create a new note titled 'Grocery List'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open more options for the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Go to app settings from the note options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Go to app settings from the checklist options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Adjust the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Create a shortcut for the checklist titled 'Workout Plan'", "solution": "tap($open_note)\nchecklists = $open_note_title_list.match('Workout Plan')\ntap(checklists[0])\ntap($more_options_checklist)\ntap($create_shortcut)"}
{"task": "Rename the current note to 'Meeting Minutes 10-10-2023'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Minutes 10-10-2023')\ntap($rename_ok)"}
{"task": "Create a shortcut for the note titled 'Travel Itinerary'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Travel Itinerary')\ntap(notes[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Edit the note to add the text 'Meeting at 3 PM tomorrow' at the beginning", "solution": "text = get_text($note_content)\nset_text($note_content, 'Meeting at 3 PM tomorrow\\n' + text)\ntap($save_note)"}
{"task": "Search for the word 'important' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'important')\ntap($next_matchhed_text)"}
{"task": "Set the theme color to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Set the theme color to auto light/dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Navigate to settings from the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Change the theme color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Search for the word 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Find the next occurrence of 'deadline' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)"}
{"task": "Locate the previous instance of 'attachment' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'attachment')\ntap($prev_matched_text)"}
{"task": "Close the search box after finding 'budget' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($close_search_box)"}
{"task": "Open the settings in the Notes app", "solution": "tap($settings)"}
{"task": "Search within the current note for the word 'deadline'", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Find the next occurrence of the word 'project' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($next_matchhed_text)"}
{"task": "Scroll to the previous occurrence of the word 'client' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'client')\ntap($prev_matched_text)"}
{"task": "Replace the content of the note with 'Shopping list: bread, milk, eggs'", "solution": "tap($note_content)\nset_text($note_content, 'Shopping list: bread, milk, eggs')"}
{"task": "Search within the note for the text 'action items'", "solution": "tap($search_within_note)\nset_text($search_text, 'action items')"}
{"task": "Adjust the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\n"}
{"task": "Check the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\nfor i in range(len($font_size_types)):\n    if get_attributes($font_size_types[i])[\"selected\"]:\n        current_font_size = get_text($font_size_types[i])\nprint(current_font_size)\n"}
{"task": "Show the title of the current note", "solution": "print(get_text($item_title))\n"}
{"task": "Go to the next item in the list", "solution": "tap($switch_to_next_item)\n"}
{"task": "Switch to the next checklist item", "solution": "long_tap($checklist_item)\ntap($move_selected_item_to_the_buttom)\n"}
{"task": "Open the more options menu of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the Settings menu", "solution": "tap($settings)"}
{"task": "Change the font size of the app to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('75%')[0])"}
{"task": "Change the font size of the app to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('90%')[0])"}
{"task": "Set the font size to large in the Notes app settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('200%')[0])\ntap($font_size_types.match({'selected': True})[0])"}
{"task": "Show the word count in the Notes app", "solution": "tap($settings)\ntap($set_show_word_count)\nif not get_attributes($set_show_word_count)['checked']:\n    tap($set_show_word_count)"}
{"task": "Make links and emails clickable in the Notes app", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\nif not get_attributes($set_make_links_and_emails_clickable)['checked']:\n    tap($set_make_links_and_emails_clickable)"}
{"task": "Open more options for the current note in the Notes app", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist in the Notes app", "solution": "tap($more_options_checklist)"}
{"task": "Modify the note content to include 'Grocery list: milk, eggs, bread' at the end", "solution": "tap($note_content)\nset_text($note_content, get_text($note_content) + 'Grocery list: milk, eggs, bread')"}
{"task": "Search for 'deadline' in the existing note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Add 'Call mom' in the middle of the note content", "solution": "tap($note_content)\noriginal_text = get_text($note_content)\nskip_middle = len(original_text) // 2\nnew_content = original_text[:skip_middle] + 'Call mom' + original_text[skip_middle:]\nset_text($note_content, new_content)"}
{"task": "Find and highlight the term 'schedule' in the note", "solution": "tap($search_within_note)\nset_text($search_text, 'schedule')"}
{"task": "Delete the current note by tapping the 'more options' button and then confirming the deletion.", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the note titled 'Meeting Notes'.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nmeeting_notes = note_titles.match('Meeting Notes')\ntap(meeting_notes[0])"}
{"task": "Open the note called 'Meeting Minutes'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nmeeting_minutes = note_titles.match('Meeting Minutes')\ntap(meeting_minutes[0])"}
{"task": "Create a new note titled 'Grocery List' with items 'Milk, Eggs, Bread'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Eggs')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)"}
{"task": "Open and edit the note titled 'Project Plan'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nproject_plan = note_titles.match('Project Plan')\ntap(project_plan[0])"}
{"task": "Create a new note for 'Vacation Ideas'", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Ideas')\ntap($add_note_ok)"}
{"task": "Enable the option to show a note picker on startup", "solution": "tap($settings)\nset_text($set_show_a_note_picker_on_startup, 'true')"}
{"task": "Disable the option to show a note picker on startup", "solution": "tap($settings)\nset_text($set_show_a_note_picker_on_startup, 'false')"}
{"task": "Change the background color of the app to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'blue')\ntap($save_set_colors)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Go to app settings", "solution": "tap($settings)"}
{"task": "Highlight the text 'project updates and timelines' in the note", "solution": "tap($search_within_note); set_text($search_text, 'project updates and timelines'); tap($next_matchhed_text)"}
{"task": "Insert the date 'October 5, 2023' at the beginning of the note content", "solution": "tap($note_content); set_text($note_content, 'October 5, 2023 ' + get_text($note_content))"}
{"task": "Tap twice on 'meeting notes' to select and bold it", "solution": "element: tap($note_content); set_text($note_content, get_text($note_content).replace('meeting notes', '**meeting notes**'))"}
{"task": "Open the settings in the Notes APP", "solution": "tap($settings)"}
{"task": "Customize the colors of the app in the Notes APP", "solution": "tap($settings); tap($set_colors); tap($set_theme_color); tap($theme_color_dark); tap($set_text_color); tap($text_color_black_white); tap($save_set_colors)"}
{"task": "Find the next occurrence of 'budget' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)"}
{"task": "Go to the previous occurrence of the word 'schedule' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'schedule')\ntap($prev_matched_text)"}
{"task": "Update the note content to say 'Call John at 5pm tomorrow'", "solution": "tap($note_content)\nset_text($note_content, 'Call John at 5pm tomorrow')\ntap($save_note)"}
{"task": "Search for 'meeting minutes' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting minutes')\ntap($search_close)"}
{"task": "Switch to the next item in the checklist or note", "solution": "tap($switch_to_next_item)"}
{"task": "Display the title of the current checklist", "solution": "print(get_text($item_title))"}
{"task": "Move to the next note entry", "solution": "tap($switch_to_next_item)"}
{"task": "Reveal the title of the active note", "solution": "print(get_text($item_title))"}
{"task": "Set the theme of the app to Dark", "solution": "\ntap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Check the current font size of the app", "solution": "get_text($current_font_size)"}
{"task": "Access the font size settings", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Tap the 'Open Note' button", "solution": "tap($open_note)"}
{"task": "Scroll through the list of note titles", "solution": "open_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    scroll($open_note_title_list, 'down')"}
{"task": "Open the note titled 'Shopping List'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list.match('Shopping List')\ntap(open_note_titles[0])"}
{"task": "Delete the current checklist by tapping the 'more options' button for checklists and then confirming the deletion.", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove completed items from the current checklist by first accessing 'more options' for checklists and then selecting 'Remove done items'.", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Show the word count of the current note", "solution": "tap($more_options_note)\nif not get_attributes($set_show_word_count)['checked']:\n    tap($set_show_word_count)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the primary color of the app to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\n# For demonstration, assume the 'red' color option has an attribute dict we can match. This needs to be replaced with the actual matching criteria for red.\nred_color_option = {'color': 'red'}\ntap($theme_color_types.match(red_color_option)[0])\ntap($save_set_colors)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the more options menu in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the note named 'Workout Routine'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnotes = note_titles.match('Workout Routine')\ntap(notes[0])"}
{"task": "Create a new note titled 'To-Do List' with tasks 'Laundry, Homework, Call Mom'", "solution": "tap($create_note)\nset_text($add_note_title, 'To-Do List')\ntap($text_note_type)\ntap($add_note_ok)\nset_text($note_content, 'Laundry, Homework, Call Mom')\ntap($save_note)"}
{"task": "Open the note called 'Book Recommendations'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnotes = note_titles.match('Book Recommendations')\ntap(notes[0])"}
{"task": "Create a new note with the title 'Birthday Party Checklist'", "solution": "tap($create_note)\nset_text($add_note_title, 'Birthday Party Checklist')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the note named 'Daily Journal'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnotes = note_titles.match('Daily Journal')\ntap(notes[0])"}
{"task": "Show the content of the first checklist item", "solution": "long_tap($checklist_item_list[0])"}
{"task": "Show the content of the second checklist item", "solution": "long_tap($checklist_item_list[1])"}
{"task": "Show the content of the third checklist item", "solution": "long_tap($checklist_item_list[2])"}
{"task": "Add a new checklist item titled 'Buy groceries'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)"}
{"task": "Add a new checklist item titled 'Finish homework'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Finish homework')\ntap($add_checklist_item_ok)"}
{"task": "Open more options for the current note in the Notes APP", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist in the Notes APP", "solution": "tap($more_options_checklist)"}
{"task": "Customize the widget colors in the Notes APP", "solution": "tap($settings); tap($set_widget_colors)"}
{"task": "Tap 'Save' button to save the customized app colors", "solution": "tap($save_set_colors)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the note titled 'Project Plan'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Plan')[0])"}
{"task": "Long tap to edit the note titled 'Meeting Notes'", "solution": "tap($open_note)\nlong_tap($open_note_title_list.match('Meeting Notes')[0])"}
{"task": "Open the note titled 'Daily Journal'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Daily Journal')[0])"}
{"task": "Open the note titled 'To-Do List'", "solution": "tap($open_note)\ntap($open_note_title_list.match('To-Do List')[0])"}
{"task": "Edit the note titled 'Vacation Plans'", "solution": "tap($open_note)\nlong_tap($open_note_title_list.match('Vacation Plans')[0])"}
{"task": "Export the note 'Shopping List' as a file", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('Shopping List')[0]\ntap(note)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Export the checklist 'Daily Tasks' as a file", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nchecklist = open_note_titles.match('Daily Tasks')[0]\ntap(checklist)\ntap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Print the note titled 'Meeting Minutes'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('Meeting Minutes')[0]\ntap(note)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Print the checklist 'Project Checklist'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nchecklist = open_note_titles.match('Project Checklist')[0]\ntap(checklist)\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Delete the note 'Old Recipes'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('Old Recipes')[0]\ntap(note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Check the current font size in the app", "solution": "tap($settings)\ntap($set_font_size)\nsize_elements = $font_size_types\nfor elem in size_elements:\n    if get_attributes(elem)['selected']:\n        current_size = get_text(elem)\n        break\nback()"}
{"task": "Open the more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Remove the done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the items in the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Go to the settings menu", "solution": "tap($more_options_note or $more_options_checklist)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_note or $more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the app", "solution": "tap($more_options_note or $more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Change the theme of the app to Dark red", "solution": "tap($more_options_note or $more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options for the current checklist", "solution": "\ntap($more_options_checklist)\n"}
{"task": "Open the settings of the app", "solution": "\ntap($more_options_note)\ntap($settings)\n"}
{"task": "Customize the colors of the app", "solution": "\ntap($more_options_note)\ntap($settings)\ntap($set_colors)\n"}
{"task": "Set the theme color of the app", "solution": "\ntap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\n"}
{"task": "Customize the widget colors in the Notes app", "solution": "\ntap($more_options_note)\ntap($settings)\ntap($set_widget_colors)\n"}
{"task": "Add a new checklist item titled 'Call mom'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call mom')\ntap($add_checklist_item_ok)"}
{"task": "Switch to the next item after viewing the second checklist item", "solution": "tap($checklist_item_list[1])\ntap($switch_to_next_item)"}
{"task": "Show the content of the checklist item after 'Finish homework'", "solution": "long_tap($checklist_item_list.match('Finish homework')[0])"}
{"task": "Add a new checklist item titled 'Renew car insurance'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Renew car insurance')\ntap($add_checklist_item_ok)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the note titled 'Workout Schedule'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nopen_note_titles.match('Workout Schedule')\ntap(open_note_titles[0])"}
{"task": "Open the note titled 'Books to Read'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nopen_note_titles.match('Books to Read')\ntap(open_note_titles[0])"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the items of the current checklist by Custom", "solution": "tap($sort_checklist_items)\ntap($custom_type)"}
{"task": "Confirm the sorting type of the current checklist", "solution": "tap($sort_checklist_items_ok)"}
{"task": "Show me the options for sorting the current checklist items", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)"}
{"task": "Open the sort options and sort the checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Enable setting to place cursor at the end of the note", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Disable setting to place cursor at the end of the note", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Save my current note", "solution": "tap($save_note)"}
{"task": "Search for the word 'important' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'important')"}
{"task": "Create a new note with the title 'Meeting Agenda'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Agenda')\ntap($add_note_ok)"}
{"task": "Create a checklist note with the title 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Add a new note titled 'Project Ideas' with the text note type", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Move the first checklist item to the top of the list", "solution": "long_tap($checklist_item_list[0])\ntap($move_selected_item_to_the_top)"}
{"task": "Move the last checklist item to the top of the list", "solution": "long_tap($checklist_item_list[len($checklist_item_list) - 1])\ntap($move_selected_item_to_the_top)"}
{"task": "Move the second checklist item to the bottom of the list", "solution": "long_tap($checklist_item_list[1])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Move the completed checklist item to the top of the list", "solution": "completed_items = $checklist_item_list.match({'checked': True})\nif len(completed_items) > 0:\n    long_tap(completed_items[0])\n    tap($move_selected_item_to_the_top)"}
{"task": "Move the pending checklist item to the bottom of the list", "solution": "pending_items = $checklist_item_list.match({'checked': False})\nif len(pending_items) > 0:\n    long_tap(pending_items[0])\n    tap($move_selected_item_to_the_buttom)"}
{"task": "Create a new note titled 'Recipe for Chocolate Cake'", "solution": "tap($create_note)\nset_text($add_note_title, 'Recipe for Chocolate Cake')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the note called 'Shopping List'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Shopping List')[0])"}
{"task": "Create a new note for 'Weekend Getaway Plans'", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Getaway Plans')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the note titled 'Study Schedule'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Study Schedule')[0])"}
{"task": "Create a new note with the title 'Home Maintenance Tasks'", "solution": "tap($create_note)\nset_text($add_note_title, 'Home Maintenance Tasks')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open more options for the current note in the Notes app", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the Notes app", "solution": "tap($settings)"}
{"task": "Open more options for the current checklist in the Notes app", "solution": "tap($more_options_checklist)"}
{"task": "Change the font size in the Notes app", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Display all checklist items", "solution": "tap($checklist_item_list)"}
{"task": "Delete the checklist 'Completed Tasks'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Completed Tasks':\n        tap(note_titles[i])\n        break\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the app settings from the note 'Journal Entry'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Journal Entry':\n        tap(note_titles[i])\n        break\ntap($more_options_note)\ntap($settings)"}
{"task": "Open the app settings from the checklist 'House Cleaning Schedule'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'House Cleaning Schedule':\n        tap(note_titles[i])\n        break\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Open the more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the app settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Set the text color in the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_text_color)"}
{"task": "Open settings in the app", "solution": "tap($settings)"}
{"task": "Enable setting to show keyboard on startup", "solution": "tap($settings)\nif not get_attributes($set_show_keyboard_on_startup)['checked']:\n    tap($set_show_keyboard_on_startup)\n"}
{"task": "Disable setting to show keyboard on startup", "solution": "tap($settings)\nif get_attributes($set_show_keyboard_on_startup)['checked']:\n    tap($set_show_keyboard_on_startup)\n"}
{"task": "Press more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Press more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings for the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings for the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Show the information about the app from the current note", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Show the information about the app from the current checklist", "solution": "tap($more_options_checklist)\ntap($about)"}
{"task": "Confirm the sort type of the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_ok)"}
{"task": "Open the note labeled 'Travel Plans'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Travel Plans')[0])"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($rename_note)\nset_text($rename_input, 'Meeting Notes')"}
{"task": "Confirm the new name of the current note", "solution": "tap($rename_ok)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the file of the current note", "solution": "tap($more_options_note)\ntap($open_file)"}
{"task": "Export the current note as a file", "solution": "tap($more_options_note)\ntap($export_as_file)"}
{"task": "Open the file of the current checklist", "solution": "tap($more_options_checklist)\ntap($open_file)"}
{"task": "Export the current checklist as a file", "solution": "tap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Set the background color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)"}
{"task": "Set the primary color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)"}
{"task": "Open the more options menu in the current note.", "solution": "tap($more_options_note)"}
{"task": "Delete the current note.", "solution": "tap($delete_note)"}
{"task": "Confirm the deletion of the current note.", "solution": "tap($delete_note_ok)"}
{"task": "Move the third checklist item to the bottom of the list", "solution": "long_tap($checklist_item_list[2]);\ntap($move_selected_item_to_the_buttom);"}
{"task": "Move the fourth checklist item to the top of the list", "solution": "long_tap($checklist_item_list[3]);\ntap($move_selected_item_to_the_top);"}
{"task": "Move the high priority checklist item to the top of the list", "solution": "idx = None\nfor i in range(len($checklist_item_list)):\n    if \"high priority\" in get_text($checklist_item_list[i]):\n        idx = i\n        break\nif idx is not None:\n    long_tap($checklist_item_list[idx]);\n    tap($move_selected_item_to_the_top);"}
{"task": "Move the low priority checklist item to the bottom of the list", "solution": "idx = None\nfor i in range(len($checklist_item_list)):\n    if \"low priority\" in get_text($checklist_item_list[i]):\n        idx = i\n        break\nif idx is not None:\n    long_tap($checklist_item_list[idx]);\n    tap($move_selected_item_to_the_buttom);"}
{"task": "Move the urgent checklist item to the top of the list", "solution": "idx = None\nfor i in range(len($checklist_item_list)):\n    if \"urgent\" in get_text($checklist_item_list[i]):\n        idx = i\n        break\nif idx is not None:\n    long_tap($checklist_item_list[idx]);\n    tap($move_selected_item_to_the_top);"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the items of the current checklist by date", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Exit the settings page", "solution": "tap($exit_settings)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app from the more options of a note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings of the Notes APP", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Set the text color to blue", "solution": "tap($set_colors)\ntap($set_text_color)\nset_text($note_content, 'blue')\ntap($save_set_colors)\nback()"}
{"task": "Set the background color to light yellow", "solution": "tap($set_colors)\ntap($set_background_color)\nset_text($note_content, 'light yellow')\ntap($save_set_colors)\nback()"}
{"task": "Set the primary color to green", "solution": "tap($set_colors)\ntap($set_primary_color)\nset_text($note_content, 'green')\ntap($save_set_colors)\nback()"}
{"task": "Set the app icon color to red", "solution": "tap($set_colors)\ntap($set_app_icon_color)\nset_text($note_content, 'red')\ntap($save_set_colors)\nback()"}
{"task": "Check off the first checklist item", "solution": "tap($checklist_item_list[0])"}
{"task": "Uncheck the third checklist item", "solution": "if get_attributes($checklist_item_list[2])['checked']:\n    tap($checklist_item_list[2])"}
{"task": "Add a new checklist item 'Buy groceries'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)"}
{"task": "Remove the fifth checklist item", "solution": "long_tap($checklist_item_list[4])\ntap($delete_selected_checklist_item)"}
{"task": "Edit the second checklist item to say 'Finish project report'", "solution": "long_tap($checklist_item_list[1])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Finish project report')\ntap($rename_ok)"}
{"task": "Rename the current checklist to 'Grocery List'", "solution": "tap($more_options_checklist.match('rename note'))\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open settings from the more options in the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app by opening settings from the more options in the current note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the app to dark red by opening settings from more options in the current note and then customizing colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Increase the font size to 250%", "solution": "tap($current_font_size)\ntap($font_size_250%)"}
{"task": "Increase the font size to 300%", "solution": "tap($current_font_size)\ntap($font_size_300%)"}
{"task": "View the current font size of the app", "solution": "tap($current_font_size)"}
{"task": "Open the settings of the app from the more options of a checklist", "solution": "tap($more_options_checklist)\ntap($more_options_checklist.match({\"text\": \"Settings\"})[0])"}
{"task": "Tap on more options to view the current checklist options", "solution": "tap($more_options_checklist)"}
{"task": "Use the switch item scrollbar to move to the next note", "solution": "scroll($switch_item, \"down\")"}
{"task": "Use the switch item scrollbar to move to the previous checklist", "solution": "scroll($switch_item, \"up\")"}
{"task": "Tap on more options to customize the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open settings from note's more options", "solution": "tap($more_options_note);\ntap($settings)"}
{"task": "Enable use monospaced font in settings", "solution": "tap($more_options_note);\ntap($settings);\ntap($set_use_monospaced_font)"}
{"task": "Enable Use Incognito mode of keyboards in settings", "solution": "tap($more_options_note);\ntap($settings);\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Enable 'Show a note picker on startup' in settings", "solution": "tap($more_options_checklist)\ntap($settings)\nattrs = get_attributes($set_show_a_note_picker_on_startup)\nif not attrs['checked']:\n    tap($set_show_a_note_picker_on_startup)\nback()"}
{"task": "Disable 'Show a note picker on startup' in settings", "solution": "tap($more_options_checklist)\ntap($settings)\nattrs = get_attributes($set_show_a_note_picker_on_startup)\nif attrs['checked']:\n    tap($set_show_a_note_picker_on_startup)\nback()"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Enable 'Autosave notes' in settings", "solution": "tap($more_options_checklist)\ntap($settings)\nattrs = get_attributes($set_autosave_notes)\nif not attrs['checked']:\n    tap($set_autosave_notes)\nback()"}
{"task": "Disable 'Autosave notes' in settings", "solution": "tap($more_options_checklist)\ntap($settings)\nattrs = get_attributes($set_autosave_notes)\nif attrs['checked']:\n    tap($set_autosave_notes)\nback()"}
{"task": "Open the more options menu in the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Remove all done items from the current checklist.", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the checklist items by title.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the checklist items by date created.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the checklist items by custom order.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Mark all checklist items as completed", "solution": "checklist_items = $checklist_item_list\nfor item in checklist_items:\n    attributes = get_attributes(item)\n    if not attributes['checked']:\n        tap(item)"}
{"task": "Show only unchecked checklist items", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('Remove done items'))"}
{"task": "Move the fourth checklist item to the second position", "solution": "long_tap($checklist_item_list[3])\ntap($move_selected_item_to_the_top)\nlong_tap($checklist_item_list[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Sort checklist items alphabetically", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('Sort by'))\ntap($sort_checklist_items_types.match('Title'))\ntap($sort_checklist_items_ok)"}
{"task": "Open the Notes app and create a new note titled 'Meeting Notes'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Customize the widget colors in the Notes app", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open settings from the more options of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings from the more options of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Change the font size to 250% via the current font size option", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_250%)\nback()"}
{"task": "Change the font size to 300% via the font size option", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\nback()"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set the theme color of the app to white by opening settings from more options in the current note and then customizing colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings from the more options in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize the colors of the app by opening settings from the more options in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the app to dark red by opening settings from more options in the current checklist and then customizing colors", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Open settings from checklist's more options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Tap on the button 'Customize colors'", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Open the settings by tapping on the 'Settings' button in the more options of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Set the app icon color to blue by tapping on the 'App icon color' button after opening 'Customize colors'", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\ntap($theme_color_custom.match('blue')[0])"}
{"task": "Change the theme to dark mode by tapping on 'Theme' after opening 'Customize colors' and selecting 'dark' from the theme color types", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Search for the text 'meeting notes' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')"}
{"task": "Find the next occurrence of the word 'deadline' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)"}
{"task": "Close the search box after searching for the text 'project update'", "solution": "tap($search_within_note)\nset_text($search_text, 'project update')\ntap($close_search_box)"}
{"task": "Search for the keyword 'invoice' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'invoice')"}
{"task": "Navigate to the next matching text after searching for 'budget' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)"}
{"task": "Set the theme color of the app to white by opening settings from more options in the current checklist and then customizing colors", "solution": "tap($more_options_checklist)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Set the font size of the Notes APP to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($exit_settings)"}
{"task": "Open the more options menu of the current note", "solution": "tap($more_options_note)"}
{"task": "Access the Settings of the Notes APP", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Set the font size of the Notes APP to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($exit_settings)"}
{"task": "Use the switch item scrollbar to switch to the next checklist", "solution": "scroll($switch_item, 'down')"}
{"task": "Tap on more options to share the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Use the switch item scrollbar to move to the previous note", "solution": "scroll($switch_item, 'up')"}
{"task": "Tap on more options to delete the current checklist", "solution": "tap($more_options_checklist)\ntap($delete_note)"}
{"task": "Enable line wrap in the settings after opening more options of the note", "solution": "tap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_line_wrap)"}
{"task": "Go to settings from the note options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Go to settings from the checklist options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize the app colors from settings", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the background color after customizing colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)"}
{"task": "Set the text color after customizing colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)"}
{"task": "Open the Notes app and add a new note titled 'Shopping List'.", "solution": "tap($open_note)\ntap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($add_note_ok)"}
{"task": "Open the Notes app and rename the current 'Work Notes' to 'Project Ideas'.", "solution": "get_text($item_title)\nif get_text($item_title) == 'Work Notes':\n    tap($more_options_note)\n    tap($rename_note)\n    set_text($rename_input, 'Project Ideas')\n    tap($rename_ok)"}
{"task": "Create a new note with the title 'Vacation Plans'.", "solution": "tap($open_note)\ntap($create_note)\nset_text($add_note_title, 'Vacation Plans')\ntap($add_note_ok)"}
{"task": "In the Notes app, rename the note 'Todo List' to 'My Tasks'.", "solution": "open_note_titles = $open_note_title_list\nfor idx in range(len(open_note_titles)):\n    if get_text(open_note_titles[idx]) == 'Todo List':\n        tap(open_note_titles[idx])\n        tap($more_options_note)\n        tap($rename_note)\n        set_text($rename_input, 'My Tasks')\n        tap($rename_ok)\n        break"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Set the font size of the Notes app to 'Large'", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Show the current font size of the Notes app", "solution": "tap($settings)\ntap($current_font_size)\nsize_options = $font_size_types\nfor option in size_options:\n    if get_attributes(option)[\"selected\"]:\n        print(get_text(option))\n        break"}
{"task": "Enable the word count display in the Notes app", "solution": "tap($settings)\nif not get_attributes($set_show_word_count)[\"checked\"]:\n    tap($set_show_word_count)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings menu of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the theme color to custom", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Go to the app settings", "solution": "tap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the theme color to 'Black & White'", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Set the theme color to 'Custom'", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Change the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Open the more options menu of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Check the current font size of the Notes APP", "solution": "tap($settings)\ntap($set_font_size)\n# Now we need to iterate over the font size checkboxes to see which one is selected\nfont_sizes = [\n    $font_size_50%, $font_size_60%, $font_size_75%, $font_size_90%, $font_size_100%, \n    $font_size_125%, $font_size_150%, $font_size_175%, $font_size_200%, $font_size_250%, \n    $font_size_300% \n]\nfor font_size in font_sizes:\n    if get_attributes(font_size)[\"selected\"]:\n        current_font_size = get_text(font_size)\nback()\nprint(current_font_size)\n"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Open more options of the current note by tapping on the 'more options' button", "solution": "tap($more_options_note)"}
{"task": "Open more options of the current checklist by tapping on the 'more options' button in the main screen", "solution": "tap($more_options_checklist)"}
{"task": "Change the theme to light mode by tapping on 'Theme' after opening 'Customize colors' and selecting 'light' from the theme color types", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Customize app colors by tapping 'Customize colors' in the settings", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)"}
{"task": "Tap on the 'Theme' button to change theme colors after tapping on 'Customize colors' and select 'custom' from the theme color types", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Search for the phrase 'client feedback' and then find the next occurrence in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'client feedback')\ntap($search_text)\ntap($next_matchhed_text)"}
{"task": "Close the search box after looking up 'travel plans' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'travel plans')\ntap($search_text)\ntap($close_search_box)"}
{"task": "Search for 'important dates' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'important dates')\ntap($search_text)"}
{"task": "Find the next match for 'action items' after performing a search within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'action items')\ntap($search_text)\ntap($next_matchhed_text)"}
{"task": "Close the search box after searching for 'conference details' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'conference details')\ntap($search_text)\ntap($close_search_box)"}
{"task": "Enable line wrap in the settings after opening more options of the checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Set the alignment in the settings after opening more options of the note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_alignment)"}
{"task": "Set the alignment in the settings after opening more options of the checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_alignment)"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open settings from the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Scroll down in the settings page", "solution": "scroll($scroll_settings_page, 'down')"}
{"task": "Scroll up in the settings page", "solution": "scroll($scroll_settings_page, 'up')"}
{"task": "Customize the colors of the app", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Search for the keyword 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Search for the keyword 'shopping list' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'shopping list')"}
{"task": "Customize the colors in the Notes APP", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_text_color)\ntap($theme_color_custom)\ntap($set_background_color)\ntap($theme_color_custom)\ntap($set_primary_color)\ntap($theme_color_custom)\ntap($set_app_icon_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Change text color of the Notes APP to purple", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'purple')\ntap($save_set_colors)"}
{"task": "Change background color of the Notes APP to grey", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_background_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'grey')\ntap($save_set_colors)"}
{"task": "Change primary color of the Notes APP to orange", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'orange')\ntap($save_set_colors)"}
{"task": "Change the app icon color of the Notes APP to navy blue", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_app_icon_color)\ntap($theme_color_custom)\nset_text($theme_color_custom, 'navy blue')\ntap($save_set_colors)"}
{"task": "Adjust the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($sort_checklist_items_ok)"}
{"task": "Show the current font size", "solution": "tap($settings)\ntap($current_font_size)\nback()"}
{"task": "Tap on the 'Search' button", "solution": "tap($search_within_note)"}
{"task": "Input the text 'meeting notes' in the search field", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')"}
{"task": "Search for the term 'project deadline' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'project deadline')"}
{"task": "Set the app icon color to red after navigating to 'Customize colors' in the settings and tapping on 'App icon color'", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_app_icon_color)\n# select red color, assuming the app provides a specific red color option, you might need to scroll or tap further to find red color"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings in the app", "solution": "tap($settings)"}
{"task": "Set the font size to 60%", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Open the font size settings", "solution": "tap($settings); tap($set_font_size);"}
{"task": "Check the current font size of the app", "solution": "tap($settings); tap($current_font_size);"}
{"task": "Lock the current note", "solution": "tap($more_options_note); tap($lock_note); tap($lock_note_ok);"}
{"task": "Open the file of the current checklist", "solution": "tap($more_options_checklist); tap($open_file);"}
{"task": "Export the current note as a file", "solution": "tap($more_options_note); tap($export_as_file);"}
{"task": "Export my notes", "solution": "tap($settings)\ntap($export_notes)"}
{"task": "Open more options for my current note", "solution": "tap($more_options_note)"}
{"task": "Open the app settings", "solution": "tap($settings)"}
{"task": "Open more options for my current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Import notes", "solution": "tap($settings)\ntap($import_notes)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Lock the current checklist", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Delete the current checklist", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Add a new checklist item with the text 'Buy milk'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy milk')\ntap($add_checklist_item_ok)"}
{"task": "Open settings from the current checklist", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'settings'})[0])"}
{"task": "Change the font size to 90% in the app settings", "solution": "tap($set_font_size)\ntap($font_size_90%)\ntap($sort_checklist_items_ok)"}
{"task": "Change the font size to 100% in the app settings", "solution": "tap($set_font_size)\ntap($font_size_100%)\ntap($sort_checklist_items_ok)"}
{"task": "Show the current font size in the app settings", "solution": "tap($current_font_size)\nsize_options = $font_size_types\nfor i in range(len(size_options)):\n    if get_attributes(size_options[i])['selected']:\n        print(get_text(size_options[i]))"}
{"task": "Switch to the previous note", "solution": "tap($switch_to_prev_item)"}
{"task": "Show the current item title", "solution": "print(get_text($item_title))"}
{"task": "Switch to the next item", "solution": "tap($switch_to_next_item)"}
{"task": "List all checklist items", "solution": "checklist_items = $checklist_item_list\nfor item in checklist_items:\n    print(get_text(item))"}
{"task": "Check the content of the second checklist item", "solution": "tap($checklist_item_list[1])\nprint(get_text($checklist_item_list[1]))"}
{"task": "Mark the third checklist item as completed", "solution": "tap($checklist_item_list[2])"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Search for the word 'recipe' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'recipe')"}
{"task": "Search for the keyword 'travel itinerary' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'travel itinerary')"}
{"task": "Open more options of the note titled 'Project Plan'", "solution": "tap($open_note)\nfor note in range(len($open_note_title_list)):\n    if get_text($open_note_title_list[note]) == 'Project Plan':\n        tap($open_note_title_list[note])\n        tap($more_options_note)\n        break"}
{"task": "Search for the phrase 'birthday reminders' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'birthday reminders')"}
{"task": "Print the current note", "solution": "tap($more_options_note)\ntap($more_options_note_buttons.match({'text': 'Print'})[0])"}
{"task": "Lock the current checklist", "solution": "tap($more_options_checklist)\ntap($more_options_checklist_buttons.match({'text': 'Lock note'})[0])\ntap($lock_note_ok)"}
{"task": "Open the file of the current note", "solution": "tap($more_options_note)\ntap($more_options_note_buttons.match({'text': 'Open file'})[0])"}
{"task": "Export the current checklist as a file", "solution": "tap($more_options_checklist)\ntap($more_options_checklist_buttons.match({'text': 'Export as file'})[0])"}
{"task": "Print the current checklist", "solution": "tap($more_options_checklist)\ntap($more_options_checklist_buttons.match({'text': 'Print'})[0])"}
{"task": "Find the previous instance of the word 'budget' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($prev_matched_text)"}
{"task": "Move the checklist item 'Buy groceries' to the bottom", "solution": "items = $checklist_item_list\nitem_to_move = items.match('Buy groceries')[0]\nlong_tap(item_to_move)\ntap($move_selected_item_to_the_buttom)"}
{"task": "Rename the checklist item 'Walk the dog' to 'Evening walk with dog'", "solution": "items = $checklist_item_list\nitem_to_rename = items.match('Walk the dog')[0]\nlong_tap(item_to_rename)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Evening walk with dog')\ntap($rename_ok)"}
{"task": "Move the checklist item 'Finish project report' to the bottom", "solution": "items = $checklist_item_list\nitem_to_move = items.match('Finish project report')[0]\nlong_tap(item_to_move)\ntap($move_selected_item_to_the_buttom)"}
{"task": "Rename the checklist item 'Call mom' to 'Call family']", "solution": "items = $checklist_item_list\nitem_to_rename = items.match('Call mom')[0]\nlong_tap(item_to_rename)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Call family')\ntap($rename_ok)"}
{"task": "Switch to the next checklist item", "solution": "tap($switch_to_next_item)"}
{"task": "Switch to the previous note", "solution": "tap($switch_to_prev_item)"}
{"task": "Read the current item title", "solution": "get_text($item_title)"}
{"task": "Open the note titled 'Meeting Agenda'", "solution": "\n\ntap($open_note)\nopen_note_title_items = $open_note_title_list\nmatching_titles = open_note_title_items.match('Meeting Agenda')\nif len(matching_titles) > 0:\n    tap(matching_titles[0])\n"}
{"task": "Save the current changes to the note", "solution": "tap($save_note)"}
{"task": "Find and uncheck the fourth checklist item", "solution": "long_tap($checklist_item_list[3])\ntap($checklist_item_list[3])"}
{"task": "Scroll through the entire list of checklist items", "solution": "scroll($checklist_item_list, 'down')"}
{"task": "Move to the next item and show its title", "solution": "tap($switch_to_next_item)\nprint(get_text($item_title))"}
{"task": "Switch back to the previous item and display its title", "solution": "tap($switch_to_prev_item)\nprint(get_text($item_title))"}
{"task": "Verify the state of the first checklist item", "solution": "attributes = get_attributes($checklist_item_list[0])\nprint(attributes['checked'])"}
{"task": "Open the more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the checklist items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the checklist items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the sort options for checklist items", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)"}
{"task": "Sort the checklist items by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Add a new checklist item with the text 'Complete homework'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Complete homework')\ntap($add_checklist_item_ok)"}
{"task": "Check the checklist item with the text 'Buy milk'", "solution": "long_tap($checklist_item_list.match({'text': 'Buy milk'})[0])\ntap($checklist_item_list.match({'text': 'Buy milk'})[0])"}
{"task": "Uncheck the checklist item with the text 'Complete homework'", "solution": "long_tap($checklist_item_list.match({'text': 'Complete homework'})[0])\ntap($checklist_item_list.match({'text': 'Complete homework'})[0])"}
{"task": "Delete the checklist item with the text 'Buy milk'", "solution": "long_tap($checklist_item_list.match({'text': 'Buy milk'})[0])\ntap($delete_selected_checklist_item)"}
{"task": "Mark all checklist items as checked", "solution": "for idx in range(len($checklist_item_list)):\n    if not get_attributes($checklist_item_list[idx])['checked']:\n        tap($checklist_item_list[idx])"}
{"task": "Set the font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('75%')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Open the note titled 'Grocery List'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])"}
{"task": "Delete the selected checklist item 'Buy Milk'", "solution": "long_tap($checklist_item_list.match('Buy Milk')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Add a new item 'Call Doctor' to the checklist", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call Doctor')\ntap($add_checklist_item_ok)"}
{"task": "Remove the checklist item 'Read Book'", "solution": "long_tap($checklist_item_list.match('Read Book')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Enable display save success messages", "solution": "tap($settings)\nif not get_attributes($set_display_save_success_messages)[\"selected\"]: tap($set_display_save_success_messages)\nback()"}
{"task": "Disable display save success messages", "solution": "tap($settings)\nif get_attributes($set_display_save_success_messages)[\"selected\"]: tap($set_display_save_success_messages)\nback()"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open app settings", "solution": "tap($settings)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Go to the app settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Change the font size to 50%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Change the font size to 60%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Move the selected item 'Buy milk' to the bottom of the checklist", "solution": "long_tap($checklist_item_list.match('Buy milk')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Rename the selected checklist item 'Buy eggs' to 'Buy organic eggs'", "solution": "long_tap($checklist_item_list.match('Buy eggs')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy organic eggs')\ntap($rename_ok)"}
{"task": "Delete the selected checklist item 'Call the doctor'", "solution": "long_tap($checklist_item_list.match('Call the doctor')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Open the note titled 'Grocery List'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List')[0])"}
{"task": "Open the note titled 'Meeting Notes'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])"}
{"task": "Move the checklist item 'Read a book' to the bottom", "solution": "tap($checklist_item_list.match('Read a book'))\nlong_tap($checklist_item_list.match('Read a book'))\ntap($move_selected_item_to_the_buttom)"}
{"task": "Create a shortcut for the note titled 'Meeting Agenda'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Agenda'))\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Create a shortcut for the checklist named 'Grocery List'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Grocery List'))\ntap($more_options_checklist)\ntap($create_shortcut)"}
{"task": "Lock the note titled 'Personal Journal'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Personal Journal'))\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Lock the checklist named 'Weekend Tasks'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Weekend Tasks'))\ntap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Uncheck all items in the checklist", "solution": "for i in range(len($checklist_item_list)):\n    tap($checklist_item_list[i]) if get_attributes($checklist_item_list[i])['checked'] else None"}
{"task": "Scroll through the checklist to view all items", "solution": "scroll($checklist_item_list, 'down')"}
{"task": "Edit the checklist item 'Complete homework' to 'Submit homework'", "solution": "long_tap($checklist_item_list.match('Complete homework'))\nset_text($rename_selected_checklist_item, 'Submit homework')\ntap($rename_ok)"}
{"task": "Add a new checklist item with the text 'Call mom' at the top of the list", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Call mom')\ntap($add_to_the_top)\ntap($add_checklist_item_ok)"}
{"task": "Move the checklist item 'Call mom' to the bottom of the list", "solution": "long_tap($checklist_item_list.match('Call mom'))\ntap($move_selected_item_to_the_buttom)"}
{"task": "Navigate to the note titled 'Workout Plan'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nnote_titles = notes.match('Workout Plan')\ntap(note_titles[0])"}
{"task": "Check the checklist item 'Finish Report'", "solution": "tap($checklist_item_list.match('Finish Report')[0])"}
{"task": "Uncheck the checklist item 'Walk the Dog'", "solution": "tap($checklist_item_list.match('Walk the Dog')[0])"}
{"task": "Open the note titled 'Meeting Agenda'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nnote_titles = notes.match('Meeting Agenda')\ntap(note_titles[0])"}
{"task": "Delete the checklist item 'Buy Groceries'", "solution": "long_tap($checklist_item_list.match('Buy Groceries')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Close the search box in the current note", "solution": "tap($close_search_box)"}
{"task": "Create a new note titled 'Grocery List'", "solution": "\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)\n"}
{"task": "Open the note titled 'Project Ideas'", "solution": "\ntap($open_note)\nopen_note_title_list = $open_note_title_list\nnote_title_item = open_note_title_list.match('Project Ideas')[0]\ntap(note_title_item)\n"}
{"task": "Create a new note titled 'Travel Itinerary'", "solution": "\ntap($create_note)\nset_text($add_note_title, 'Travel Itinerary')\ntap($text_note_type)\ntap($add_note_ok)\n"}
{"task": "Search for the word 'dinner' in the current note and go to the next occurrence", "solution": "\ntap($search_within_note)\nset_text($search_text, 'dinner')\ntap($next_matchhed_text)\n"}
{"task": "Open the note titled 'Shopping List' and add oranges to the list", "solution": "tap($open_note)\nopen_note_elements = $open_note_title_list\nnote_elements = open_note_elements.match('Shopping List')\nif len(note_elements) > 0:\n    tap(note_elements[0])\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'oranges')\n    tap($add_checklist_item_ok)"}
{"task": "Open the note titled 'Study Plan' and summarize the contents", "solution": "tap($open_note)\nopen_note_elements = $open_note_title_list\nnote_elements = open_note_elements.match('Study Plan')\nif len(note_elements) > 0:\n    tap(note_elements[0])\n    note_content_text = get_text($note_content)\n    print(f'Contents: {note_content_text}')"}
{"task": "Locate and open the note titled 'Holiday Plans'", "solution": "tap($open_note)\nopen_note_elements = $open_note_title_list\nnote_elements = open_note_elements.match('Holiday Plans')\nif len(note_elements) > 0:\n    tap(note_elements[0])"}
{"task": "Review and save the note titled 'Workout Schedule'", "solution": "tap($open_note)\nopen_note_elements = $open_note_title_list\nnote_elements = open_note_elements.match('Workout Schedule')\nif len(note_elements) > 0:\n    tap(note_elements[0])\n    tap($save_note)"}
{"task": "Access the note 'To-Do List' and add a task to call mom", "solution": "tap($open_note)\nopen_note_elements = $open_note_title_list\nnote_elements = open_note_elements.match('To-Do List')\nif len(note_elements) > 0:\n    tap(note_elements[0])\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'call mom')\n    tap($add_checklist_item_ok)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Rename the current checklist item to 'Groceries'", "solution": "long_tap($checklist_item)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Groceries')\ntap($rename_ok)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Lock the current checklist item", "solution": "long_tap($checklist_item)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current checklist item", "solution": "long_tap($checklist_item)\ntap($delete_selected_checklist_item)"}
{"task": "Delete the checklist item titled 'Buy groceries'", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Show me the list of all checklist items", "solution": "items = $checklist_item_list\nfor i in range(len(items)):\n    print(get_text(items[i]))"}
{"task": "Open the note titled 'Meeting Notes'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])"}
{"task": "Save the current note", "solution": "tap($save_note)"}
{"task": "Open the note with the title 'Vacation Plans'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Vacation Plans')[0])"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Set the font size to 50%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '50%'})[0])"}
{"task": "Set the font size to 60%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '60%'})[0])"}
{"task": "Set the font size to 75%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '75%'})[0])"}
{"task": "Rename the currently open note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Create a shortcut for the current note titled 'Work'", "solution": "notes = $open_note_title_list.match('Work')\nif notes:\n    tap(notes[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "View more options for the current note", "solution": "tap($more_options_note)"}
{"task": "View more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Confirm the new note creation", "solution": "tap($add_note_ok)"}
{"task": "Import notes to the app", "solution": "tap($settings)\ntap($import_notes)"}
{"task": "Open the settings of the Notes app", "solution": "tap($settings)"}
{"task": "Enable automatic backups in the settings", "solution": "tap($settings)\nif not get_attributes($set_enable_automatic_backups)['checked']:\n    tap($set_enable_automatic_backups)"}
{"task": "Access the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Complete the checklist item 'Respond to Emails'", "solution": "long_tap($checklist_item_list.match({'selected': false})[0])\nif 'Respond to Emails' in get_text($checklist_item_list.match({'selected': false})[0]):\n    tap($checklist_item_list.match({'selected': false})[0])"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('Delete note')[0])\ntap($delete_note_ok)"}
{"task": "Open more options of the note named 'Groceries'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Groceries')[0])\ntap($more_options_note)"}
{"task": "Open more options of the checklist titled 'Weekend Trip'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Weekend Trip')[0])\ntap($more_options_checklist)"}
{"task": "Go to the app settings", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('Settings')[0])"}
{"task": "Show the current font size", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_font = get_attributes($font_size_types.match({'selected': True}))[0]['value']\nprint(current_font)"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the 'Settings' menu in the Notes app", "solution": "tap($settings)"}
{"task": "Change the background color of the Notes app to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($theme_color_types.match('Custom'), 'blue')\ntap($save_set_colors)"}
{"task": "Set the theme color of the Notes app to 'dark_red'", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Show me the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Switch to the next checklist", "solution": "tap($switch_to_next_item)"}
{"task": "Switch to the previous note", "solution": "tap($switch_to_prev_item)"}
{"task": "What is the title of the current item?", "solution": "get_text($item_title)"}
{"task": "Navigate to the previous checklist", "solution": "while True:\n    tap($switch_to_prev_item)\n    attributes = get_attributes($switch_to_prev_item)\n    if attributes['selected']:\n        break"}
{"task": "Delete the checklist item titled 'Workout at 5 PM'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Workout at 5 PM':\n        long_tap(note_titles[i])\n        tap($delete_selected_checklist_item)\n        break"}
{"task": "Search for 'meeting notes' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')"}
{"task": "Close the search box in the current note", "solution": "tap($close_search_box)"}
{"task": "Add a new note with the title 'Groceries List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Groceries List')\ntap($add_note_ok)"}
{"task": "Create a new text note titled 'Daily Journal'", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($text_note_type) if not get_attributes($text_note_type)['selected'] else None\ntap($add_note_ok)"}
{"task": "Tap the 'more options' button for the current note", "solution": "tap($more_options_note)"}
{"task": "Edit the content of the current note to add 'Meeting agenda for tomorrow'", "solution": "set_text($note_content, 'Meeting agenda for tomorrow')"}
{"task": "Search within the current note for the text 'deadline'", "solution": "\ntap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Scroll to the previous matching text for '2023 Q4 goals' within the current note", "solution": "\ntap($search_within_note)\nset_text($search_text, '2023 Q4 goals')\ntap($prev_matched_text)"}
{"task": "Tap the 'more options' button", "solution": "tap($more_options_note)"}
{"task": "Customize the primary color of the Notes app to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\n# Assuming 'green' is an option in theme_color_types\nselected_color = $theme_color_types.match('green')[0]\ntap(selected_color)\ntap($save_set_colors)\nback()"}
{"task": "Set the app icon color to black", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\n# Assuming 'black' is an option in theme_color_types\nselected_color = $theme_color_types.match('black')[0]\ntap(selected_color)\ntap($save_set_colors)\nback()"}
{"task": "Display more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Change the background color of the Notes app after opening the 'Settings' menu", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\n# Assuming we select a color after opening the window\ntap($save_set_colors)\nback()"}
{"task": "Enable monospaced font in the settings", "solution": "tap($settings)\ntap($set_use_monospaced_font)"}
{"task": "Turn on Incognito mode of keyboards in the settings", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Enable line wrap in the settings", "solution": "tap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Change the alignment settings in the settings", "solution": "tap($settings)\ntap($set_alignment)"}
{"task": "Access more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the items in the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by custom", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Print the grocery list note", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nopen_note_title_list_grocery = open_note_title_list.match('Grocery')\ntap(open_note_title_list_grocery[0])\ntap($more_options_note)\ntap($print_note)"}
{"task": "Navigate to the next note", "solution": "tap($switch_to_next_item)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Tell me the title of the current item shown", "solution": "get_text($item_title)"}
{"task": "Scroll to the next item", "solution": "scroll($switch_item, 'down')"}
{"task": "Scroll to the previous item", "solution": "scroll($switch_item, 'up')"}
{"task": "Open the 'more options' in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the items in the current checklist by date created", "solution": "\n# Open more options in the current checklist\ntap($more_options_checklist)\n# Tap on 'Sort by' button\ntap($sort_checklist_items)\n# Select 'Date created' as the sort type\ntap($date_created_type)\n# Confirm the sort type\n tap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by custom", "solution": "\n# Open more options in the current checklist\ntap($more_options_checklist)\n# Tap on 'Sort by' button\ntap($sort_checklist_items)\n# Select 'Custom' as the sort type\ntap($custom_type)\n# Confirm the sort type\ntap($sort_checklist_items_ok)"}
{"task": "Tap on 'more options' of the current note", "solution": "tap($more_options_note)"}
{"task": "Tap on 'Settings' from the 'more options' of the current note", "solution": "\n# Tap on 'more options' of the current note\ntap($more_options_note)\n# Tap on 'Settings' from the 'more options' of the current note\ntap($settings)"}
{"task": "Access more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Switch to the previous item", "solution": "tap($switch_to_prev_item)"}
{"task": "Switch to the next item", "solution": "tap($switch_to_next_item)"}
{"task": "Show the title of the current item", "solution": "get_text($item_title)"}
{"task": "Sort the current checklist by alphabetical order and confirm the selection by pressing OK", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open a note", "solution": "tap($open_note)"}
{"task": "Add a new checklist note with the title 'Project Tasks'", "solution": "\ntap($create_note)\nset_text($add_note_title, 'Project Tasks')\ntap($checklist_type)\ntap($add_note_ok)\n"}
{"task": "Create a new note entitled 'Grocery List' and type 'Milk, Eggs, Bread' then save it", "solution": "\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)\ntap($note_content)\nset_text($note_content, 'Milk, Eggs, Bread')\ntap($save_note)\n"}
{"task": "Open the note titled 'Meeting Notes'", "solution": "\ntap($open_note)\nopen_note_title_elements = $open_note_title_list\nfor idx in range(len(open_note_title_elements)):\n    if get_text(open_note_title_elements[idx]) == 'Meeting Notes':\n        tap(open_note_title_elements[idx])\n        break\n"}
{"task": "Scroll to the previous item in the checklist", "solution": "tap($switch_to_prev_item)"}
{"task": "Change the theme to 'light' after setting colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Customize the app's colors after opening the 'Settings' menu", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Search for the word 'shopping' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'shopping')"}
{"task": "Find the previous occurrence of the word 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($prev_matched_text)"}
{"task": "Find the next occurrence of the word 'appointment' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'appointment')\ntap($next_matchhed_text)"}
{"task": "Delete the 'Meeting Notes' note", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nmeeting_note = open_note_titles.match('Meeting Notes')[0]\ntap(meeting_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the settings of the Notes APP", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Show the information of the Notes APP", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Rename the checklist item 'Buy Groceries' to 'Purchase Groceries'", "solution": "checklist_items = $checklist_item_list\nitem_to_rename = checklist_items.match('Buy Groceries')[0]\nlong_tap(item_to_rename)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase Groceries')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Finish Homework'", "solution": "checklist_items = $checklist_item_list\nitem_to_delete = checklist_items.match('Finish Homework')[0]\nlong_tap(item_to_delete)\ntap($delete_selected_checklist_item)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Exit the settings page of the Notes APP", "solution": "tap($exit_settings)"}
{"task": "Open the settings menu from the more options of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Scroll down the settings page of the Notes APP", "solution": "scroll($scroll_settings_page, 'down')"}
{"task": "Customize the colors of the Notes APP from the settings menu", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Add a new paragraph stating 'Project update: All tasks on track'", "solution": "tap($create_note)\nset_text($add_note_title, 'New Paragraph')\ntap($add_note_ok)\nset_text($note_content, 'Project update: All tasks on track')\ntap($save_note)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the app settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Change the font size to 250%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Open settings from note options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open settings from checklist options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize colors from note options", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Customize colors from checklist options", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Set theme to light mode from note options", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Tap on 'Customize colors' in the 'Settings' menu", "solution": "tap($set_colors)"}
{"task": "Tap on 'Theme' to set the theme color", "solution": "tap($set_theme_color)"}
{"task": "Choose 'Auto light / dark' theme color", "solution": "tap($theme_color_auto_light_dark)"}
{"task": "Choose 'light' theme color", "solution": "tap($theme_color_light)"}
{"task": "Choose 'dark' theme color", "solution": "tap($theme_color_dark)"}
{"task": "Open the settings of the Notes app", "solution": "tap($settings)"}
{"task": "Set the font size to 175%", "solution": "\n\ndef set_font_size_to(size):\n    tap($settings)\n    tap($set_font_size)\n    tap($font_size_{}%)\n\ndef main():\n    set_font_size_to(175)\n\nmain()"}
{"task": "Set the font size to 200%", "solution": "\n\ndef set_font_size_to(size):\n    tap($settings)\n    tap($set_font_size)\n    tap($font_size_{}%)\n\ndef main():\n    set_font_size_to(200)\n\nmain()"}
{"task": "Set the font size to 250%", "solution": "\n\ndef set_font_size_to(size):\n    tap($settings)\n    tap($set_font_size)\n    tap($font_size_{}%)\n\ndef main():\n    set_font_size_to(250)\n\nmain()"}
{"task": "Set the font size to 300%", "solution": "\n\ndef set_font_size_to(size):\n    tap($settings)\n    tap($set_font_size)\n    tap($font_size_{}%)\n\ndef main():\n    set_font_size_to(300)\n\nmain()"}
{"task": "Change the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Set the app to place the cursor at the end of the note", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Set the app to show the keyboard on startup", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)"}
{"task": "Check the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\nfor size in $font_size_types:\n    if get_attributes(size)[\"selected\"]:\n        current_font_size = get_text(size)\n        break\nprint(current_font_size)"}
{"task": "Open the settings page in the Notes app", "solution": "tap($settings)"}
{"task": "Show all checklist items in the current note", "solution": "for item in $checklist_item_list:\n    print(get_text(item))"}
{"task": "Open the note titled 'Meeting Notes'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor idx, note in enumerate(note_titles):\n    if get_text(note) == 'Meeting Notes':\n        tap(note)\n        break"}
{"task": "Rename the checklist item 'Call Mom' to 'Contact Mother'", "solution": "for item in $checklist_item_list:\n    if get_text(item) == 'Call Mom':\n        long_tap(item)\n        tap($rename_selected_checklist_item)\n        set_text($rename_input, 'Contact Mother')\n        tap($rename_ok)\n        break"}
{"task": "Delete the checklist item 'Workout at 5 PM'", "solution": "for item in $checklist_item_list:\n    if get_text(item) == 'Workout at 5 PM':\n        long_tap(item)\n        tap($delete_selected_checklist_item)\n        break"}
{"task": "Open the note titled 'Project Plan'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor idx, note in enumerate(note_titles):\n    if get_text(note) == 'Project Plan':\n        tap(note)\n        break"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Switch to the next note in the list", "solution": "tap($switch_to_next_item)"}
{"task": "Open the note titled 'Grocery List'", "solution": "tap($open_note); tap($open_note_title_list.match('Grocery List')[0])"}
{"task": "Save changes to my current note", "solution": "tap($save_note)"}
{"task": "Search for the word 'meeting' in my current note", "solution": "tap($search_within_note); set_text($search_text, 'meeting')"}
{"task": "Open more options for the current note in the Notes APP", "solution": "tap($more_options_note)"}
{"task": "Open the settings menu from the more options of the current checklist", "solution": "tap($more_options_checklist); tap($settings)"}
{"task": "Sort the checklist items and confirm by pressing OK", "solution": "tap($sort_checklist_items); tap($sort_checklist_items_ok)"}
{"task": "Open the settings menu from the main screen of the app and then scroll through the settings", "solution": "tap($open_note); tap($settings); scroll($scroll_settings_page, 'down')"}
{"task": "Lock the current note", "solution": "tap($more_options_note); tap($lock_note)"}
{"task": "Choose 'dark_red' theme color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Choose 'white' theme color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Choose 'black_white' theme color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Choose 'custom' theme color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Tap on 'more options' of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Customize the colors of the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\n# Assume that you set the theme color through some UI interaction\nback()\ntap($set_text_color)\n# Assume that you set the text color through some UI interaction\nback()\ntap($set_background_color)\n# Assume that you set the background color through some UI interaction\nback()\ntap($set_primary_color)\n# Assume that you set the primary color through some UI interaction\nback()\ntap($set_app_icon_color)\n# Assume that you set the app icon color through some UI interaction\nback()\ntap($save_set_colors)"}
{"task": "Change the widget colors in the Notes app", "solution": "tap($settings)\ntap($set_widget_colors)\n# Assume that you set the widget colors through some UI interaction\nback()"}
{"task": "Adjust the font size of the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\n# Setting the font size to 150%\nback()"}
{"task": "Access more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Access more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Show the current font size", "solution": "tap($settings)\ntap($current_font_size)\nfont_size_elements = $font_size_types\ncurrent_font_size = [size for size in font_size_elements if get_attributes(size)['selected'] == True][0]\ncurrent_font_size_text = get_text(current_font_size)\nprint(current_font_size_text)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Enable the option to place the cursor at the end of the note", "solution": "tap($settings)\nif not get_attributes($set_place_cursor_to_the_end_of_note)['checked']:\n    tap($set_place_cursor_to_the_end_of_note)"}
{"task": "Set theme to dark mode from note options", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()"}
{"task": "Set theme to dark red mode from note options", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\nback()"}
{"task": "Set theme to auto light/dark mode from note options", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\nback()"}
{"task": "Set theme to light mode from checklist options", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\nback()"}
{"task": "Set theme to dark mode from checklist options", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()"}
{"task": "Rename the checklist item 'Shopping List' to 'Groceries List'", "solution": "long_tap($checklist_item_list.match('Shopping List')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Groceries List')\ntap($rename_ok)"}
{"task": "Show the content of the checklist item 'Prepare Presentation'", "solution": "tap($checklist_item_list.match('Prepare Presentation')[0])"}
{"task": "Delete the checklist item 'Review Quarterly Report'", "solution": "long_tap($checklist_item_list.match('Review Quarterly Report')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Tap 'Settings' after opening 'more options' in the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Tap 'Settings' after opening 'more options' in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Select the 'text note' type when creating a new note", "solution": "tap($create_note)\nset_text($add_note_title, 'New Note Title')\ntap($text_note_type)"}
{"task": "Open the main screen and tap on 'more options' of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings from the 'more options' menu of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the main screen and tap on 'more options' of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings from the 'more options' menu of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Scroll through the settings page in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Open the more options menu of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app from the current note options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings of the app from the current checklist options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Open the customize colors option from the settings", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the items of the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Lock my 'Grocery list' checklist", "solution": "\n# Script to lock the 'Grocery list' checklist\n\ntap($open_note)\nopen_note_titles = $open_note_title_list\nindex = -1\n# Find the 'Grocery list' checklist\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Grocery list':\n        index = i\n        break\n\n# If we find the 'Grocery list' checklist\nif index != -1:\n    tap(open_note_titles[index])\n    tap($more_options_checklist)\n    more_options_buttons = $more_options_checklist_buttons\n    for i in range(len(more_options_buttons)):\n        if get_text(more_options_buttons[i]) == 'Lock note':\n            tap(more_options_buttons[i])\n            tap($lock_note_ok)\n            break"}
{"task": "Open the file of my 'Meeting minutes' note", "solution": "\n# Script to open the file of my 'Meeting minutes' note\n\ntap($open_note)\nopen_note_titles = $open_note_title_list\nindex = -1\n# Find the 'Meeting minutes' note\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Meeting minutes':\n        index = i\n        break\n\n# If we find the 'Meeting minutes' note\nif index != -1:\n    tap(open_note_titles[index])\n    tap($more_options_note)\n    more_options_buttons = $more_options_note_buttons\n    for i in range(len(more_options_buttons)):\n        if get_text(more_options_buttons[i]) == 'Open file':\n            tap(more_options_buttons[i])\n            break"}
{"task": "Open the file of my 'Weekly tasks' checklist", "solution": "\n# Script to open the file of my 'Weekly tasks' checklist\n\ntap($open_note)\nopen_note_titles = $open_note_title_list\nindex = -1\n# Find the 'Weekly tasks' checklist\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Weekly tasks':\n        index = i\n        break\n\n# If we find the 'Weekly tasks' checklist\nif index != -1:\n    tap(open_note_titles[index])\n    tap($more_options_checklist)\n    more_options_buttons = $more_options_checklist_buttons\n    for i in range(len(more_options_buttons)):\n        if get_text(more_options_buttons[i]) == 'Open file':\n            tap(more_options_buttons[i])\n            break"}
{"task": "Export the 'Travel itinerary' note as a file", "solution": "\n# Script to export the 'Travel itinerary' note as a file\n\ntap($open_note)\nopen_note_titles = $open_note_title_list\nindex = -1\n# Find the 'Travel itinerary' note\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Travel itinerary':\n        index = i\n        break\n\n# If we find the 'Travel itinerary' note\nif index != -1:\n    tap(open_note_titles[index])\n    tap($more_options_note)\n    more_options_buttons = $more_options_note_buttons\n    for i in range(len(more_options_buttons)):\n        if get_text(more_options_buttons[i]) == 'Export as file':\n            tap(more_options_buttons[i])\n            break"}
{"task": "Export the 'Books to read' checklist as a file", "solution": "\n# Script to export the 'Books to read' checklist as a file\n\ntap($open_note)\nopen_note_titles = $open_note_title_list\nindex = -1\n# Find the 'Books to read' checklist\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Books to read':\n        index = i\n        break\n\n# If we find the 'Books to read' checklist\nif index != -1:\n    tap(open_note_titles[index])\n    tap($more_options_checklist)\n    more_options_buttons = $more_options_checklist_buttons\n    for i in range(len(more_options_buttons)):\n        if get_text(more_options_buttons[i]) == 'Export as file':\n            tap(more_options_buttons[i])\n            break"}
{"task": "Enable the 'Show word count' option in the settings", "solution": "tap($settings)\nset_text($set_show_word_count, 'true')"}
{"task": "Enable the 'Make links and emails clickable' setting", "solution": "tap($settings)\nset_text($set_make_links_and_emails_clickable, 'true')"}
{"task": "Enable the use of monospaced font", "solution": "tap($settings)\nset_text($set_use_monospaced_font, 'true')"}
{"task": "Enable the 'Use Incognito mode of keyboards' setting", "solution": "tap($settings)\nset_text($set_use_incognito_mode_of_keyboards, 'true')"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Confirm the lock of the current note", "solution": "tap($lock_note_ok)"}
{"task": "Confirm deletion of the current note", "solution": "tap($delete_note_ok)"}
{"task": "Tap on the 'Search' button within the current note", "solution": "tap($search_within_note)"}
{"task": "Tap on the 'More options' button to view more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Edit the content of the current note by typing 'Meeting notes for tomorrow's agenda'", "solution": "set_text($note_content, 'Meeting notes for tomorrow\\'s agenda')"}
{"task": "Enable the option to show the keyboard on startup", "solution": "tap($set_show_keyboard_on_startup)"}
{"task": "Enable the option to show a note picker on startup", "solution": "tap($set_show_a_note_picker_on_startup)"}
{"task": "Enable the option to autosave notes", "solution": "tap($set_autosave_notes)"}
{"task": "Search for the text 'meeting notes' within the current note", "solution": "tap($search_within_note);\nset_text($search_text, 'meeting notes')"}
{"task": "Go to the previous occurrence of the word 'project' within the current note", "solution": "tap($search_within_note);\nset_text($search_text, 'project');\ntap($prev_matched_text)"}
{"task": "From the settings, customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "From the customize colors menu, set the theme color", "solution": "tap($set_colors)\ntap($set_theme_color)"}
{"task": "From the theme color menu, select the 'Black & White' theme", "solution": "tap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "From the theme color menu, select the 'Custom' theme", "solution": "tap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "From the settings, adjust the font size of the app", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Set the theme color to White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Set the theme color to Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Set the theme color to Custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Set the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%['0%'])"}
{"task": "Set the font size to 60%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%['0%'])"}
{"task": "Check the 'Show word count' checkbox after tapping 'Settings' from 'more options' in the current note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_word_count)"}
{"task": "Check the 'Show word count' checkbox after tapping 'Settings' from 'more options' in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_show_word_count)"}
{"task": "Check the 'Make links and emails clickable' checkbox after tapping 'Settings' from 'more options' in the current note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Check the 'Make links and emails clickable' checkbox after tapping 'Settings' from 'more options' in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Check the 'Use monospaced font' checkbox after tapping 'Settings' from 'more options' in the current note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_use_monospaced_font)"}
{"task": "Print my 'Class schedule' note", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nclass_schedule_note = open_notes.match('Class schedule')\ntap(class_schedule_note[0])\ntap($more_options_note)\ntap($print_note)"}
{"task": "Print my 'Home maintenance checklist'", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nhome_maintenance_checklist = open_notes.match('Home maintenance checklist')\ntap(home_maintenance_checklist[0])\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Delete my 'Old recipes' note", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nold_recipes_note = open_notes.match('Old recipes')\ntap(old_recipes_note[0])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Delete my 'Christmas shopping checklist'", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nchristmas_shopping_checklist = open_notes.match('Christmas shopping checklist')\ntap(christmas_shopping_checklist[0])\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Search for the word 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Find the next instance of the term 'deadline' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($next_matchhed_text)"}
{"task": "Close the search box in the current note", "solution": "tap($close_search_box)"}
{"task": "Create a new note titled 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new checklist note titled 'Weekend Tasks'", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Tasks')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the note titled 'Travel Plans'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Travel Plans')[0])"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Create a new note with the title 'Shopping List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($add_note_ok)"}
{"task": "Create a new text note titled 'Meeting Notes'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open a new note and set the type to checklist", "solution": "tap($create_note)\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Add a new note and name it 'Workout Plan'", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Plan')\ntap($add_note_ok)"}
{"task": "From the font size menu, set the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "From the font size menu, set the font size to 60%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "From the font size menu, set the font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "From the settings, check the current font size", "solution": "tap($settings)\ntap($current_font_size)\nget_attributes($current_font_size)"}
{"task": "Show the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\nfont_sizes = $font_size_types\nenabled_font_sizes = [get_attributes(fs) for fs in font_sizes if get_attributes(fs)['checked'] == True]\nenabled_font_sizes[0] if enabled_font_sizes else None"}
{"task": "Set theme to dark red mode from checklist options", "solution": "tap($more_options_checklist);tap($set_colors);tap($set_theme_color);tap($theme_color_dark_red);tap($save_set_colors);tap($close_set_colors)"}
{"task": "Set theme to auto light/dark mode from checklist options", "solution": "tap($more_options_checklist);tap($set_colors);tap($set_theme_color);tap($theme_color_auto_light_dark);tap($save_set_colors);tap($close_set_colors)"}
{"task": "Open more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the items of the current checklist by Custom", "solution": "tap($more_options_checklist);tap($sort_checklist_items);tap($custom_type);tap($sort_checklist_items_ok)"}
{"task": "Confirm the sort type of the current checklist", "solution": "tap($more_options_checklist);tap($sort_checklist_items);back()"}
{"task": "Scroll to the next instance of the word 'milestone' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'milestone')\ntap($next_matchhed_text)"}
{"task": "Scroll to the previous instance of the word 'deadline' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)"}
{"task": "Close the search box in the current note", "solution": "tap($search_within_note)\ntap($close_search_box)"}
{"task": "Edit the content of the current note to include 'Reminder: Buy groceries' at the beginning", "solution": "tap($note_content)\ncurrent_content = get_text($note_content)\nnew_content = 'Reminder: Buy groceries\\n' + current_content\nset_text($note_content, new_content)\ntap($save_note)"}
{"task": "Create a new note with the title 'Shopping List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Set the font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"75%\")[0])"}
{"task": "Set the font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"90%\")[0])"}
{"task": "Set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"100%\")[0])"}
{"task": "Set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"125%\")[0])"}
{"task": "Set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"150%\")[0])"}
{"task": "Go back from the settings page", "solution": "tap($exit_settings)"}
{"task": "Open more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Scroll the settings page", "solution": "scroll($scroll_settings_page, 'down')"}
{"task": "Open the existing note", "solution": "tap($open_note)\ntap($open_note_title_list[0])"}
{"task": "Check the 'Use monospaced font' checkbox after tapping 'Settings' from 'more options' in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_use_monospaced_font)\ntap($exit_settings)"}
{"task": "Uncheck the 'Show word count' checkbox after tapping 'Settings' from 'more options' in the current note", "solution": "tap($more_options_note)\ntap($settings)\nif get_attributes($set_show_word_count)['checked']:\n    tap($set_show_word_count)\ntap($exit_settings)"}
{"task": "Uncheck the 'Show word count' checkbox after tapping 'Settings' from 'more options' in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\nif get_attributes($set_show_word_count)['checked']:\n    tap($set_show_word_count)\ntap($exit_settings)"}
{"task": "Uncheck the 'Make links and emails clickable' checkbox after tapping 'Settings' from 'more options' in the current note", "solution": "tap($more_options_note)\ntap($settings)\nif get_attributes($set_make_links_and_emails_clickable)['checked']:\n    tap($set_make_links_and_emails_clickable)\ntap($exit_settings)"}
{"task": "Uncheck the 'Make links and emails clickable' checkbox after tapping 'Settings' from 'more options' in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\nif get_attributes($set_make_links_and_emails_clickable)['checked']:\n    tap($set_make_links_and_emails_clickable)\ntap($exit_settings)"}
{"task": "Open a note and choose text note type", "solution": "tap($open_note)\nnotes_list = $open_note_title_list.match({'selected': false})\ntap(notes_list[0])\ntap($text_note_type)"}
{"task": "Create a new checklist note and title it 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the Notes app", "solution": "tap($settings)"}
{"task": "Search within the current note for the keyword 'deadline'", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Scroll through the current note content to the bottom", "solution": "scroll($note_content, 'down')"}
{"task": "Search for the phrase 'project deliverables' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'project deliverables')"}
{"task": "Edit the current note by adding a bullet point list under the existing text", "solution": "set_text($note_content, get_text($note_content) + '\\n- bullet point 1\\n- bullet point 2\\n- bullet point 3')\ntap($save_note)"}
{"task": "Tap on 'Search' and input 'budget' to find related sections within the note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')"}
{"task": "Set the font size to 50% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Set the font size to 60% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Set the font size to 75% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Set the font size to 90% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)"}
{"task": "Show the current font size in the Notes app", "solution": "tap($settings)\ntap($current_font_size)"}
{"task": "Open the note titled 'Grocery List'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Grocery List')[0]\ntap(note_to_open)"}
{"task": "Rename the checklist item 'Buy Milk' to 'Purchase Milk'", "solution": "long_tap($checklist_item_list.match('Buy Milk')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase Milk')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Call Doctor'", "solution": "long_tap($checklist_item_list.match('Call Doctor')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Move the checklist item 'Finish Report' to the bottom of the list", "solution": "long_tap($checklist_item_list.match('Finish Report')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Open the note titled 'Meeting Minutes'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_to_open = open_note_titles.match('Meeting Minutes')[0]\ntap(note_to_open)"}
{"task": "Create a new text note with the title 'Meeting notes'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting notes')"}
{"task": "Create a new checklist note with the title 'Groceries List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Groceries List')"}
{"task": "Confirm the creation of a new note", "solution": "tap($add_note_ok)"}
{"task": "Select the text note type for the new note", "solution": "tap($text_note_type)"}
{"task": "Select the checklist note type for the new note", "solution": "tap($checklist_type)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Mark the 'Show word count' option", "solution": "# go to settings page first\ntap($settings)\n# mark the 'Show word count' option\nset_text($set_show_word_count, 'true')"}
{"task": "Make links and emails clickable", "solution": "# go to settings page first\ntap($settings)\n# make links and emails clickable\nset_text($set_make_links_and_emails_clickable, 'true')"}
{"task": "Create a new note with the title 'Workout Routine'", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Routine')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the note titled 'Daily Journal'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Daily Journal')[0])"}
{"task": "Add the text 'Call John at 5pm' to the current note", "solution": "set_text($note_content, 'Call John at 5pm')\ntap($save_note)"}
{"task": "Find and highlight all occurrences of 'project' within the note", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($next_matchhed_text)"}
{"task": "Close the current note and return to the main screen", "solution": "back()"}
{"task": "Tap on 'More options' and select an option to share the note", "solution": "tap($more_options_note)"}
{"task": "Edit the note content to include a reminder 'Call John at 3pm'", "solution": "set_text($note_content, 'Call John at 3pm')"}
{"task": "Open more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Set the font size to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"175%\"))\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"200%\"))\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"250%\"))\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"300%\"))\ntap($sort_checklist_items_ok)"}
{"task": "Switch to the next note.", "solution": "tap($switch_to_next_item)"}
{"task": "Uncheck the 'Use monospaced font' checkbox after tapping 'Settings' from 'more options' in the current note", "solution": "tap($more_options_note)\ntap($settings)\nattrs = get_attributes($set_use_monospaced_font)\nif attrs['checked']:\n    tap($set_use_monospaced_font)\nback()"}
{"task": "Uncheck the 'Use monospaced font' checkbox after tapping 'Settings' from 'more options' in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\nattrs = get_attributes($set_use_monospaced_font)\nif attrs['checked']:\n    tap($set_use_monospaced_font)\nback()"}
{"task": "Show the current font size after tapping 'Settings' from 'more options' in the current note", "solution": "tap($more_options_note)\ntap($settings)\ntap($current_font_size)\n# Assuming get_text can show the current selection get_text($current_font_size.match({'selected': True}))"}
{"task": "Show the current font size after tapping 'Settings' from 'more options' in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($current_font_size)\n# Assuming get_text can show the current selection get_text($current_font_size.match({'selected': True}))"}
{"task": "Search for the keyword 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Show the information of the app", "solution": "tap($about)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Rename the current checklist to 'Grocery List'", "solution": "tap($rename_selected_checklist_item)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Save the note titled 'Daily Journal'", "solution": "open_note_title_list = $open_note_title_list\nopen_note_title = open_note_title_list.match('Daily Journal')[0]\ntap(open_note_title)\ntap($save_note)"}
{"task": "Open the note titled 'Holiday Plans'", "solution": "open_note_title_list = $open_note_title_list\nopen_note_title = open_note_title_list.match('Holiday Plans')[0]\ntap(open_note_title)"}
{"task": "Rename the checklist item 'Book Flights' to 'Reserve Flights'", "solution": "checklist_item_list = $checklist_item_list\nchecklist_item = checklist_item_list.match('Book Flights')[0]\nlong_tap(checklist_item)\nrename_selected_checklist_item = $rename_selected_checklist_item\ntap(rename_selected_checklist_item)\nset_text($rename_input, 'Reserve Flights')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Pay Bills'", "solution": "checklist_item_list = $checklist_item_list\nchecklist_item = checklist_item_list.match('Pay Bills')[0]\nlong_tap(checklist_item)\ntap($delete_selected_checklist_item)"}
{"task": "Set the font size of the app to 18 points.", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_125%)"}
{"task": "Save the note with the current content", "solution": "tap($save_note)"}
{"task": "Search within the current note for the word 'meeting'", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Edit the content of the current note to add 'Don't forget to buy milk'", "solution": "tap($note_content)\nexisting_text = get_text($note_content)\nset_text($note_content, existing_text + \"\\nDon't forget to buy milk\")"}
{"task": "Delete the last paragraph in the current note", "solution": "tap($note_content)\ncontent = get_text($note_content)\nlast_paragraph_idx = content.rfind('\\n')\nif last_paragraph_idx == -1:\n    updated_content = ''\nelse:\n    updated_content = content[:last_paragraph_idx]\nset_text($note_content, updated_content)"}
{"task": "Use a monospaced font", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_monospaced_font)"}
{"task": "Enable the incognito mode for keyboards", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Enable the option to wrap lines", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_line_wrap)"}
{"task": "Open more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Create a new note and set the title to 'Travel Itinerary'", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Itinerary')\ntap($add_note_ok)"}
{"task": "Search for 'important' in the current note and highlight the first occurrence", "solution": "tap($search_within_note)\nset_text($search_text, 'important')\ntap($prev_matched_text)"}
{"task": "Scroll to the next instance of 'budget' within the current note", "solution": "tap($next_matchhed_text)"}
{"task": "Scroll to the previous instance of 'expenses' within the current note", "solution": "tap($prev_matched_text)"}
{"task": "Switch to the previous note", "solution": "tap($switch_to_prev_item)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the app to Dark Red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Set the theme color of the app to White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Set the theme color of the app to Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Set the theme color of the app to Custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Switch to the previous note.", "solution": "tap($switch_to_prev_item)"}
{"task": "Show the checklist items in the current list.", "solution": "str(len($checklist_item_list))"}
{"task": "Show the content of the first checklist item.", "solution": "get_text($checklist_item_list[0])"}
{"task": "Show the content of the second checklist item.", "solution": "get_text($checklist_item_list[1])"}
{"task": "Show the content of the third checklist item.", "solution": "get_text($checklist_item_list[2])"}
{"task": "Confirm the new name 'Meeting Notes' for the current note", "solution": "tap($rename_ok)"}
{"task": "Confirm the new name 'Grocery List' for the current checklist", "solution": "tap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($lock_note)"}
{"task": "Lock the current checklist", "solution": "tap($lock_note)"}
{"task": "Confirm locking the current note", "solution": "tap($lock_note_ok)"}
{"task": "Switch to the next note", "solution": "tap($switch_to_next_item)"}
{"task": "Show the title of the current note", "solution": "get_text($item_title)"}
{"task": "List all checklist items in the current note", "solution": "checklist_items = $checklist_item_list\nitems_text = [get_text(item) for item in checklist_items]\nitems_text"}
{"task": "Show the content of checklist item 3 in the current note", "solution": "get_text($checklist_item_list[2])"}
{"task": "Add a new checklist item to the current note", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'New Checklist Item')\ntap($add_checklist_item_ok)"}
{"task": "Go to the next instance of the matching text 'budget' in the current note", "solution": "tap($next_matchhed_text);"}
{"task": "Close the search box for matching text within the current note", "solution": "tap($close_search_box);"}
{"task": "Add a new note with the title 'Grocery List'", "solution": "tap($create_note);\nset_text($add_note_title, 'Grocery List');\ntap($add_note_ok);"}
{"task": "Create a note titled 'Project Plan' and set it as a checklist", "solution": "tap($create_note);\nset_text($add_note_title, 'Project Plan');\ntap($checklist_type);\ntap($add_note_ok);"}
{"task": "Open the note titled 'Vacation Ideas'", "solution": "tap($open_note);\nnotes_list = $open_note_title_list;\nfor note in notes_list:\n    if get_text(note) == 'Vacation Ideas':\n        tap(note);\n        break;"}
{"task": "Change the first sentence in the current note to 'The meeting is rescheduled to 3 PM'", "solution": "content = get_text($note_content)\ncontent_lines = content.split('\\n')\ncontent_lines[0] = 'The meeting is rescheduled to 3 PM'\nnew_content = '\\n'.join(content_lines)\nset_text($note_content, new_content)\ntap($save_note)"}
{"task": "Bold the word 'important' in the current note", "solution": "content = get_text($note_content)\nupdated_content = content.replace('important', '**important**')\nset_text($note_content, updated_content)\ntap($save_note)"}
{"task": "Insert the date '2023-10-15' at the beginning of the current note", "solution": "content = get_text($note_content)\nnew_content = '2023-10-15\\n' + content\nset_text($note_content, new_content)\ntap($save_note)"}
{"task": "Underline the title 'Shopping List' in the current note", "solution": "content = get_text($note_content)\nupdated_content = content.replace('Shopping List', '__Shopping List__')\nset_text($note_content, updated_content)\ntap($save_note)"}
{"task": "Replace every occurrence of 'urgent' with 'important' in the current note", "solution": "content = get_text($note_content)\nupdated_content = content.replace('urgent', 'important')\nset_text($note_content, updated_content)\ntap($save_note)"}
{"task": "Sort the current checklist items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)"}
{"task": "Sort the current checklist items by custom", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)"}
{"task": "Confirm the sort type of the current checklist", "solution": "tap($sort_checklist_items_ok)"}
{"task": "Exit the settings page", "solution": "tap($exit_settings)"}
{"task": "Open more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Enable the 'Show word count' option in the app settings.", "solution": "tap($settings)\nif not get_attributes($set_show_word_count)['checked']:\n    tap($set_show_word_count)"}
{"task": "Disable the 'Show word count' option in the app settings.", "solution": "tap($settings)\nif get_attributes($set_show_word_count)['checked']:\n    tap($set_show_word_count)"}
{"task": "Enable the 'Make links and emails clickable' option in the app settings.", "solution": "tap($settings)\nif not get_attributes($set_make_links_and_emails_clickable)['checked']:\n    tap($set_make_links_and_emails_clickable)"}
{"task": "Disable the 'Make links and emails clickable' option in the app settings.", "solution": "tap($settings)\nif get_attributes($set_make_links_and_emails_clickable)['checked']:\n    tap($set_make_links_and_emails_clickable)"}
{"task": "Enable the 'Use monospace font' option in the app settings.", "solution": "tap($settings)\nif not get_attributes($set_use_monospaced_font)['checked']:\n    tap($set_use_monospaced_font)"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings from the more options of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the app colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings from the more options of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Show the title of the current note.", "solution": "get_text($item_title)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note); tap($settings)"}
{"task": "Change the font size to 125%", "solution": "tap($more_options_note); tap($settings); tap($set_font_size); tap($font_size_types.match('125%')[0])"}
{"task": "Change the font size to 150%", "solution": "tap($more_options_note); tap($settings); tap($set_font_size); tap($font_size_types.match('150%')[0])"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Increase the font size of the app to 200%", "solution": "tap($current_font_size)\ntap($font_size_200%)"}
{"task": "Increase the font size of the app to 250%", "solution": "tap($current_font_size)\ntap($font_size_250%)"}
{"task": "Increase the font size of the app to 300%", "solution": "tap($current_font_size)\ntap($font_size_300%)"}
{"task": "Open the settings of the app from the note options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings of the app from the checklist options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Enable the keyboard to show up on startup for the Notes app", "solution": "tap($settings)\nif not get_attributes($set_show_keyboard_on_startup)[\"checked\"]:\n    tap($set_show_keyboard_on_startup)"}
{"task": "Disable the keyboard to show up on startup for the Notes app", "solution": "tap($settings)\nif get_attributes($set_show_keyboard_on_startup)[\"checked\"]:\n    tap($set_show_keyboard_on_startup)"}
{"task": "Enable the note picker to show up on startup for the Notes app", "solution": "tap($settings)\nif not get_attributes($set_show_a_note_picker_on_startup)[\"checked\"]:\n    tap($set_show_a_note_picker_on_startup)"}
{"task": "Confirm locking the current checklist", "solution": "tap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the items in the current checklist by Date created", "solution": "tap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Exit the settings page", "solution": "tap($exit_settings)"}
{"task": "Sort the items in the current checklist by Custom", "solution": "tap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Customize the widget colors", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Set the app font size", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Show the current app font size", "solution": "tap($settings)\ntap($current_font_size)"}
{"task": "Open the note's settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Change the font size to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '175%'})[0])"}
{"task": "Change the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '200%'})[0])"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Check the current font size of the app", "solution": "tap($settings)\nfor option in $font_size_types:\n    if get_attributes(option)['checked']:\n        print(get_text(option))"}
{"task": "Close the color customization popup", "solution": "tap($close_set_colors)"}
{"task": "Disable the 'Use monospace font' option in the app settings.", "solution": "tap($settings)\nset_text($set_use_monospaced_font, False)"}
{"task": "Enable the 'Use Incognito mode of keyboards' option in the app settings.", "solution": "tap($settings)\nset_text($set_use_incognito_mode_of_keyboards, True)"}
{"task": "Disable the 'Use Incognito mode of keyboards' option in the app settings.", "solution": "tap($settings)\nset_text($set_use_incognito_mode_of_keyboards, False)"}
{"task": "Check the current font size being used in the Notes app.", "solution": "tap($settings)\nget_text($current_font_size)"}
{"task": "Open the more options menu for the current note.", "solution": "tap($more_options_note)"}
{"task": "Enable the setting to place the cursor to the end of notes", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the Notes app", "solution": "tap($settings)"}
{"task": "Use the incognito mode of keyboards in the settings", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Enable line wrap in the settings", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_line_wrap)"}
{"task": "Confirm sorting type for the current checklist", "solution": "tap($sort_checklist_items_ok)"}
{"task": "Open settings from the current checklist more options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Open settings from the current note more options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings menu from the main screen", "solution": "tap($switch_to_next_item)\ntap($settings)"}
{"task": "Open the options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app from more options of the note", "solution": "\ntap($more_options_note)\ntap($settings)"}
{"task": "Open the options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Change the font size to 175%", "solution": "\ntap($settings)\ntap($set_font_size)\ntap($font_size_175%)\n"}
{"task": "View the current font size", "solution": "\ntap($settings)\ntap($current_font_size)"}
{"task": "Disable the note picker to show up on startup for the Notes app", "solution": "tap($settings)\nif not get_attributes($set_show_a_note_picker_on_startup)[\"checked\"]:\n    tap($set_show_a_note_picker_on_startup)\nback()"}
{"task": "Enable autosaving of notes in the Notes app", "solution": "tap($settings)\nif not get_attributes($set_autosave_notes)[\"checked\"]:\n    tap($set_autosave_notes)\nback()"}
{"task": "Disable autosaving of notes in the Notes app", "solution": "tap($settings)\nif get_attributes($set_autosave_notes)[\"checked\"]:\n    tap($set_autosave_notes)\nback()"}
{"task": "Enable notifications for save success messages in the Notes app", "solution": "tap($settings)\nif not get_attributes($set_display_save_success_messages)[\"checked\"]:\n    tap($set_display_save_success_messages)\nback()"}
{"task": "Disable notifications for save success messages in the Notes app", "solution": "tap($settings)\nif get_attributes($set_display_save_success_messages)[\"checked\"]:\n    tap($set_display_save_success_messages)\nback()"}
{"task": "Rename the note about the meeting to 'Team Meeting Notes'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'meeting':\n        tap(notes[i])\n        tap($more_options_note)\n        tap($rename_note)\n        set_text($rename_input, 'Team Meeting Notes')\n        tap($rename_ok)\n        break"}
{"task": "Rename the checklist titled 'Grocery List' to 'Weekly Grocery List'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Grocery List':\n        tap(notes[i])\n        tap($more_options_checklist)\n        tap($rename_note)\n        set_text($rename_input, 'Weekly Grocery List')\n        tap($rename_ok)\n        break"}
{"task": "Lock the current note titled 'Personal Diary'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Personal Diary':\n        tap(notes[i])\n        tap($more_options_note)\n        tap($lock_note)\n        tap($lock_note_ok)\n        break"}
{"task": "Delete the note named 'Old Recipe'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Old Recipe':\n        tap(notes[i])\n        tap($more_options_note)\n        tap($delete_note)\n        tap($delete_note_ok)\n        break"}
{"task": "Remove done items from the checklist called 'Work Tasks'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Work Tasks':\n        tap(notes[i])\n        tap($more_options_checklist)\n        tap($remove_done_checklist_items)\n        break"}
{"task": "Find out more information about the app from a note", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nnote_to_open = open_notes.match('notes about the app')  # Assuming the note's title contains 'notes about the app'\ntap(note_to_open[0])  # Tap the first match\n# Extracting more information by scrolling down\nscroll($note_content, 'down')\ninfo = get_text($note_content)\ninfo"}
{"task": "Find out more information about the app from a checklist", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nnote_to_open = open_notes.match('checklist about the app')  # Assuming the checklist's title contains 'checklist about the app'\ntap(note_to_open[0])  # Tap the first match\n# Extracting more information by scrolling down\nscroll($note_content, 'down')\ninfo = get_text($note_content)\ninfo"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Rename the current checklist to 'Grocery List'", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Open the note titled 'Meeting Minutes'.", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nnote_to_open = open_notes.match('Meeting Minutes')  # Match the note titled 'Meeting Minutes'\ntap(note_to_open[0])  # Tap the first match"}
{"task": "Access more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Access more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings in the Notes app", "solution": "tap($settings)"}
{"task": "Create a new text note titled 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new checklist note titled 'Vacation Packing'", "solution": "tap($create_note)\nset_text($add_note_title, 'Vacation Packing')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the more options menu for the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Go to the app settings from the more options menu of the current note.", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match(\"Settings\")[0])"}
{"task": "Go to the app settings from the more options menu of the current checklist.", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match(\"Settings\")[0])"}
{"task": "Rename the selected checklist item to 'Buy Groceries'", "solution": "long_tap($checklist_item_list.match({'text': 'Selected Item'})[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy Groceries')\ntap($rename_ok)"}
{"task": "Delete the checklist item labeled 'Take out trash'", "solution": "long_tap($checklist_item_list.match({'text': 'Take out trash'})[0])\ntap($delete_selected_checklist_item)"}
{"task": "Set the alignment in the settings", "solution": "tap($settings)\ntap($set_alignment)"}
{"task": "Customize the colors of the app in the settings", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Close the popup window after setting colors", "solution": "tap($close_set_colors)"}
{"task": "Open more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Customize the app colors from the settings menu", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the app to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Set the theme color of the app to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Enable auto light/dark theme for the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)"}
{"task": "Access more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Save the customized colors", "solution": "tap($save_set_colors)"}
{"task": "Create a new note with the title 'Grocery List'.", "solution": "tap($create_note); set_text($add_note_title, 'Grocery List'); tap($add_note_ok)"}
{"task": "Switch to the next item in the list.", "solution": "tap($switch_to_next_item)"}
{"task": "Switch to the previous item in the list.", "solution": "tap($switch_to_prev_item)"}
{"task": "Open the more options menu for the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Open more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Set the theme of the app to light", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Set the app's font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Lock the current checklist", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the file of the current note", "solution": "tap($more_options_note)\ntap($open_file)"}
{"task": "Access more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Set the font size of the app to 60%", "solution": "\ntap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Set the font size of the app to 75%", "solution": "\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Enable line wrap in the Notes app", "solution": "\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_line_wrap)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Navigate to the settings of the Notes app", "solution": "tap($settings)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set the text alignment in the Notes app", "solution": "\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_alignment)\n"}
{"task": "Set the theme color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Set the text color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings", "solution": "tap($settings)"}
{"task": "Set font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('300%')[0])"}
{"task": "Open the note titled 'Holiday Plans'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nnote_to_open = [note for note in notes if get_text(note) == 'Holiday Plans'][0]\ntap(note_to_open)"}
{"task": "Save the current note", "solution": "tap($save_note)"}
{"task": "Search for 'birthday' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'birthday')"}
{"task": "Export the current note as a file", "solution": "tap($more_options_note)\ntap($export_as_file)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Search for the word 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Move to the next occurrence of the word 'budget' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)"}
{"task": "Open the note titled 'Project Ideas'", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nnote_idx = None\nfor idx in range(len(open_note_title_list)):\n    if get_text(open_note_title_list[idx]) == 'Project Ideas':\n        note_idx = idx\n        break\nif note_idx is not None:\n    tap(open_note_title_list[note_idx])"}
{"task": "Close the search box within the current note", "solution": "tap($close_search_box)"}
{"task": "Tap on 'more options' for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Access the app settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the primary color of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_primary_color)"}
{"task": "Change the app icon color", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_app_icon_color)"}
{"task": "Close the color customization window", "solution": "tap($close_set_colors)"}
{"task": "Open the color customization options", "solution": "tap($set_colors)"}
{"task": "Save the customized colors", "solution": "tap($save_set_colors)"}
{"task": "Show the title of the current note", "solution": "title = get_text($item_title)\nprint(title)"}
{"task": "Switch to the previous note or checklist item", "solution": "tap($switch_to_prev_item)"}
{"task": "Open the file of the current checklist", "solution": "tap($more_options_checklist)\ntap($open_file)"}
{"task": "Export the current note as a file", "solution": "tap($more_options_note)\ntap($export_as_file)"}
{"task": "Export the current checklist as a file", "solution": "tap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Print the current note", "solution": "tap($more_options_note)\ntap($print_note)"}
{"task": "Print the current checklist", "solution": "tap($more_options_checklist)\ntap($print_note)"}
{"task": "Set the theme of the app to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Set the theme of the app to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Set the theme of the app to white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Show the current font size", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_font_size = get_attributes($font_size_types.match({'selected': True})[0])\nprint(current_font_size)"}
{"task": "Set the cursor to be placed at the end of the note", "solution": "tap($settings)\nif not get_attributes($set_place_cursor_to_the_end_of_note)['checked']:\n    tap($set_place_cursor_to_the_end_of_note)"}
{"task": "Enable keyboard to show on startup", "solution": "tap($settings)\nif not get_attributes($set_show_keyboard_on_startup)['checked']:\n    tap($set_show_keyboard_on_startup)"}
{"task": "Enable showing a note picker on startup", "solution": "tap($settings)\nif not get_attributes($set_show_a_note_picker_on_startup)['checked']:\n    tap($set_show_a_note_picker_on_startup)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Tap on 'Delete note' to delete the current note", "solution": "tap($delete_note)"}
{"task": "Open 'Settings' from the more options menu of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "View 'About' information from the more options menu of the current note", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($rename_note)\nset_text($rename_input, 'Meeting Notes')"}
{"task": "Tap on 'OK' to confirm renaming the current note", "solution": "tap($rename_ok)"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Set the font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()"}
{"task": "Set the font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Set the font size of the app to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\n"}
{"task": "Set the font size of the app to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\n"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)\n"}
{"task": "Open the note titled 'Grocery List' and save it after making changes to the content", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nopen_note_title = open_note_title_list.match('Grocery List')[0]\ntap(open_note_title)\n# Make changes to the note content\nset_text($note_content, 'Updated content')\ntap($save_note)\n"}
{"task": "Search for the word 'deadline' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\n"}
{"task": "Switch to the next note or checklist item", "solution": "tap($switch_to_next_item)"}
{"task": "Display all items in the current checklist", "solution": "\nchecklist_items = $checklist_item_list\nitem_texts = [get_text(item) for item in checklist_items]\nfor text in item_texts:\n    print(text)"}
{"task": "Open the settings in the Notes app", "solution": "tap($settings)"}
{"task": "Exit the settings page in the Notes app", "solution": "tap($exit_settings)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Print the current note", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('print')[0])"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('delete note')[0])\ntap($delete_note_ok)"}
{"task": "Open the app settings", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('settings')[0])"}
{"task": "Show information about the app", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('about')[0])"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Delete the current checklist", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Rename the current note to 'Shopping List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Lock the current note", "solution": "tap($lock_note)"}
{"task": "Tap on 'OK' to confirm locking the current note", "solution": "tap($lock_note_ok)"}
{"task": "Tap on 'more options' for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Tap on 'Delete note' to delete the current checklist", "solution": "tap($delete_note)"}
{"task": "Open 'Settings' from the more options menu of the current checklist", "solution": "tap($settings)"}
{"task": "Show the current font size", "solution": "tap($settings)\ntap($current_font_size)\nfont_size_attributes = get_attributes($font_size_100%)\nif font_size_attributes['selected']:\n    print('Current font size: 100%')\n# You can extend this script similarly to check other font sizes."}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings and customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the theme of the app to Dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open settings from the current note's more options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Change the font size settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($set_font_size_ok)"}
{"task": "Show the current font size setting", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_size = [get_text(item) for item in $font_size_types if get_attributes(item)['selected'] is True][0]\nprint(current_size)\nback()"}
{"task": "Create a new note titled 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the note titled 'Project Ideas'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Ideas')[0])"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Set the theme color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Set the theme color to auto light/dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)"}
{"task": "Set the theme color to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Set the theme color to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Set the theme color to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Access more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the note titled 'Meeting Minutes' and search for the phrase 'action items'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Meeting Minutes':\n        tap(open_note_titles[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'action items')"}
{"task": "Save the current note without making any edits", "solution": "tap($save_note)"}
{"task": "Search for the term 'birthday' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'birthday')"}
{"task": "Open the note titled 'Travel Itinerary' and access more options after viewing it", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Travel Itinerary':\n        tap(open_note_titles[i])\n        break\ntap($more_options_note)"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Print the current checklist", "solution": "tap($more_options_checklist)\ntap($print_note)"}
{"task": "Export the current checklist as a file", "solution": "tap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Open the more options menu in the checklist", "solution": "tap($more_options_checklist)"}
{"task": "Remove all done items in the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Create a shortcut for the current note", "solution": "tap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the current note's file", "solution": "tap($more_options_note)\ntap($open_file)"}
{"task": "Open the file of the current note", "solution": "tap($more_options_note)\ntap($open_file)"}
{"task": "Export the current note as a file", "solution": "tap($more_options_note)\ntap($export_as_file)"}
{"task": "Print the current note", "solution": "tap($more_options_note)\ntap($print_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Scroll through the settings page in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Customize the colors of the Notes app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Customize the widget colors in the Notes app", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Open the more options menu for the current note.", "solution": "tap($more_options_note)"}
{"task": "View 'About' information from the more options menu of the current checklist", "solution": "tap($more_options_checklist)\ntap($about)"}
{"task": "Rename the current checklist to 'Grocery List'", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')"}
{"task": "Tap on 'OK' to confirm renaming the current checklist", "solution": "tap($rename_ok)"}
{"task": "Lock the current checklist", "solution": "tap($more_options_checklist)\ntap($lock_note)"}
{"task": "Tap on 'OK' to confirm locking the current checklist", "solution": "tap($lock_note_ok)"}
{"task": "Delete the current note", "solution": "tap($more_options_note); tap($delete_note); tap($delete_note_ok)"}
{"task": "Open the app settings", "solution": "tap($more_options_note); tap($settings)"}
{"task": "Show information about the app", "solution": "tap($more_options_note); tap($about)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Delete the current note", "solution": "tap($more_options_note); tap($delete_note); tap($delete_note_ok)"}
{"task": "In settings, go to Theme and choose Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Open more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set the theme of the app to Dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Choose the White theme for the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Open settings and then set the theme color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Create a shortcut for the note titled 'Travel Plans'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('Travel Plans')[0]\ntap(note)\ntap($more_options_note)\nmore_options_buttons = $more_option_note_buttons\nshortcut_button = more_options_buttons.match('Create shortcut')[0]\ntap(shortcut_button)"}
{"task": "Lock the note titled 'Personal Diary'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('Personal Diary')[0]\ntap(note)\ntap($more_options_note)\nmore_options_buttons = $more_option_note_buttons\nlock_button = more_options_buttons.match('Lock note')[0]\ntap(lock_button)\ntap($lock_note_ok)"}
{"task": "Open more options for the note titled 'Recipes'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('Recipes')[0]\ntap(note)\ntap($more_options_note)"}
{"task": "Open more options for the checklist titled 'Daily Tasks'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nchecklist = open_note_titles.match('Daily Tasks')[0]\ntap(checklist)\ntap($more_options_checklist)"}
{"task": "Save the current note colors", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ncolors_button = $settings.match('Customize colors')[0]\ntap(colors_button)\ntap($save_set_colors)\nback()"}
{"task": "Sort the items in the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the current checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the checklist items by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Print the current note", "solution": "tap($more_options_note)\ntap($print_note)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the settings of the Notes APP.", "solution": "tap($settings)"}
{"task": "Set the font size to 100% in the Notes APP settings.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('100%')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size to 125% in the Notes APP settings.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('125%')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size to 150% in the Notes APP settings.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('150%')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size to 175% in the Notes APP settings.", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('175%')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Open the note titled 'Project Plan'", "solution": "tap($open_note)\nnote_list = $open_note_title_list\nnote = note_list.match('Project Plan')[0]\ntap(note)"}
{"task": "Enable clickable links and emails in notes.", "solution": "tap($more_options_note)\ntap($settings)\nif not get_attributes($set_make_links_and_emails_clickable)['checked']: tap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Disable clickable links and emails in notes.", "solution": "tap($more_options_note)\ntap($settings)\nif get_attributes($set_make_links_and_emails_clickable)['checked']: tap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Enable the use of monospaced font in notes.", "solution": "tap($more_options_note)\ntap($settings)\nif not get_attributes($set_use_monospaced_font)['checked']: tap($set_use_monospaced_font)\nback()"}
{"task": "Disable the use of monospaced font in notes.", "solution": "tap($more_options_note)\ntap($settings)\nif get_attributes($set_use_monospaced_font)['checked']: tap($set_use_monospaced_font)\nback()"}
{"task": "Set the theme color to white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Set the theme color to black and white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Customize the theme color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Tap on 'more options' to open additional settings.", "solution": "tap($more_options_checklist)"}
{"task": "Tap on 'Sort by' to sort the checklist items.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)"}
{"task": "Open the note titled 'Grocery List'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Grocery List':\n        tap(open_note_titles[i])\n        break"}
{"task": "Delete the selected item 'Buy Milk' from the checklist", "solution": "long_tap($checklist_item_list.match({\"selected\": true})[0])\ntap($delete_selected_checklist_item)"}
{"task": "Search the word 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Save the current note", "solution": "tap($save_note)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Show the current font size in the Notes APP settings.", "solution": "tap($settings)\ntap($current_font_size)\nget_attributes($font_size_types.match({'selected':True})[0])"}
{"task": "Open the more options menu for the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings to customize the colors", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Save the customized colors", "solution": "tap($save_set_colors)"}
{"task": "Close the popup window for setting colors", "solution": "tap($close_set_colors)"}
{"task": "Open more options of the current note", "solution": "tap($more_options_note)"}
{"task": "From settings, customize the app colors and set the theme to Dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open settings of the app from the main screen", "solution": "tap($settings)"}
{"task": "Set the font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($settings);tap($set_colors)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set the theme color of the app to blue", "solution": "tap($settings); tap($set_colors); tap($set_theme_color); tap($theme_color_custom)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\n"}
{"task": "Sort the items of the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)\n"}
{"task": "Sort the items of the current checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)\n"}
{"task": "Delete the current checklist", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)\n"}
{"task": "Tap on 'more options' button in the checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist by 'Title'", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist by 'Date Created'", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist by 'Custom'", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Tap on the 'Settings' button after opening 'more options' in the checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Open the app settings", "solution": "tap($settings)"}
{"task": "Show information about the app", "solution": "tap($about)"}
{"task": "Rename the current note to 'Grocery List'", "solution": "tap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Open more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the checklist items by 'Title' after tapping 'more options' and 'Sort by'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)"}
{"task": "Sort the checklist items by 'Date created' after tapping 'more options' and 'Sort by'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)"}
{"task": "Sort the checklist items by 'Custom' after tapping 'more options' and 'Sort by'.", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)"}
{"task": "Confirm the sorting type of checklist items by tapping 'OK' after choosing a sort type.", "solution": "tap($sort_checklist_items_ok)"}
{"task": "Open the settings of the Notes app", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Enable Incognito mode for keyboards in notes.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Disable Incognito mode for keyboards in notes.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Enable line wrap in notes.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_line_wrap)"}
{"task": "Disable line wrap in notes.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_line_wrap)"}
{"task": "Open more options in the current note.", "solution": "tap($more_options_note)"}
{"task": "Rename the current note to 'Grocery List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Show the information of the Notes app", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Rename the current checklist to 'Work Tasks'", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Work Tasks')\ntap($rename_ok)"}
{"task": "Tap on the 'more options' button to open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Tap on the 'Settings' button to open the app settings", "solution": "tap($settings)"}
{"task": "Set the alignment of the app to center", "solution": "tap($settings)\ntap($set_alignment)\n# Assuming the alignment options are shown and we need to set it to center\n# Since the checkbox for center alignment is not specified, assuming we can navigate and select it if presented\ntap(<element_selector_for_center_alignment>)"}
{"task": "Set the theme color to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Open the existing note", "solution": "tap($open_note)\nif len($open_note_title_list) > 0:\n    tap($open_note_title_list[0])"}
{"task": "Create a new text note titled 'Shopping List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new checklist note titled 'To-Do List'", "solution": "tap($create_note)\nset_text($add_note_title, 'To-Do List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Go to the app settings", "solution": "tap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Change the text color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)"}
{"task": "Set the background color of the app to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'blue')"}
{"task": "Change the primary color of the app to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'red')"}
{"task": "Change the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Adjust the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Access more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Create a new text note titled 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Tap on the 'Settings' button after opening 'more options' in the note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Scroll down in the settings page", "solution": "scroll($scroll_settings_page, 'down')"}
{"task": "Exit the settings page by tapping 'Back'", "solution": "tap($exit_settings)"}
{"task": "Tap on 'more options' button in the note", "solution": "tap($more_options_note)"}
{"task": "Set the theme color to custom in the Notes app", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Tap on the 'Customize colors' button to open color customization settings", "solution": "tap($set_colors)"}
{"task": "Select the 'Auto light / dark' checkbox to enable automatic theme switching based on time of day", "solution": "tap($set_theme_color)\ntap($theme_color_auto_light_dark)"}
{"task": "Select the 'light' checkbox to enable the light theme color for the app", "solution": "tap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Tap on the 'App icon color' button to set the app icon color", "solution": "tap($set_app_icon_color)"}
{"task": "Tap on the 'more options' button to open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options in the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Open settings in the notes app.", "solution": "tap($settings)"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Confirm deletion of the current note", "solution": "tap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the app settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Change the font size to large", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Enable the show word count option", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_show_word_count)"}
{"task": "Make links and emails clickable", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Add a note with the title 'To-Do List' and set it to be a checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'To-Do List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Create a new note titled 'Workout Plan' and confirm", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Plan')\ntap($add_note_ok)"}
{"task": "Open the first note in the list", "solution": "tap($open_note)\ntap($open_note_title_list[0])"}
{"task": "Open settings of the Notes app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Rename the current note to 'Grocery List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Set the text color of the app to black", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_black_white.match('Black')[0])\ntap($save_set_colors)"}
{"task": "Set the background color of the app to white", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_background_color)\ntap($theme_color_white.match('White')[0])\ntap($save_set_colors)"}
{"task": "Create a shortcut for my 'Holiday plans' note", "solution": "tap($open_note)\nopen_note_idx = [i for i, e in enumerate($open_note_title_list) if get_text(e) == 'Holiday plans'][0]\ntap($open_note_title_list[open_note_idx])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Create a shortcut for my 'Shopping checklist'", "solution": "tap($open_note)\nopen_note_idx = [i for i, e in enumerate($open_note_title_list) if get_text(e) == 'Shopping checklist'][0]\ntap($open_note_title_list[open_note_idx])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Lock my 'Work project' note", "solution": "tap($open_note)\nopen_note_idx = [i for i, e in enumerate($open_note_title_list) if get_text(e) == 'Work project'][0]\ntap($open_note_title_list[open_note_idx])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Show information about the Notes app", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set the app icon color to green", "solution": "tap($settings)\nset_text($set_app_icon_color, 'green')\ntap($save_set_colors)"}
{"task": "Change the theme color of the app to dark", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app to auto_light_drak", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Switch the theme color of the app to light", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Change the theme color of the app to dark_red", "solution": "tap($settings)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Enable auto light/dark theme color in the app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Set the font size to 50%", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Set the font size to 60%", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Open the settings of the app and navigate to TODO settings", "solution": "tap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($set_colors)"}
{"task": "Set the app icon color to blue", "solution": "tap($set_colors)\ntap($set_app_icon_color)\n# Assuming blue color selection involves tapping a particular element or area in the color picker\n# Here, I will describe the general steps without specific element details which should be identified uniquely.\n# Example placeholder command:\n# tap($blue_color_picker_element)  # Replace with actual element for blue color picker\n# save the chosen color\n tap($save_set_colors)"}
{"task": "Set the theme color to auto light/dark mode", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Set the theme color to light mode", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Use a monospaced font", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_monospaced_font)"}
{"task": "Customize the widget colors", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Access more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Access more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the note titled 'Shopping List'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Shopping List':\n        tap(note_titles[i])\n        break"}
{"task": "Open the settings of the Notes app", "solution": "tap($settings)"}
{"task": "Customize the theme color in the Notes app", "solution": "tap($settings); tap($set_colors); tap($theme_color_types[5]); tap($save_set_colors)"}
{"task": "Increase the font size to 150% in the Notes app", "solution": "tap($settings); tap($set_font_size); tap($font_size_types[5]); back()"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist in the Notes app", "solution": "tap($more_options_checklist)"}
{"task": "Create a new checklist titled 'Weekend Activities'", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Activities')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the most recent note", "solution": "tap($open_note)\ntap($open_note_title_list[0])"}
{"task": "Rename the current note to 'Work Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Work Notes')\ntap($rename_ok)"}
{"task": "Open the more options for the current note and rename it to 'Personal Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Personal Notes')\ntap($rename_ok)"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Open the app settings from the current checklist options", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('settings')[0])"}
{"task": "Scroll through the settings page", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('settings')[0])\nscroll($scroll_settings_page, 'down')"}
{"task": "Customize app colors", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('settings')[0])\ntap($set_colors)"}
{"task": "Customize widget colors", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('settings')[0])\ntap($set_widget_colors)"}
{"task": "Set the font size of the app", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('settings')[0])\ntap($set_font_size)"}
{"task": "Set the font size to 90% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Change the font size to 125% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Show the current font size setting in the Notes app", "solution": "tap($settings)\ntap($current_font_size)\n"}
{"task": "Open the font size customization in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\n"}
{"task": "Search for the text 'meeting notes' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting notes')\n"}
{"task": "Set the theme color of the app to white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Change the theme color of the app to black_white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Customize the theme color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Move the checklist item 'Buy Milk' to the top", "solution": "long_tap($checklist_item_list.match('Buy Milk')[0])\ntap($move_selected_item_to_the_top)"}
{"task": "Delete the checklist item 'Old Task'", "solution": "long_tap($checklist_item_list.match('Old Task')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Rename the checklist item 'Clean the kitchen' to 'Clean the house'", "solution": "long_tap($checklist_item_list.match('Clean the kitchen')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Clean the house')\ntap($rename_ok)"}
{"task": "Move the checklist item 'Finish Assignment' to the bottom", "solution": "long_tap($checklist_item_list.match('Finish Assignment')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Open the note titled 'Work Tasks'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Work Tasks')[0])"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Customize the app colors", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the text color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\n# Assuming the color selection mechanism is via predefined options,\n# add the required API to select 'blue' option here, e.g.,\n# tap($color_option_blue)\n# Save the color selection\ntap($save_set_colors)"}
{"task": "Change the background color to yellow", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\n# Assuming the color selection mechanism is via predefined options,\n# add the required API to select 'yellow' option here, e.g.,\n# tap($color_option_yellow)\n# Save the color selection\ntap($save_set_colors)"}
{"task": "Update the primary color to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\n# Assuming the color selection mechanism is via predefined options,\n# add the required API to select 'green' option here, e.g.,\n# tap($color_option_green)\n# Save the color selection\ntap($save_set_colors)"}
{"task": "Set the theme color to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($close_set_colors)"}
{"task": "Open more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Navigate to settings and customize colors", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Open settings, then customize colors, and set the primary color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)"}
{"task": "Open settings, navigate to customize colors, then set the app icon color to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\n# Assuming green is the first option in a color picker dialog\n# You would choose the correct way to select green in your actual app\n# tap($color_options[0])"}
{"task": "Set the font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()"}
{"task": "Set the font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Show the current font size of the app", "solution": "tap($settings)\nget_text($current_font_size)"}
{"task": "Check the current font size of the app", "solution": "tap($settings)\nget_text($current_font_size)"}
{"task": "Enable line wrap in the notes app settings", "solution": "tap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the notes app", "solution": "tap($settings)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Confirm the current checklist sorting type", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)"}
{"task": "Search for the word 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Find the previous occurrence of the word 'report' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'report')\ntap($prev_matched_text)"}
{"task": "Close the search box", "solution": "tap($close_search_box)"}
{"task": "Create a new note with the title 'Shopping List' and set it to be a checklist", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Create a new text note with the title 'Project Ideas'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open an existing note", "solution": "tap($open_note)\n# Assuming the first note is to be opened\ntap($open_note_title_list[0])"}
{"task": "Add a text note titled 'Daily Journal'", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open settings, then customize colors and set the theme color to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)\nback()"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Move the checklist item 'Email Client' to the bottom", "solution": "long_tap($checklist_item_list.match('Email Client')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Rename the checklist item 'Meeting at 3 PM' to 'Team Meeting'", "solution": "long_tap($checklist_item_list.match('Meeting at 3 PM')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Team Meeting')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Review Report'", "solution": "long_tap($checklist_item_list.match('Review Report')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Open the note titled 'Vacation Plans'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Vacation Plans')[0])"}
{"task": "Tap on the 'more options' button in the current note", "solution": "tap($more_options_note)"}
{"task": "Set the alignment of the app to right", "solution": "tap($settings); tap($set_alignment); tap($alignment_right); tap($alignment_ok); back();"}
{"task": "Set the alignment of the app to center", "solution": "tap($settings); tap($set_alignment); tap($alignment_center); tap($alignment_ok); back();"}
{"task": "Change the theme color of the app", "solution": "tap($settings); tap($set_colors); tap($set_theme_color); tap($theme_color_dark); tap($save_set_colors); back();"}
{"task": "Change the text color of the app", "solution": "tap($settings); tap($set_colors); tap($set_text_color); tap($text_color_dark); tap($save_set_colors); back();"}
{"task": "Change the background color of the app", "solution": "tap($settings); tap($set_colors); tap($set_background_color); tap($background_color_dark); tap($save_set_colors); back();"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Enable clickable links and emails in settings", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Enable monospaced font in settings", "solution": "tap($settings)\ntap($set_use_monospaced_font)"}
{"task": "Set the theme color to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Set the theme color to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Set the theme color to white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Set the theme color to black and white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Set the theme color to custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Find the next occurrence of the word 'budget' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)"}
{"task": "Close the search box for matching text within the current note", "solution": "tap($close_search_box)"}
{"task": "Create a new note titled 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new note titled 'Work Tasks'", "solution": "tap($create_note)\nset_text($add_note_title, 'Work Tasks')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the note titled 'Project Plan'", "solution": "tap($open_note)\n$open_note_title_list.match('Project Plan')[0].tap()"}
{"task": "Set the app icon color to red", "solution": "tap($settings)\nscroll($scroll_settings_page,'down')\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'red')\ntap($save_set_colors)"}
{"task": "Open the theme color settings", "solution": "tap($settings)\nscroll($scroll_settings_page,'down')\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Apply the 'Auto light/dark' theme color", "solution": "tap($settings)\nscroll($scroll_settings_page,'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Set the theme color to dark mode", "solution": "tap($settings)\nscroll($scroll_settings_page,'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the current checklist items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Set the notes app alignment to right", "solution": "tap($settings); tap($set_alignment); tap($alignment_right);"}
{"task": "Close the color settings popup", "solution": "tap($close_set_colors);"}
{"task": "Customize the colors of the notes app", "solution": "tap($settings); tap($set_colors); tap($set_theme_color); tap($theme_color_custom); tap($set_text_color); tap($text_color_custom); tap($set_background_color); tap($background_color_custom); tap($set_primary_color); tap($primary_color_custom); tap($set_app_icon_color); tap($app_icon_color_custom);"}
{"task": "Save the current color settings in the notes app", "solution": "tap($save_set_colors);"}
{"task": "Set the theme color of the notes app to blue", "solution": "tap($settings); tap($set_colors); tap($set_theme_color); tap($theme_color_blue);"}
{"task": "Customize the colors in the app", "solution": "tap($set_colors)"}
{"task": "Save the customized colors", "solution": "tap($save_set_colors)"}
{"task": "Close the color customization window", "solution": "tap($close_set_colors)"}
{"task": "Tap on the 'more options' button for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Scroll to switch to the next item in the Notes app", "solution": "scroll($switch_item, 'down')"}
{"task": "Change theme to a custom color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_types.match('Custom')[0])\ntap($save_set_colors)"}
{"task": "Set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\ntap($sort_checklist_items_ok)"}
{"task": "Show the current font size", "solution": "tap($settings)\ntap($current_font_size)\nfont_size = get_text($current_font_size)\nprint(font_size)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set theme color to dark in app settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_types.match('Dark')[0])\ntap($save_set_colors)"}
{"task": "Enable Incognito mode for keyboards in settings", "solution": "tap($settings)\nif not get_attributes($set_use_incognito_mode_of_keyboards)['checked']:\n    tap($set_use_incognito_mode_of_keyboards)"}
{"task": "Enable line wrap in settings", "solution": "tap($settings)\nif not get_attributes($set_enable_line_wrap)['checked']:\n    tap($set_enable_line_wrap)"}
{"task": "Change the alignment settings in settings", "solution": "tap($settings)\ntap($set_alignment)"}
{"task": "Customize the app colors in settings", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Close the customize colors popup window", "solution": "tap($close_set_colors)"}
{"task": "Open settings to enable showing a note picker on startup", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open settings and disable autosave notes", "solution": "tap($settings)\ntap($set_autosave_notes)"}
{"task": "Open settings and enable displaying save success messages", "solution": "tap($settings)\ntap($set_display_save_success_messages)"}
{"task": "Export current notes", "solution": "tap($settings)\ntap($export_notes)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the note titled 'Shopping List'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_to_open = note_titles.match('Shopping List')[0]\ntap(note_to_open)"}
{"task": "Delete the checklist item 'Milk' in the note titled 'Grocery List'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_to_open = note_titles.match('Grocery List')[0]\ntap(note_to_open)\ntap($more_options_checklist)\ntap($checklist_item_list.match('Milk')[0])\nlong_tap($checklist_item)\ntap($delete_selected_checklist_item)"}
{"task": "Save the current note after editing the content", "solution": "tap($save_note)"}
{"task": "Search for the text 'Meeting' within the note titled 'Work Notes'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_to_open = note_titles.match('Work Notes')[0]\ntap(note_to_open)\ntap($search_within_note)\nset_text($search_text, 'Meeting')\ntap($search_text_next)"}
{"task": "Edit the note titled 'Project Plan' and add a new section 'Timeline'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote_to_open = note_titles.match('Project Plan')[0]\ntap(note_to_open)\nset_text($note_content, get_text($note_content) + '\\n\\nTimeline:\\n')\ntap($save_note)"}
{"task": "Set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($exit_settings)"}
{"task": "Set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($exit_settings)"}
{"task": "Set the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($exit_settings)"}
{"task": "Enable the use of monospaced font in the settings", "solution": "tap($settings)\ntap($set_use_monospaced_font)\ntap($exit_settings)"}
{"task": "Enable incognito mode for keyboards", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($exit_settings)"}
{"task": "Tap on the button to switch to the previous note", "solution": "tap($switch_to_prev_item)"}
{"task": "Read the title of the current note", "solution": "get_text($item_title)"}
{"task": "Tap on the button to switch to the next checklist item", "solution": "tap($switch_to_next_item)"}
{"task": "Check all items listed in the current checklist", "solution": "for item in $checklist_item_list:\n    tap(item)"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Change the text color in the notes app to black", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_text_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Open the more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Change the font size to 200%", "solution": "tap($set_font_size)\ntap($font_size_200%)"}
{"task": "Open my last note", "solution": "tap($open_note)\nnotes = $open_note_title_list\nlast_note = notes[len(notes) - 1]\ntap(last_note)"}
{"task": "Create a new note", "solution": "tap($create_note)\nset_text($add_note_title, 'New Note')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Switch to the previous note", "solution": "tap($switch_to_prev_item)"}
{"task": "Scroll to the next note in the list", "solution": "scroll($switch_item, 'down')"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the note with the title 'Grocery List'", "solution": "tap($open_note)\nnote_list = $open_note_title_list\nnote_to_open = note_list.match('Grocery List')\ntap(note_to_open[0])"}
{"task": "Search the current note for the text 'meeting agenda'", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting agenda')"}
{"task": "Save the current note after editing", "solution": "tap($save_note)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the note titled 'Meeting Notes'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])"}
{"task": "Edit the content of the current note to add 'Call John at 3 PM'", "solution": "set_text($note_content, get_text($note_content) + ' Call John at 3 PM')"}
{"task": "Search for the term 'budget' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Save the changes made to the current note", "solution": "tap($save_note)"}
{"task": "Adjust font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings and check the box for 'set place cursor to the end of note'", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Open the settings and uncheck the box for 'set place cursor to the end of note'", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Open the settings and check the box for 'show keyboard on startup'", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)"}
{"task": "Open the settings and uncheck the box for 'show keyboard on startup'", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)"}
{"task": "Enable line wrap mode in the settings", "solution": "tap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Align the notes to center", "solution": "tap($settings)\ntap($set_alignment)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Close the color settings popup", "solution": "tap($close_set_colors)"}
{"task": "Save the customized colors", "solution": "tap($save_set_colors)"}
{"task": "Open the note titled 'To-Do List' and check off the item 'Call plumber'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote = note_titles.match({'title': 'To-Do List'})[0]\ntap(note)\nchecklist_items = $checklist_item_list\nitem = checklist_items.match({'text': 'Call plumber'})[0]\ntap(item)"}
{"task": "Open the 'more options' menu for the note titled 'Travel Plans'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote = note_titles.match({'title': 'Travel Plans'})[0]\ntap(note)\ntap($more_options_note)"}
{"task": "Scroll through the checklist items in the note titled 'Daily Tasks'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote = note_titles.match({'title': 'Daily Tasks'})[0]\ntap(note)\nscroll($checklist_item_list, 'down')"}
{"task": "Search for 'Conference Call' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'Conference Call')\ntap($search_text_next)"}
{"task": "Delete the checklist item 'Eggs' in the note titled 'Shopping List'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nnote = note_titles.match({'title': 'Shopping List'})[0]\ntap(note)\nchecklist_items = $checklist_item_list\nitem = checklist_items.match({'text': 'Eggs'})[0]\nlong_tap(item)\ntap($delete_selected_checklist_item)"}
{"task": "Change the font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\n"}
{"task": "Change the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\n"}
{"task": "Set the place cursor to the end of the note", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\n"}
{"task": "Set show keyboard on startup", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\n"}
{"task": "Set show a note picker on startup", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\n"}
{"task": "Show me the title of the current note", "solution": "get_text($item_title)"}
{"task": "Open the settings and set the font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '75%'})[0])\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings and set the font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '90%'})[0])\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings and set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '100%'})[0])\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings and set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '125%'})[0])\ntap($sort_checklist_items_ok)"}
{"task": "Edit the content of the current note to 'Complete the project by Friday'", "solution": "set_text($note_content, 'Complete the project by Friday')"}
{"task": "Search the current note for 'birthday party details'", "solution": "tap($search_within_note)\nset_text($search_text, 'birthday party details')"}
{"task": "Edit the note to say 'Buy groceries'", "solution": "set_text($note_content, 'Buy groceries')"}
{"task": "Save the current note", "solution": "tap($save_note)"}
{"task": "Search for the word 'groceries' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'groceries')"}
{"task": "Open app settings from the more options in the current checklist", "solution": "\ntap($more_options_checklist)\ntap($settings)\n"}
{"task": "Customize the app's colors through the settings", "solution": "\ntap($more_options_checklist)\ntap($settings)\ntap($set_colors)\n"}
{"task": "Set the app's theme color to auto light/dark after opening theme settings", "solution": "\ntap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\nback()\n"}
{"task": "Switch the app's theme to light mode through the theme settings", "solution": "\ntap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\nback()\n"}
{"task": "Switch the app's theme color to dark from the theme settings", "solution": "\ntap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()\n"}
{"task": "Enable the show word count option in the Notes app", "solution": "tap($settings)\nif not get_attributes($set_show_word_count)[\"checked\"]: tap($set_show_word_count)\nback()"}
{"task": "Disable the show word count option in the Notes app", "solution": "tap($settings)\nif get_attributes($set_show_word_count)[\"checked\"]: tap($set_show_word_count)\nback()"}
{"task": "Change the alignment settings in the Notes app", "solution": "tap($settings)\ntap($set_alignment)\nback()"}
{"task": "Turn on the make links and emails clickable feature in the Notes app", "solution": "tap($settings)\nif not get_attributes($set_make_links_and_emails_clickable)[\"checked\"]: tap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Turn off the make links and emails clickable feature in the Notes app", "solution": "tap($settings)\nif get_attributes($set_make_links_and_emails_clickable)[\"checked\"]: tap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Open the settings and check the box for 'show a note picker on startup'", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open the settings and uncheck the box for 'show a note picker on startup'", "solution": "tap($settings)\nattributes = get_attributes($set_show_a_note_picker_on_startup)\nif attributes['checked']:\n    tap($set_show_a_note_picker_on_startup)"}
{"task": "Open the settings and check the box for 'autosave notes'", "solution": "tap($settings)\ntap($set_autosave_notes)"}
{"task": "Open the settings and uncheck the box for 'autosave notes'", "solution": "tap($settings)\nattributes = get_attributes($set_autosave_notes)\nif attributes['checked']:\n    tap($set_autosave_notes)"}
{"task": "Open the settings and check the box for 'display save success messages'", "solution": "tap($settings)\ntap($set_display_save_success_messages)"}
{"task": "Set a new theme color for the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()"}
{"task": "Change the text color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\ntap($save_set_colors)\nback()"}
{"task": "Sort the current checklist by Date Created and confirm", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist by Custom and confirm", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current note.", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app.", "solution": "tap($settings)"}
{"task": "Customize the colors of the app.", "solution": "tap($set_colors)"}
{"task": "Set the app's theme color.", "solution": "tap($set_theme_color)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app from the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings of the app from the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Exit the settings page", "solution": "tap($exit_settings)"}
{"task": "Scroll down the settings page", "solution": "scroll($scroll_settings_page, \"down\")"}
{"task": "Switch to using a monospaced font in the Notes app", "solution": "tap($settings)\ntap($set_use_monospaced_font)"}
{"task": "Disable the use of a monospaced font in the Notes app", "solution": "tap($settings)\ntap($set_use_monospaced_font)"}
{"task": "Enable the Incognito mode of keyboards in the Notes app", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Disable the Incognito mode of keyboards in the Notes app", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Turn on the enable line wrap option in the Notes app", "solution": "tap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Open the settings and set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Open the settings and set the font size to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Show the previous occurrence of the word 'groceries' in the note", "solution": "tap($search_within_note)\nset_text($search_text, 'groceries')\ntap($prev_matched_text)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Enable display save success messages in settings", "solution": "tap($settings)\ntap($set_display_save_success_messages)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Change the theme color to dark red using the theme settings menu", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Dark red')[0])\ntap($save_set_colors)"}
{"task": "Set the app's theme to white through the theme settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('White')[0])\ntap($save_set_colors)"}
{"task": "Switch the app's theme to black and white using the theme settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Black & White')[0])\ntap($save_set_colors)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the note titled 'Books to Read'/add the book '1984' to the list", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Books to Read':\n        tap(notes[i])\n        break\ntap($add_checklist_item)\nset_text($add_checklist_item_title, '1984')\ntap($add_checklist_item_ok)"}
{"task": "Edit the content of the current note to add 'Meeting at 3 PM'", "solution": "tap($note_content)\nset_text($note_content, get_text($note_content) + 'Meeting at 3 PM')\ntap($save_note)"}
{"task": "Open the note titled 'Workout Routine' and update the checklist item 'Cardio'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Workout Routine':\n        tap(notes[i])\n        break\nitems = $checklist_item_list\nfor i in range(len(items)):\n    if get_text(items[i]) == 'Cardio':\n        long_tap(items[i])\n        break\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Cardio')\ntap($rename_ok)"}
{"task": "Mark the checklist item 'Finish report' as completed in the note titled 'Work Tasks'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Work Tasks':\n        tap(notes[i])\n        break\nitems = $checklist_item_list\nfor i in range(len(items)):\n    if get_text(items[i]) == 'Finish report':\n        tap(items[i])\n        break"}
{"task": "Open the font size settings and set the font to 300%", "solution": "tap($settings)\ntap($set_font_size)\nelements = $font_size_types\nfor i in range(len(elements)):\n    if get_text(elements[i]) == '300%':\n        tap(elements[i])\n        break\ntap($font_size_types[len(elements)-1])"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Set the font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($settings)"}
{"task": "Set the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($settings)"}
{"task": "Enable 'Place cursor to the end of note'", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\ntap($settings)"}
{"task": "Enable 'Show keyboard on startup'", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)\ntap($settings)"}
{"task": "Open the settings and uncheck the box for 'display save success messages'", "solution": "tap($settings)\nset_text($set_display_save_success_messages, False)"}
{"task": "Open the settings and tap 'export notes'", "solution": "tap($settings)\ntap($export_notes)"}
{"task": "Open the checklist options", "solution": "tap($more_options_checklist)"}
{"task": "Sort the checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the app icon color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\n# Assuming we have a function to set the specific color to blue\nset_color_to_blue()"}
{"task": "Change the theme color of the app to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Enable auto light/dark theme for the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)"}
{"task": "Set the theme color to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Enable automatic backups in settings", "solution": "tap($settings)\nif not get_attributes($set_enable_automatic_backups)[\"checked\"]:\n    tap($set_enable_automatic_backups)"}
{"task": "Export notes in settings", "solution": "tap($settings)\ntap($export_notes)"}
{"task": "Import notes in settings", "solution": "tap($settings)\ntap($import_notes)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Access more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the app settings and set the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Go to the more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Enter settings and enable 'place cursor to the end of note'", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Navigate to settings and enable 'show keyboard on startup'", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)"}
{"task": "Turn off the enable line wrap option in the Notes app", "solution": "tap($settings); set_text($search_within_settings, 'Enable line wrap'); tap($set_line_wrap); back();"}
{"task": "Open the settings menu in the Notes app", "solution": "tap($settings);"}
{"task": "Check more options for the current note in the Notes app", "solution": "tap($more_options_note);"}
{"task": "Check more options for the current checklist in the Notes app", "solution": "tap($more_options_checklist);"}
{"task": "Turn on autosave for notes", "solution": "tap($settings); set_text($search_within_settings, 'Autosave notes'); tap($set_autosave_notes); back();"}
{"task": "Sort the checklist by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Confirm the sort type for the checklist", "solution": "tap($sort_checklist_items_ok)"}
{"task": "Open the settings page through checklist more options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Open the settings page through note more options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Scroll through the settings page", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Scroll up the settings page", "solution": "scroll($scroll_settings_page, 'up')"}
{"task": "Customize the colors of the app", "solution": "tap($set_colors)\n# Assuming customization details for colors might vary and there's no explicit instruction on what color settings to apply.\n# Following steps will open the customization options as per interaction design.\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($set_text_color)\ntap($set_background_color)\ntap($set_primary_color)\ntap($set_app_icon_color)\ntap($save_set_colors)\ntap($close_set_colors)\n"}
{"task": "Customize the colors of the widget", "solution": "tap($set_widget_colors)"}
{"task": "Set the font size of the app", "solution": "tap($set_font_size)\n# Choose the desired font size, for example, 150%\ntap($font_size_150%)\ntap($font_size_100%)  # Add this line if resetting to the original font size afterwards is required\n"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Confirm renaming the note", "solution": "tap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($lock_note)"}
{"task": "Confirm locking the note", "solution": "tap($lock_note_ok)"}
{"task": "Delete the current note", "solution": "tap($delete_note)"}
{"task": "Confirm deletion of the note", "solution": "tap($delete_note_ok)"}
{"task": "Enable 'Show a note picker on startup'", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\nattributes = get_attributes($set_show_a_note_picker_on_startup)\nif not attributes['checked']:\n    tap($set_show_a_note_picker_on_startup)"}
{"task": "Enable 'Autosave notes'", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\nattributes = get_attributes($set_autosave_notes)\nif not attributes['checked']:\n    tap($set_autosave_notes)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open settings", "solution": "tap($settings)"}
{"task": "Set app font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Set the theme color to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Set the app theme to Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "View more options of the current note", "solution": "tap($more_options_note)"}
{"task": "View more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist items by tapping 'Sort by' and then confirm with 'OK'", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_ok)"}
{"task": "Turn off autosave for notes", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_autosave_notes)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Turn on display of save success messages", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_display_save_success_messages)"}
{"task": "Turn off display of save success messages", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_display_save_success_messages)"}
{"task": "Set the app's theme to auto light/dark.", "solution": "tap($settings);\ntap($set_colors);\ntap($set_theme_color);\ntap($theme_color_auto_light_dark);\ntap($save_set_colors);"}
{"task": "Set the app's theme to light.", "solution": "tap($settings);\ntap($set_colors);\ntap($set_theme_color);\ntap($theme_color_light);\ntap($save_set_colors);"}
{"task": "Set the app's theme to dark.", "solution": "tap($settings);\ntap($set_colors);\ntap($set_theme_color);\ntap($theme_color_dark);\ntap($save_set_colors);"}
{"task": "Set the app's theme to dark red.", "solution": "tap($settings);\ntap($set_colors);\ntap($set_theme_color);\ntap($theme_color_dark_red);\ntap($save_set_colors);"}
{"task": "Set the app's theme to white.", "solution": "tap($settings);\ntap($set_colors);\ntap($set_theme_color);\ntap($theme_color_white);\ntap($save_set_colors);"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Rename the current checklist to 'Shopping List'", "solution": "tap($more_options_checklist_buttons.match({'id': 'rename note'}))"}
{"task": "Confirm renaming the checklist", "solution": "set_text($rename_input, 'Shopping List')\ntap($rename_ok)"}
{"task": "Remove done items from the current checklist", "solution": "tap($more_options_checklist_buttons.match({'id': 'remove done items'}))"}
{"task": "Sort the items of the current checklist by name", "solution": "tap($more_options_checklist_buttons.match({'id': 'sort by'}))\ntap($sort_checklist_items.match({'id': 'title type'}))\ntap($sort_checklist_items_ok)"}
{"task": "Customize the app colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($close_set_colors)"}
{"task": "Customize the widget colors", "solution": "tap($settings)\ntap($set_widget_colors)\n# Assume there is a save button for widget colors, not listed explicitly in the provided elements\ntap($save_set_colors)"}
{"task": "Open the note titled 'Meeting Minutes'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nmatch_note = open_note_titles.match('Meeting Minutes')\ntap(match_note[0])"}
{"task": "Search for the term 'deadline' within the note titled 'Project Plan'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nmatch_note = open_note_titles.match('Project Plan')\ntap(match_note[0])\ntap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Edit the content of the note titled 'Shopping List' and add 'milk, eggs, and bread'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nmatch_note = open_note_titles.match('Shopping List')\ntap(match_note[0])\nset_text($note_content, get_text($note_content) + '\\nmilk, eggs, and bread')\ntap($save_note)"}
{"task": "Export all notes", "solution": "tap($settings)\ntap($export_notes)"}
{"task": "Import notes from a file", "solution": "tap($settings)\ntap($import_notes)"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist items by Date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Set app font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({\"selected\": false})[6])\ntap($sort_checklist_items_ok)"}
{"task": "Set app font size to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({\"selected\": false})[7])\ntap($sort_checklist_items_ok)"}
{"task": "Set app font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({\"selected\": false})[8])\ntap($sort_checklist_items_ok)"}
{"task": "Set app font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({\"selected\": false})[9])\ntap($sort_checklist_items_ok)"}
{"task": "Set app font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({\"selected\": false})[10])\ntap($sort_checklist_items_ok)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings from more options in the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open settings from more options in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize app colors from settings", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the theme of the app to Auto light / dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the app settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Exit the settings page", "solution": "tap($exit_settings)"}
{"task": "Customize the app colors in the settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Within settings, enable 'show a note picker on startup'", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Open the settings menu and activate 'autosave notes'", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_autosave_notes)"}
{"task": "In the settings, turn on 'display save success messages'", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_display_save_success_messages)"}
{"task": "Print the current note about 'Meeting Minutes'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Meeting Minutes':\n        tap(open_note_titles[i])\n        break\ntap($more_options_note)\ntap($print_note)"}
{"task": "Delete the current note titled 'Shopping List'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Shopping List':\n        tap(open_note_titles[i])\n        break\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open a note titled 'Shopping List'", "solution": "tap($open_note); \n tap($open_note_title_list.match('Shopping List')[0])"}
{"task": "Create a new note titled 'Meeting Agenda'", "solution": "tap($create_note); \n set_text($add_note_title, 'Meeting Agenda'); \n tap($add_note_ok)"}
{"task": "Rename the current note to 'Project Plan'", "solution": "tap($more_options_note); \n tap($rename_note); \n set_text($rename_input, 'Project Plan'); \n tap($rename_ok)"}
{"task": "Add a checklist item 'Buy milk' to the note", "solution": "tap($add_checklist_item); \n set_text($add_checklist_item_title, 'Buy milk'); \n tap($add_checklist_item_ok)"}
{"task": "Create a shortcut for the note 'Travel Itinerary'", "solution": "tap($open_note); \n tap($open_note_title_list.match('Travel Itinerary')[0]); \n tap($more_options_note); \n tap($create_shortcut)"}
{"task": "Sort the current checklist items by Custom", "solution": "tap($sort_checklist_items)\ntap($custom_type)"}
{"task": "Confirm the sort type of the current checklist", "solution": "tap($sort_checklist_items_ok)"}
{"task": "Open the settings page from the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings page from the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Lock the note 'Passwords'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match(\"Passwords\")\ntap(notes[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the file attached to the note 'Budget Report'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match(\"Budget Report\")\ntap(notes[0])\ntap($more_options_note)\ntap($open_file)"}
{"task": "Open more options for the note 'Daily Journal'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match(\"Daily Journal\")\ntap(notes[0])\ntap($more_options_note)"}
{"task": "Confirm the new note with the title 'Workout Routine'", "solution": "tap($create_note)\nset_text($add_note_title, \"Workout Routine\")\ntap($add_note_ok)"}
{"task": "Open more options for the checklist 'To-Do List'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match(\"To-Do List\")\ntap(notes[0])\ntap($more_options_checklist)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Create a new note titled 'Grocery List' and confirm", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)"}
{"task": "Open an existing note", "solution": "tap($open_note)\ntap($open_note_title_list[0])"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Go to the settings menu", "solution": "tap($settings)"}
{"task": "Set the font size to 60%", "solution": "tap($set_font_size); tap($font_size_60%)"}
{"task": "Set the font size to 75%", "solution": "tap($set_font_size); tap($font_size_75%)"}
{"task": "Set the font size to 90%", "solution": "tap($set_font_size); tap($font_size_90%)"}
{"task": "Customize the widget colors in the settings", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Set the font size in the app settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Scroll the settings page", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Enable incognito mode for keyboards", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Set the theme of the app to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\nback()"}
{"task": "Set the theme of the app to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()"}
{"task": "Set the theme of the app to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\nback()"}
{"task": "Set the theme of the app to white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\nback()"}
{"task": "Set the theme of the app to black and white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\nback()"}
{"task": "Scroll through the settings page", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Exit the settings page", "solution": "tap($settings)\ntap($exit_settings)"}
{"task": "Open a new note", "solution": "tap($open_note)"}
{"task": "Create a new note titled 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new checklist note", "solution": "tap($create_note)\nset_text($add_note_title, 'New Checklist')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the Settings to enable the dark mode", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Show information about the Notes app", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Rename the current note from 'Work Tasks' to 'Project Checklist' and confirm", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Checklist')\ntap($rename_ok)"}
{"task": "Lock the current note about 'Personal Diary'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote_titles = [get_text(note) for note in open_note_titles]\nfor idx, title in enumerate(note_titles):\n    if title == 'Personal Diary':\n        tap(open_note_titles[idx])\n        tap($more_options_note)\n        tap($lock_note)\n        tap($lock_note_ok)\n        break"}
{"task": "Print the current checklist titled 'Grocery Items'", "solution": "open_note_titles = $open_note_title_list\nnote_titles = [get_text(note) for note in open_note_titles]\nfor idx, title in enumerate(note_titles):\n    if title == 'Grocery Items':\n        tap(open_note_titles[idx])\n        tap($more_options_checklist)\n        tap($print_note)\n        break"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Modify the font size to 100%", "solution": "tap($current_font_size)\ntap($font_size_100%)"}
{"task": "Change the font size to 125%", "solution": "tap($current_font_size)\ntap($font_size_125%)"}
{"task": "Set the font size to 150%", "solution": "tap($current_font_size)\ntap($font_size_150%)"}
{"task": "Adjust the font size to 175%", "solution": "tap($current_font_size)\ntap($font_size_175%)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Create a shortcut for the current note", "solution": "tap($more_options_note)\ntap($create_shortcut)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the file of the current note", "solution": "tap($more_options_note)\ntap($open_file)"}
{"task": "Export the current note as a file", "solution": "tap($more_options_note)\ntap($export_as_file)"}
{"task": "Set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('100%')[0])"}
{"task": "Set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('125%')[0])"}
{"task": "Set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('150%')[0])"}
{"task": "Open the font size settings", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "View the current font size", "solution": "tap($settings)\ntap($current_font_size)"}
{"task": "Go to settings", "solution": "tap($settings)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Enable line wrap", "solution": "tap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Set alignment of the app to center", "solution": "tap($settings)\ntap($set_alignment)\ntap($alignment_center)"}
{"task": "Close the color customization popup", "solution": "tap($close_set_colors)"}
{"task": "Set the theme of the app to custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\ntap($exit_settings)"}
{"task": "Open the settings from the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings from the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Show the information of the app from the current note", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Show the information of the app from the current checklist", "solution": "tap($more_options_checklist)\ntap($about)"}
{"task": "Update the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($sort_checklist_items_ok)"}
{"task": "Increase the font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Tap the 'Open Note' button to view my most recent note", "solution": "tap($open_note)\nopen_note_title_list = $open_note_title_list\nif len(open_note_title_list) > 0:\n    tap(open_note_title_list[0])"}
{"task": "Rename the note titled 'Meeting Notes' to 'Project Meeting Notes'", "solution": "tap($open_note)\nlong_tap($open_note_title_list.match('Meeting Notes')[0])\ntap($rename_note)\nset_text($rename_input, 'Project Meeting Notes')\ntap($rename_ok)"}
{"task": "Create a shortcut for the note 'Grocery List'", "solution": "tap($open_note)\nlong_tap($open_note_title_list.match('Grocery List')[0])\ntap($create_shortcut)"}
{"task": "Lock the checklist 'Weekend Tasks'", "solution": "tap($open_note)\nlong_tap($open_note_title_list.match('Weekend Tasks')[0])\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the file of the note 'Ideas for Blog'", "solution": "tap($open_note)\nlong_tap($open_note_title_list.match('Ideas for Blog')[0])\ntap($open_file)"}
{"task": "Export the note 'Travel Plan' as a file", "solution": "tap($open_note)\nlong_tap($open_note_title_list.match('Travel Plan')[0])\ntap($export_as_file)"}
{"task": "Create a new text note", "solution": "tap($create_note)\nset_text($add_note_title, \"New Note\")\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Add a new note titled 'Meeting Notes' and select text note type", "solution": "tap($create_note)\nset_text($add_note_title, \"Meeting Notes\")\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Add a new note titled 'Todo List' and select checklist type", "solution": "tap($create_note)\nset_text($add_note_title, \"Todo List\")\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Rename the current note to 'Updated Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, \"Updated Notes\")\ntap($rename_ok)"}
{"task": "Rename the current checklist to 'Updated Checklist'", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, \"Updated Checklist\")\ntap($rename_ok)"}
{"task": "Save the current note after adding 'Call the plumber' at the end", "solution": "set_text($note_content, get_text($note_content) + 'Call the plumber');tap($save_note)"}
{"task": "Open more options for the note titled 'Vacation Ideas'", "solution": "tap($open_note);tap($open_note_title_list.match('Vacation Ideas')[0])"}
{"task": "In the note titled 'To-Do List', search for 'gym' and go to the next match", "solution": "tap($open_note);tap($open_note_title_list.match('To-Do List')[0]);tap($search_within_note);set_text($search_text, 'gym');tap($next_matchhed_text)"}
{"task": "Edit the content of the note titled 'Recipe' and change '1 cup of sugar' to '1/2 cup of sugar'", "solution": "tap($open_note);tap($open_note_title_list.match('Recipe')[0]);set_text($note_content, get_text($note_content).replace('1 cup of sugar', '1/2 cup of sugar'));tap($save_note)"}
{"task": "Search for 'budget' within the note titled 'Financial Plan'", "solution": "tap($open_note);tap($open_note_title_list.match('Financial Plan')[0]);tap($search_within_note);set_text($search_text, 'budget');tap($next_matchhed_text)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app in the settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Customize the widget colors in the settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_widget_colors)"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove all done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort items in the current checklist", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types[0])\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the checklist items by Custom", "solution": "tap($sort_checklist_items)\ntap($custom_type)"}
{"task": "Confirm the sorting of the checklist items", "solution": "tap($sort_checklist_items_ok)"}
{"task": "Customize the app colors", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Save the customized colors", "solution": "tap($save_set_colors)"}
{"task": "Set the theme color of the app to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open more options in the note", "solution": "tap($more_options_note)"}
{"task": "Edit the content of the current note to 'Meeting minutes for September 2023'", "solution": "tap($note_content)\nset_text($note_content, 'Meeting minutes for September 2023')\ntap($save_note)"}
{"task": "Print the note 'Recipe for Lasagna'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Recipe for Lasagna')\ntap(notes[0])\ntap($more_options_note)\noptions = $more_option_note_buttons.match('Print')\ntap(options[0])"}
{"task": "Rename the checklist 'Household Chores' to 'Weekend Chores'", "solution": "tap($open_note)\nchecklists = $open_note_title_list.match('Household Chores')\ntap(checklists[0])\ntap($more_options_checklist)\noptions = $more_option_checklist_buttons.match('Rename note')\ntap(options[0])\nset_text($rename_input, 'Weekend Chores')\ntap($rename_ok)"}
{"task": "Create a shortcut for the checklist 'Daily Workout Plan'", "solution": "tap($open_note)\nchecklists = $open_note_title_list.match('Daily Workout Plan')\ntap(checklists[0])\ntap($more_options_checklist)\noptions = $more_option_checklist_buttons.match('Create shortcut')\ntap(options[0])"}
{"task": "Lock the note 'Personal Diary'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Personal Diary')\ntap(notes[0])\ntap($more_options_note)\noptions = $more_option_note_buttons.match('Lock note')\ntap(options[0])\ntap($lock_note_ok)"}
{"task": "Open the file of the checklist 'Shopping List'", "solution": "tap($open_note)\nchecklists = $open_note_title_list.match('Shopping List')\ntap(checklists[0])\ntap($more_options_checklist)\noptions = $more_option_checklist_buttons.match('Open file')\ntap(options[0])"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the About section in the Notes app", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Rename the current note to 'Grocery List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Tap the 'Open Note' button to edit the note titled 'Grocery List'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor note in note_titles:\n    if get_text(note) == 'Grocery List':\n        tap(note)\n        break"}
{"task": "Tap the 'Open Note' button to delete the note titled 'Meeting Notes'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor note in note_titles:\n    if get_text(note) == 'Meeting Notes':\n        tap(note)\n        break\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Scroll to switch to the previous item using the scrollbar", "solution": "scroll($switch_item, \"up\")"}
{"task": "Tap the 'more options' button to archive the current checklist", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('archive'))"}
{"task": "Tap the 'switch to next item' button to view the next note in the list", "solution": "tap($switch_to_next_item)"}
{"task": "Set the font size to large in the settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($sort_checklist_items_ok)"}
{"task": "Check the current font size in the settings", "solution": "tap($settings)\ntap($current_font_size)\nfont_size = [size for size in $font_size_types if get_attributes(size)[\"selected\"]][0]\ncurrent_font_size = get_text(font_size)\ncurrent_font_size"}
{"task": "Enable the show word count option in the settings", "solution": "tap($settings)\nif not get_attributes($set_show_word_count)[\"checked\"]:\n    tap($set_show_word_count)"}
{"task": "Enable the option to make links and emails clickable in the settings", "solution": "tap($settings)\nif not get_attributes($set_make_links_and_emails_clickable)[\"checked\"]:\n    tap($set_make_links_and_emails_clickable)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "In the note titled 'Book Quotes', search for 'courage' and go to the previous match", "solution": "tap($open_note)\n$open_note_title_list.match('Book Quotes')[0].tap()\ntap($search_within_note)\nset_text($search_text, 'courage')\ntap($prev_matched_text)"}
{"task": "Edit the note titled 'Daily Journal' by deleting the last entry", "solution": "tap($open_note)\n$open_note_title_list.match('Daily Journal')[0].tap()\ntext = get_text($note_content)\nentries = text.split('\\n')\nnew_text = '\\n'.join(entries[:-1])\nset_text($note_content, new_text)"}
{"task": "Save the note titled 'Workout Routine' after making edits", "solution": "tap($open_note)\n$open_note_title_list.match('Workout Routine')[0].tap()\ntap($note_content)\n# perform the edits here\nset_text($note_content, 'Your edited content here')\ntap($save_note)"}
{"task": "Open more options for the note titled 'Travel Checklist'", "solution": "tap($open_note)\n$open_note_title_list.match('Travel Checklist')[0].tap()\ntap($more_options_note)"}
{"task": "Search for 'appointment' within the current note and go to the next match", "solution": "tap($search_within_note)\nset_text($search_text, 'appointment')\ntap($next_matchhed_text)"}
{"task": "Open 'Meeting Notes' note", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Meeting Notes':\n        tap(notes[i])\n        break"}
{"task": "Add the text 'Discuss Q4 targets' to the current note", "solution": "tap($note_content)\nset_text($note_content, 'Discuss Q4 targets')\ntap($save_note)"}
{"task": "Search for the word 'deadline' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Find the next occurrence of 'budget' in the note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)"}
{"task": "Find the previous occurrence of 'timeline' in the note", "solution": "tap($search_within_note)\nset_text($search_text, 'timeline')\ntap($prev_matched_text)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Scroll through the settings page", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")"}
{"task": "Customize the app colors", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Customize the widget colors", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Create a text note", "solution": "tap($open_note)\ntap($create_note)\ntap($text_note_type)\nset_text($add_note_title, \"New Text Note\")\ntap($add_note_ok)"}
{"task": "Search the word 'deadline' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Find the previous occurrence of the word 'budget' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')\ntap($prev_matched_text)"}
{"task": "Find the next occurrence of the word 'project' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($next_matchhed_text)"}
{"task": "Close the search box", "solution": "tap($close_search_box)"}
{"task": "Open the Notes app and create a new text note", "solution": "tap($create_note)\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Save the color settings of the app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Tap the 'switch to prev item' button to view the previous checklist in the list", "solution": "tap($switch_to_prev_item)"}
{"task": "Tap the 'create_note' button to start a new note titled 'Travel Itinerary'", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Itinerary')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Tap the 'create_note' button to start a new checklist titled 'Packing List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Packing List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Scroll through the items using the 'switch_item' scrollbar", "solution": "scroll($switch_item, 'down')"}
{"task": "View the title of the current item by looking at the 'item_title' text", "solution": "get_text($item_title)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Set the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%['Auto light / dark'])"}
{"task": "Close the search box", "solution": "tap($close_search_box)"}
{"task": "Create a new note titled 'Project Plan'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Plan')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Add 'Timeline and milestones' as the content for the new note", "solution": "tap($note_content)\nset_text($note_content, 'Timeline and milestones')\ntap($save_note)"}
{"task": "Open the options for 'Groceries List' note", "solution": "tap($open_note)\n$open_note_title_list.match({'title': 'Groceries List'})[0].tap()\ntap($more_options_note)"}
{"task": "Create a new note titled 'Grocery List' with note type 'Text'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the note titled 'Birthday Wishes'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Birthday Wishes')[0])"}
{"task": "Edit the note titled 'Ideas for Blog' and add a new entry 'Explore AI in Healthcare'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Ideas for Blog')[0])\ntap($note_content)\nset_text($note_content, get_text($note_content) + '\\nExplore AI in Healthcare')\ntap($save_note)\nback()"}
{"task": "Change the app icon color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\ntap($theme_color_custom.match({'text': 'blue'})[0])\ntap($save_set_colors)\nback()"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Open the Notes app and create a new checklist", "solution": "tap($create_note)\ntap($add_note_types[1])\ntap($add_note_ok)"}
{"task": "Open the Notes app and rename the current note to 'Grocery List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "Open the Notes app and lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the Notes app and create a shortcut for the current note", "solution": "tap($more_options_note)\ntap($create_shortcut)"}
{"task": "Lock the current note after accessing more options", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Create a checklist", "solution": "tap($create_note)\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open an existing note", "solution": "tap($open_note)\n# assumes you want to open the first note\nnote_titles = $open_note_title_list\nif len(note_titles) > 0:\n    tap(note_titles[0])"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Create a shortcut for the current note", "solution": "tap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open 'more options' for the current note", "solution": "tap($more_options_note)"}
{"task": "Set the font size to 60%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Set the font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Set the font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)"}
{"task": "Set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Export the checklist 'Birthday Party Plan' as a file", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list.match('Birthday Party Plan')\ntap(open_note_titles[0])\ntap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Print the checklist 'Fitness Goals'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list.match('Fitness Goals')\ntap(open_note_titles[0])\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Open the note titled 'Grocery List'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list.match('Grocery List')\ntap(open_note_titles[0])"}
{"task": "Search for the keyword 'project' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($next_matchhed_text)"}
{"task": "Save the changes made to the note", "solution": "tap($save_note)"}
{"task": "Create a new note titled 'Meeting Tasks' with note type 'Checklist'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Tasks')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the note titled 'Shopping List'.", "solution": "tap($open_note)\nnotes_list = $open_note_title_list\nnote_to_open = notes_list.match('Shopping List')[0]\ntap(note_to_open)"}
{"task": "Rename the note titled 'Vacation Plans' to 'Holiday Plans'.", "solution": "tap($open_note)\nnotes_list = $open_note_title_list\nnote_to_rename = notes_list.match('Vacation Plans')[0]\ntap(note_to_rename)\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Holiday Plans')\ntap($rename_ok)"}
{"task": "Create a shortcut for the note titled 'Project Ideas'.", "solution": "tap($open_note)\nnotes_list = $open_note_title_list\nnote_to_shortcut = notes_list.match('Project Ideas')[0]\ntap(note_to_shortcut)\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Lock the note titled 'Sensitive Information'.", "solution": "tap($open_note)\nnotes_list = $open_note_title_list\nnote_to_lock = notes_list.match('Sensitive Information')[0]\ntap(note_to_lock)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Switch to the note before the current one using the 'switch_to_prev_item' button", "solution": "tap($switch_to_prev_item)"}
{"task": "Switch to the note after the current one using the 'switch_to_next_item' button", "solution": "tap($switch_to_next_item)"}
{"task": "Use the 'more options' button to mark the current checklist as completed", "solution": "tap($more_options_checklist)"}
{"task": "Scroll the settings page", "solution": "scroll($scroll_settings_page, 'down')"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Customize the app colors", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set the app theme to auto light/dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)"}
{"task": "Change the app theme to light mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)"}
{"task": "Set the app theme to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)"}
{"task": "Open 'more options' for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings from 'more options' of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open settings from 'more options' of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Enable 'Use monospaced font' in settings", "solution": "tap($settings)\nif not get_attributes($set_use_monospaced_font)['checked']:\n    tap($set_use_monospaced_font)"}
{"task": "Disable 'Use monospaced font' in settings", "solution": "tap($settings)\nif get_attributes($set_use_monospaced_font)['checked']:\n    tap($set_use_monospaced_font)"}
{"task": "Lock the current checklist after accessing more options", "solution": "tap($more_options_checklist)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current note after accessing more options", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Delete the current checklist after accessing more options", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove the done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the current checklist items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Set the text color of the app", "solution": "tap($settings); tap($set_colors); tap($set_text_color);"}
{"task": "Set the background color of the app", "solution": "tap($settings); tap($set_colors); tap($set_background_color);"}
{"task": "Set the primary color of the app", "solution": "tap($settings); tap($set_colors); tap($set_primary_color);"}
{"task": "Close the color setting popup window", "solution": "tap($settings); tap($set_colors); tap($close_set_colors);"}
{"task": "Search within the current note", "solution": "tap($search_within_note); set_text($search_text, 'keyword to search'); tap($next_matchhed_text);"}
{"task": "Check the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\n# The font size options are in the form of checkboxes. We'll need to check which checkbox is selected.\nfont_sizes = [$font_size_50%, $font_size_60%, $font_size_75%, $font_size_90%, $font_size_100%, $font_size_125%, $font_size_150%, $font_size_175%, $font_size_200%, $font_size_250%, $font_size_300%]\nfor font_size in font_sizes:\n    if get_attributes(font_size)['selected']:\n        print(get_text(font_size))\n        break"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Edit the note content to include 'Meeting at 10 AM'", "solution": "tap($note_content)\nset_text($note_content, 'Meeting at 10 AM')"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Scroll to the previous matching search result within the current note", "solution": "tap($prev_matched_text)"}
{"task": "Open the first note in the note title list", "solution": "tap($open_note_title_list[0])"}
{"task": "Type 'Buy milk' in the current note", "solution": "tap($note_content)\nset_text($note_content, 'Buy milk')"}
{"task": "Export the note titled 'Budget 2023' as a file.", "solution": "tap($open_note)\nnotes = $open_note_title_list\nbudget_note = notes.match('Budget 2023')[0]\ntap(budget_note)\ntap($more_options_note)\nexport_button = $more_options_note_buttons.match('Export as file')[0]\ntap(export_button)"}
{"task": "Open the file attached to the note titled 'User Manual'.", "solution": "tap($open_note)\nnotes = $open_note_title_list\nuser_manual_note = notes.match('User Manual')[0]\ntap(user_manual_note)\ntap($more_options_note)\nfile_button = $more_options_note_buttons.match('Open file')[0]\ntap(file_button)"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Go to the app settings", "solution": "tap($settings)"}
{"task": "Go to settings from the note options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Go to settings from the checklist options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize the app colors", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Customize the widget colors", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Change the font size in the app", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Close the search box in the current note", "solution": "tap($close_search_box)"}
{"task": "Create a new note with the title 'Meeting Notes'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($add_note_ok)"}
{"task": "Open an existing note", "solution": "tap($open_note)\ntap($open_note_title_list[0])"}
{"task": "Create a new note and select 'Text Note' type", "solution": "tap($create_note)\nset_text($add_note_title, '')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new note and select 'Checklist' type", "solution": "tap($create_note)\nset_text($add_note_title, '')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Sort the current checklist items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size to 90% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)"}
{"task": "Set the font size to 100% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)"}
{"task": "Set the font size to 125% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Enable 'Use Incognito mode of keyboards' in settings", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Disable 'Use Incognito mode of keyboards' in settings", "solution": "tap($settings)\nif get_attributes($set_use_incognito_mode_of_keyboards)[\"selected\"]:\n    tap($set_use_incognito_mode_of_keyboards)"}
{"task": "Enable 'Enable line wrap' in settings", "solution": "tap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Disable 'Enable line wrap' in settings", "solution": "tap($settings)\nif get_attributes($set_enable_line_wrap)[\"selected\"]:\n    tap($set_enable_line_wrap)"}
{"task": "Set alignment in settings", "solution": "tap($settings)\ntap($set_alignment)"}
{"task": "Switch the app theme to dark red mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Set the app theme to white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Activate the Black & White theme for the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Enable making links and emails clickable", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\n"}
{"task": "Change the font to monospaced", "solution": "tap($settings)\ntap($set_use_monospaced_font)\n"}
{"task": "Enable the option to show a note picker on startup", "solution": "tap($settings)\nif not get_attributes($set_show_a_note_picker_on_startup)['selected']:\n    tap($set_show_a_note_picker_on_startup)\ntap($exit_settings)"}
{"task": "Disable the option to show a note picker on startup", "solution": "tap($settings)\nif get_attributes($set_show_a_note_picker_on_startup)['selected']:\n    tap($set_show_a_note_picker_on_startup)\ntap($exit_settings)"}
{"task": "Enable the autosave notes feature", "solution": "tap($settings)\nif not get_attributes($set_autosave_notes)['selected']:\n    tap($set_autosave_notes)\ntap($exit_settings)"}
{"task": "Disable the autosave notes feature", "solution": "tap($settings)\nif get_attributes($set_autosave_notes)['selected']:\n    tap($set_autosave_notes)\ntap($exit_settings)"}
{"task": "Enable the display save success messages option", "solution": "tap($settings)\nif not get_attributes($set_display_save_success_messages)['selected']:\n    tap($set_display_save_success_messages)\ntap($exit_settings)"}
{"task": "Check the current font size", "solution": "tap($settings)\ntap($current_font_size)\nfont_size = get_attributes($font_size_types.match({'selected': True})[0])['checked']"}
{"task": "Show the word count in the app", "solution": "tap($settings)\nif not get_attributes($set_show_word_count)['checked']:\n    tap($set_show_word_count)"}
{"task": "Open the note titled 'Grocery List'", "solution": "tap($open_note)\ntitles = $open_note_title_list.match('Grocery List')\nif len(titles) > 0:\n    tap(titles[0])"}
{"task": "Search for the term 'Meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'Meeting')"}
{"task": "Rename the selected checklist item to 'Buy Milk'", "solution": "long_tap($checklist_item)\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Buy Milk')\ntap($rename_ok)"}
{"task": "Set the background color of the app to blue", "solution": "tap($settings)\nsroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_background_color)\nset_text($customize_background_color, 'blue')\ntap($save_set_colors)"}
{"task": "Set the primary color of the app to green", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_primary_color)\nset_text($customize_primary_color, 'green')\ntap($save_set_colors)"}
{"task": "Set the app icon color to red", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($customize_app_icon_color, 'red')\ntap($save_set_colors)"}
{"task": "Set the theme color of the app to light", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app to dark", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Disable the display save success messages option", "solution": "tap($settings)\nif get_attributes($set_display_save_success_messages)[\"checked\"]:\n    tap($set_display_save_success_messages)\nback()"}
{"task": "Export all notes", "solution": "tap($settings)\ntap($export_notes)\nback()"}
{"task": "Import notes from a file", "solution": "tap($settings)\ntap($import_notes)\nback()"}
{"task": "Enable automatic backups", "solution": "tap($settings)\nif not get_attributes($set_enable_automatic_backups)[\"checked\"]:\n    tap($set_enable_automatic_backups)\nback()"}
{"task": "Disable automatic backups", "solution": "tap($settings)\nif get_attributes($set_enable_automatic_backups)[\"checked\"]:\n    tap($set_enable_automatic_backups)\nback()"}
{"task": "Customize colors in settings", "solution": "\ntap($settings)\ntap($set_colors)\n"}
{"task": "Close the set colors popup window", "solution": "\ntap($close_set_colors)\n"}
{"task": "Save the colors in the set colors screen", "solution": "\ntap($save_set_colors)\n"}
{"task": "Search for the word 'meeting' within the current note", "solution": "\ntap($search_within_note)\nset_text($search_text, 'meeting')\n"}
{"task": "Edit the content of the current note to add 'Remember to buy milk' at the end", "solution": "\ncurrent_content = get_text($note_content)\nnew_content = current_content + '\\nRemember to buy milk'\nset_text($note_content, new_content)\ntap($save_note)\n"}
{"task": "Set the font size to 150% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('150%')[0])"}
{"task": "Set the font size to 175% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('175%')[0])"}
{"task": "Set the font size to 200% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('200%')[0])"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Disable line wrap", "solution": "tap($settings)\ntap($set_enable_line_wrap)"}
{"task": "Set the alignment to center in the app", "solution": "tap($settings)\ntap($set_alignment)\ntap($alignment_center)"}
{"task": "Set the alignment to left in the app", "solution": "tap($settings)\ntap($set_alignment)\ntap($alignment_left)"}
{"task": "Set the alignment to right in the app", "solution": "tap($settings)\ntap($set_alignment)\ntap($alignment_right)"}
{"task": "Open settings", "solution": "tap($settings)"}
{"task": "Customize the text color of the app to blue", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_text_color)\ntap($set_theme_color.match('Custom'))\nset_text($search_text, 'blue')\ntap($save_set_colors)"}
{"task": "Change the app icon color to red", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_app_icon_color)\ntap($set_theme_color.match('Custom'))\nset_text($search_text, 'red')\ntap($save_set_colors)"}
{"task": "Set the background color of the app to white", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_background_color)\ntap($set_theme_color.match('Custom'))\nset_text($search_text, 'white')\ntap($save_set_colors)"}
{"task": "Update the primary color of the app to green", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_primary_color)\ntap($set_theme_color.match('Custom'))\nset_text($search_text, 'green')\ntap($save_set_colors)"}
{"task": "Set the theme color to dark mode and save the changes", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Confirm the creation of a new note", "solution": "tap($create_note)\n tap($add_note_ok)"}
{"task": "Rename the current note to 'Project Plan'", "solution": "tap($rename_note)\n set_text($rename_input, 'Project Plan')\n tap($rename_ok)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Create a shortcut for the current note", "solution": "tap($more_options_note)\n tap($create_shortcut)"}
{"task": "Delete the selected checklist item 'Finish Homework'", "solution": "tap($checklist_item_list.match('Finish Homework')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Save the current note titled 'Project Ideas'", "solution": "open_note_titles = $open_note_title_list\nproject_idea_note = open_note_titles.match('Project Ideas')[0]\ntap(project_idea_note)\ntap($save_note)"}
{"task": "Edit the content of the note titled 'Vacation Plans' to include 'Visit Eiffel Tower'", "solution": "open_note_titles = $open_note_title_list\ntap($open_note)\nvacation_plan_note = open_note_titles.match('Vacation Plans')[0]\ntap(vacation_plan_note)\nset_text($note_content, get_text($note_content) + ' Visit Eiffel Tower')\ntap($save_note)"}
{"task": "Check the status of the checklist item 'Call Doctor'", "solution": "tap($checklist_item_list.match('Call Doctor')[0])"}
{"task": "Open more options of the note titled 'Weekly Report'", "solution": "open_note_titles = $open_note_title_list\ntap($open_note)\nweekly_report_note = open_note_titles.match('Weekly Report')[0]\ntap(weekly_report_note)\ntap($more_options_note)"}
{"task": "Activate Incognito mode for keyboards", "solution": "tap($settings);tap($set_use_incognito_mode_of_keyboards);back()"}
{"task": "Enable line wrapping", "solution": "tap($settings);tap($set_enable_line_wrap);back()"}
{"task": "Change the alignment settings", "solution": "tap($settings);tap($set_alignment);back()"}
{"task": "Customize the app colors", "solution": "tap($settings);tap($set_colors);set_text($set_theme_color,'Black & White');set_text($set_text_color,'#000000');set_text($set_background_color,'#FFFFFF');set_text($set_primary_color,'#FF0000');set_text($set_app_icon_color,'#FF0000');"}
{"task": "Save the customized colors", "solution": "tap($save_set_colors);back()"}
{"task": "Change the app theme to White.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('White')[0])\ntap($save_set_colors)"}
{"task": "Open the settings of the current note.", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)"}
{"task": "Set the app theme color to Black & White.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Black & White')[0])\ntap($save_set_colors)"}
{"task": "Set the app theme color to Custom.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('Custom')[0])\ntap($save_set_colors)"}
{"task": "Open the settings of the Notes app to configure the #todo section", "solution": "tap($settings)"}
{"task": "Go back from settings page", "solution": "back()"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the app settings from the current note options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Find the previous occurrence of 'deadline' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)"}
{"task": "Find the next occurrence of 'project' in the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($next_matchhed_text)"}
{"task": "Set the primary color of the app to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($theme_color_custom)\nset_text($set_primary_color, 'red')\ntap($save_set_colors)"}
{"task": "Open more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings and customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Adjust the app colors and save the new settings", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Access the settings from the app's more options menu", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize colors in settings", "solution": "tap($settings);tap($set_colors)"}
{"task": "Close the customize colors popup", "solution": "tap($close_set_colors)"}
{"task": "Save the customized colors", "solution": "tap($save_set_colors)"}
{"task": "Set the theme color to blue", "solution": "tap($set_theme_color);$theme_color_types.match('Blue')[0]"}
{"task": "Set the theme color to dark mode", "solution": "tap($set_theme_color);$theme_color_types.match('dark')[0]"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Change the font size to 150%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('150%')[0])\ntap($set_font_size_ok)"}
{"task": "Change the font size to 175%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('175%')[0])\ntap($set_font_size_ok)"}
{"task": "Set the app theme color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Tap 'more options' on the current note", "solution": "tap($more_options_note)"}
{"task": "Tap 'Settings' after tapping 'more options' on the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Tap 'Settings' after tapping 'more options' on the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Toggle 'show keyboard on startup' checkbox after tapping 'Settings'", "solution": "tap($settings)\ntap($set_show_keyboard_on_startup)"}
{"task": "Select and rename the checklist item 'Read Book' to 'Complete Book'", "solution": "long_tap($checklist_item_list.match('Read Book'))\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Complete Book')\ntap($rename_ok)"}
{"task": "Select and delete the checklist item 'Water Plants'", "solution": "long_tap($checklist_item_list.match('Water Plants'))\ntap($delete_selected_checklist_item)"}
{"task": "Add 'New Task' as a checklist item", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'New Task')\ntap($add_checklist_item_ok)"}
{"task": "Scroll through the checklist items and select 'Exercise'", "solution": "scroll($checklist_item_list, 'down')\ntap($checklist_item_list.match('Exercise'))"}
{"task": "Scroll through the note titles and open 'Gym Schedule'", "solution": "tap($open_note)\nscroll($open_note_title_list, 'down')\ntap($open_note_title_list.match('Gym Schedule'))"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Tap on 'More options' in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the current checklist items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Show the title of the current item", "solution": "print(get_text($item_title))"}
{"task": "Show the list of all checklist items", "solution": "print([get_text(item) for item in $checklist_item_list])"}
{"task": "Show the content and state of the first checklist item", "solution": "first_checklist_item = $checklist_item_list[0]\nprint({'content': get_text(first_checklist_item), 'attributes': get_attributes(first_checklist_item)})"}
{"task": "Add a new checklist item called 'Buy groceries'", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy groceries')\ntap($add_checklist_item_ok)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings from the note options", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings from the checklist options", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Set the alignment of the app to left", "solution": "tap($settings)\ntap($set_alignment)"}
{"task": "Create a new text note titled 'Grocery List' and confirm", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new checklist note titled 'Weekend To-Do' and confirm", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend To-Do')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the note 'Meeting Minutes'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Minutes')[0])"}
{"task": "Rename the note 'Meeting Minutes' to 'Project Meeting'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Minutes')[0])\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Meeting')\ntap($rename_ok)"}
{"task": "Create a shortcut for the note 'Travel Itinerary'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Travel Itinerary')[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Set the text color to red", "solution": "tap($settings); scroll($scroll_settings_page, 'down'); tap($set_colors); tap($set_text_color); tap($theme_color_custom); tap($save_set_colors); back(); back();"}
{"task": "Set the text color to black", "solution": "tap($settings); scroll($scroll_settings_page, 'down'); tap($set_colors); tap($set_text_color); tap($theme_color_black_white); tap($save_set_colors); back(); back();"}
{"task": "Set the background color to white", "solution": "tap($settings); scroll($scroll_settings_page, 'down'); tap($set_colors); tap($set_background_color); tap($theme_color_white); tap($save_set_colors); back(); back();"}
{"task": "Set the background color to black", "solution": "tap($settings); scroll($scroll_settings_page, 'down'); tap($set_colors); tap($set_background_color); tap($theme_color_black_white); tap($save_set_colors); back(); back();"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Toggle 'show a note picker on startup' checkbox after tapping 'Settings'", "solution": "tap($settings)\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Toggle 'autosave notes' checkbox after tapping 'Settings'", "solution": "tap($settings)\ntap($set_autosave_notes)"}
{"task": "Toggle 'display save success messages' checkbox after tapping 'Settings'", "solution": "tap($settings)\ntap($set_display_save_success_messages)"}
{"task": "Tap 'export notes' after tapping 'Settings'", "solution": "tap($settings)\ntap($export_notes)"}
{"task": "Tap 'import notes' after tapping 'Settings'", "solution": "tap($settings)\ntap($import_notes)"}
{"task": "Change the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\nback()"}
{"task": "Change the font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\nback()"}
{"task": "Change the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\nback()"}
{"task": "Display the current font size of the app", "solution": "tap($settings)\ntext_size = get_text($current_font_size)\nback()\ntext_size"}
{"task": "Set the cursor to place at the end of the note when editing", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\nback()"}
{"task": "Open the Notes app and create a new note titled 'Meeting Notes'", "solution": "tap($open_note)\ntap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($add_note_ok)"}
{"task": "Open the Notes app and rename the current note to 'Shopping List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)"}
{"task": "Open the Notes app and create a shortcut for the note titled 'Daily Tasks'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Daily Tasks':\n        tap(open_note_titles[i])\n        break\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the Notes app and lock the note titled 'Private Journal'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Private Journal':\n        tap(open_note_titles[i])\n        break\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the Notes app and open the file for the note titled 'Project Plan'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Project Plan':\n        tap(open_note_titles[i])\n        break\ntap($more_options_note)\ntap($open_file)"}
{"task": "Set the app font size to 50%.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_types.match('50%'))"}
{"task": "Set the app font size to 60%.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_types.match('60%'))"}
{"task": "Set the app font size to 150%", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_types.match('150%'))"}
{"task": "Set the app font size to 100%", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_types.match('100%'))"}
{"task": "Open about section in the notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($about)"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Set the alignment of the app after opening settings from the more options menu for the current note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_alignment)"}
{"task": "Set the alignment of the app after opening settings from the more options menu for the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_alignment)"}
{"task": "Customize the colors of the app by opening the settings menu from the more options menu for the current note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Customize the colors of the app by opening the settings menu from the more options menu for the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Sort the items in the current checklist by Custom", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match({'text': 'sort by'})[0])\ntap($sort_checklist_items_types.match({'text': 'Custom'})[0])\ntap($sort_checklist_items_ok)"}
{"task": "Exit the settings page", "solution": "tap($exit_settings)"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Go to the settings page from the notes main screen", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Scroll through the settings page", "solution": "scroll($scroll_settings_page, 'down')"}
{"task": "Close the search box in the note titled 'Financial Plan'.", "solution": "tap($open_note)\nset_text($search_text, 'Financial Plan')\ntap($open_note_title_list.match('Financial Plan')[0])\ntap($close_search_box)"}
{"task": "Open a note and check if it contains the word 'Project'.", "solution": "tap($open_note)\n# Assuming the note title is known and located in the open_note_title_list\ntap($open_note_title_list.match('')[0])\nset_text($search_text, 'Project')\ntap($search_text)\nresult = 'Project' in get_text($note_content)\nback()\nprint(result)"}
{"task": "Start creating a new note and set its title to 'Daily Journal'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($add_note_ok)"}
{"task": "Create a new checklist note and include items like 'Passport', 'Tickets', 'Charger'.", "solution": "tap($create_note)\ntap($checklist_type)\nset_text($add_note_title, 'New Checklist')\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Passport')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Tickets')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Charger')\ntap($add_checklist_item_ok)"}
{"task": "Open the most recently edited note.", "solution": "tap($open_note)\ntap($open_note_title_list[0])"}
{"task": "Rename the current note to 'Meeting Minutes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Minutes')\ntap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort checklist items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Go to the app settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the theme color to light", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Lock the note 'Personal Diary'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Personal Diary')[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Go to settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Set the font size to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)"}
{"task": "Close the color settings popup by clicking the close button", "solution": "tap($close_set_colors)"}
{"task": "Save the color settings by clicking the save button", "solution": "tap($save_set_colors)"}
{"task": "Set the theme color of the app after opening the color settings", "solution": "tap($set_colors)\ntap($set_theme_color)"}
{"task": "Set the text color of the app after opening the color settings", "solution": "tap($set_colors)\ntap($set_text_color)"}
{"task": "Set the background color of the app after opening the color settings", "solution": "tap($set_colors)\ntap($set_background_color)"}
{"task": "Search within the current note for the term 'deadline'.", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Go to the previous search result of 'deadline' in the current note.", "solution": "tap($prev_matched_text)"}
{"task": "Find the next occurrence of 'deadline' in the current note.", "solution": "tap($next_matchhed_text)"}
{"task": "Close the search box of the current note after searching for 'goals'.", "solution": "tap($search_within_note)\nset_text($search_text, 'goals')\ntap($close_search_box)"}
{"task": "Open the note's more options", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Enable incognito mode for keyboards", "solution": "tap($settings)\nset_text($set_use_incognito_mode_of_keyboards, 'true')"}
{"task": "Disable incognito mode for keyboards", "solution": "tap($settings)\nset_text($set_use_incognito_mode_of_keyboards, 'false')"}
{"task": "Enable line wrap", "solution": "tap($settings)\nset_text($set_enable_line_wrap, 'true')"}
{"task": "Open the Notes app and export the note titled 'Recipe' as a file", "solution": "# Open the Notes app and export the note titled 'Recipe' as a file\n\ntap($open_note)\nnotes = $open_note_title_list\nrecipe_note = notes.match('Recipe')[0]\ntap(recipe_note)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Open the Notes app and print the note titled 'Travel Itinerary'", "solution": "# Open the Notes app and print the note titled 'Travel Itinerary'\n\ntap($open_note)\nnotes = $open_note_title_list\ntravel_itinerary_note = notes.match('Travel Itinerary')[0]\ntap(travel_itinerary_note)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Open the Notes app and delete the note titled 'Old Reminders'", "solution": "# Open the Notes app and delete the note titled 'Old Reminders'\n\ntap($open_note)\nnotes = $open_note_title_list\nold_reminders_note = notes.match('Old Reminders')[0]\ntap(old_reminders_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the Notes app and open the note titled 'Workout Routine'", "solution": "# Open the Notes app and open the note titled 'Workout Routine'\n\ntap($open_note)\nnotes = $open_note_title_list\nworkout_routine_note = notes.match('Workout Routine')[0]\ntap(workout_routine_note)"}
{"task": "Open the Notes app and add a new note about 'Birthday Gift Ideas'", "solution": "# Open the Notes app and add a new note about 'Birthday Gift Ideas'\n\ntap($create_note)\nset_text($add_note_title, 'Birthday Gift Ideas')\ntap($add_note_ok)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Customize the colors of the widget", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Set the font size of the app", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Show the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\nget_text($current_font_size)"}
{"task": "Open the latest note", "solution": "tap($open_note)\nopen_notes = $open_note_title_list\nopen_notes_len = len(open_notes)\ntap(open_notes[open_notes_len - 1])"}
{"task": "Open the app settings", "solution": "tap($settings)"}
{"task": "Customize the widget colors for the Notes app", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings menu in the Notes app", "solution": "tap($settings)"}
{"task": "Set the primary color of the app after opening the color settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)"}
{"task": "Set the app icon color after opening the color settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Remove completed items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open the checklist's more options", "solution": "tap($more_options_checklist)"}
{"task": "Open app settings", "solution": "tap($settings)"}
{"task": "Customize the note app colors", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Customize the widget colors", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Set the font size of the app", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Open the Notes APP and create a new text note titled 'Grocery List'.", "solution": "tap($open_note)\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the Notes APP and create a new checklist note for 'Daily Workout Routine'.", "solution": "tap($open_note)\ntap($create_note)\nset_text($add_note_title, 'Daily Workout Routine')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the Notes APP, access the more options of the note titled 'Project Ideas', and rename it to 'Updated Project Ideas'.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Project Ideas':\n        tap(note_titles[i])\n        break\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Updated Project Ideas')\ntap($rename_ok)"}
{"task": "Open the Notes APP and create a shortcut for the note titled 'Meeting Agenda'.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Meeting Agenda':\n        tap(note_titles[i])\n        break\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open the Notes APP, access the more options of the checklist titled 'Travel Packing List', and create a shortcut for it.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Travel Packing List':\n        tap(note_titles[i])\n        break\ntap($more_options_checklist)\ntap($create_shortcut)"}
{"task": "Set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\nback()"}
{"task": "Set the font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\nback()"}
{"task": "Set the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\nback()"}
{"task": "Show the current font size", "solution": "tap($settings)\ntap($current_font_size)\n"}
{"task": "Set cursor to be placed at the end of the note", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\n"}
{"task": "Set the font size to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('175%')[0])"}
{"task": "Set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('200%')[0])"}
{"task": "Set the font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('250%')[0])"}
{"task": "Set the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match('300%')[0])"}
{"task": "Enable 'Place cursor to the end of note'", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Set the font size in the Notes app to large", "solution": "tap($settings); tap($set_font_size); tap($font_size_150%); tap($current_font_size)"}
{"task": "Show the current font size in the Notes app", "solution": "tap($settings); tap($current_font_size); selected_size = get_attributes($font_size_types.match({'selected': True})); print(f\"Current font size: {selected_size}\")"}
{"task": "Enable word count display in the Notes app", "solution": "tap($settings); if not get_attributes($set_show_word_count)['checked']: tap($set_show_word_count)"}
{"task": "Activate clickable links and emails in the Notes app", "solution": "tap($settings); if not get_attributes($set_make_links_and_emails_clickable)['checked']: tap($set_make_links_and_emails_clickable)"}
{"task": "Switch to using a monospaced font in the Notes app", "solution": "tap($settings); if not get_attributes($set_use_monospaced_font)['checked']: tap($set_use_monospaced_font)"}
{"task": "Create a new note titled 'Shopping List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Switch to the previous note", "solution": "tap($switch_to_prev_item)"}
{"task": "Switch to the next note", "solution": "tap($switch_to_next_item)"}
{"task": "Open the checklist options", "solution": "tap($more_options_checklist)"}
{"task": "View the current note's title", "solution": "get_text($item_title)"}
{"task": "Enable 'Show keyboard on startup'", "solution": "tap($settings)\nselect_state = get_attributes($set_show_keyboard_on_startup)[\"selected\"]\nif not select_state:\n\ttap($set_show_keyboard_on_startup)"}
{"task": "Enable 'Show a note picker on startup'", "solution": "tap($settings)\nselect_state = get_attributes($set_show_a_note_picker_on_startup)[\"selected\"]\nif not select_state:\n\ttap($set_show_a_note_picker_on_startup)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the Notes app", "solution": "tap($settings)"}
{"task": "Change the theme color of the Notes app to White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Open the settings in the app", "solution": "tap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the app to Light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app to Dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app to Dark Red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Sort the items in the checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the items in the checklist by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Enable showing keyboard on startup", "solution": "tap($settings)\nfor _ in range(3):\n    scroll($scroll_settings_page, 'down')\ntap($set_show_keyboard_on_startup)\nback()"}
{"task": "Disable showing keyboard on startup", "solution": "tap($settings)\nfor _ in range(3):\n    scroll($scroll_settings_page, 'down')\nif get_attributes($set_show_keyboard_on_startup)['checked']:\n    tap($set_show_keyboard_on_startup)\nback()"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Show the information of the app", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Check the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\nfont_sizes = $font_size_types\nfor idx, font_size in enumerate(font_sizes):\n    if get_attributes(font_size)['selected']:\n        current_font_size = get_text(font_size)\n        break\ncurrent_font_size"}
{"task": "Enable the option to show word count", "solution": "tap($settings)\nattributes = get_attributes($set_show_word_count)\nif not attributes['selected']:\n    tap($set_show_word_count)\nback()"}
{"task": "Enable clickable links and emails", "solution": "tap($settings)\nattributes = get_attributes($set_make_links_and_emails_clickable)\nif not attributes['selected']:\n    tap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Enable the use of monospaced font", "solution": "tap($settings)\nattributes = get_attributes($set_use_monospaced_font)\nif not attributes['selected']:\n    tap($set_use_monospaced_font)\nback()"}
{"task": "Enable the incognito mode for keyboards", "solution": "tap($settings)\nattributes = get_attributes($set_use_incognito_mode_of_keyboards)\nif not attributes['selected']:\n    tap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Scroll through the notes and checklists", "solution": "scroll($switch_item, 'down')\nscroll($switch_item, 'up')"}
{"task": "Check the list of all checklist items", "solution": "tap($checklist_item_list)"}
{"task": "Open a note titled 'Grocery List'", "solution": "tap($open_note)\nnote_list = $open_note_title_list\nfor note in note_list:\n    if get_text(note) == 'Grocery List':\n        tap(note)\n        break"}
{"task": "Create a new note with the title 'Meeting Minutes'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Minutes')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Create a new checklist note titled 'Workout Routine'", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Routine')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Turn on Incognito mode for the keyboard in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Enable line wrap in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_line_wrap)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Set the theme color of the app to White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\nback()"}
{"task": "Set the theme color of the app to Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)\nback()"}
{"task": "Set the theme color of the app to Custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)\nback()"}
{"task": "Enable the Auto Light/Dark theme color option", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\nback()"}
{"task": "Set the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)\nback()"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Enable dark theme color for the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open the Notes APP, access the more options of the note titled 'Recipe Ideas', and lock it.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Recipe Ideas')[0])\ntap($more_options_note)\ntap($lock_note)"}
{"task": "Open the Notes APP, access the more options of the checklist titled 'Books to Read', and lock it.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Books to Read')[0])\ntap($more_options_checklist)\ntap($lock_note)"}
{"task": "Open the Notes APP and open the note file for 'Weekly Summary'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Weekly Summary')[0])\ntap($open_file)"}
{"task": "Open the Notes APP and open the checklist file for 'Shopping List'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Shopping List')[0])\ntap($open_file)"}
{"task": "Open the current note and edit the content to say 'Buy groceries'.", "solution": "tap($open_note)\ntap($note_content)\nset_text($note_content, 'Buy groceries')\ntap($save_note)"}
{"task": "Set the theme color of the Notes app to Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'text': 'Black & White'}))\ntap($save_set_colors)"}
{"task": "Customize the theme color of the Notes app to Custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'text': 'Custom'}))\ntap($save_set_colors)"}
{"task": "Reduce the font size of the Notes app to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '50%'}))\ntap($exit_settings)"}
{"task": "Increase the font size of the Notes app to 60%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '60%'}))\ntap($exit_settings)"}
{"task": "Set the font size of the Notes app to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '75%'}))\ntap($exit_settings)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the app colors", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the theme color of the app to light", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app to dark", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app to dark red", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Rename the current note to 'Project Plan'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Plan')\ntap($rename_ok)"}
{"task": "Create a shortcut for the note titled 'Daily Journal'", "solution": "tap($open_note)\n$open_note_title_list.match('Daily Journal')[0].tap()\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "Lock the note titled 'Work Schedule'", "solution": "tap($open_note)\n$open_note_title_list.match('Work Schedule')[0].tap()\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the file attached to the note titled 'Expense Report'", "solution": "tap($open_note)\n$open_note_title_list.match('Expense Report')[0].tap()\ntap($more_options_note)\ntap($open_file)"}
{"task": "Export the note titled 'Travel Itinerary' as a file", "solution": "tap($open_note)\n$open_note_title_list.match('Travel Itinerary')[0].tap()\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Delete the note that's currently open", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Access more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Remove the completed items from the checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the checklist items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the checklist items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Save the current note.", "solution": "tap($save_note)"}
{"task": "Search for the word 'meeting' within the current note.", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Tap the 'Next' button to find the next occurrence of 'project' within the note.", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($next_matchhed_text)"}
{"task": "Tap the 'Previous' button to find the previous occurrence of 'deadline' within the note.", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)"}
{"task": "Close the search box after searching within the current note.", "solution": "tap($close_search_box)"}
{"task": "Set the font size to 60%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)\nback()"}
{"task": "Set the font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()"}
{"task": "Set the font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Customize the colors of the Notes app", "solution": "tap($settings); tap($set_colors)"}
{"task": "Open the theme settings and set the theme color to dark", "solution": "tap($settings); tap($set_theme_color); tap($theme_color_dark)"}
{"task": "Launch the app and customize the text color to blue", "solution": "tap($settings); tap($set_text_color); set_text($set_text_color, 'blue')"}
{"task": "Sort the checklist items by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Confirm the deletion of the current note", "solution": "tap($delete_note_ok)"}
{"task": "Choose the option to delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)"}
{"task": "Save the current sort type of the checklist", "solution": "tap($sort_checklist_items_ok)"}
{"task": "Close the current color customization window", "solution": "tap($close_set_colors)"}
{"task": "Customize the app colors", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the theme color to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\nback()"}
{"task": "Set the text color to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)\n# Assuming there's a way to pick color blue, not explicitly defined\n# e.g., tap($text_color_blue)\nback()"}
{"task": "Set the background color to grey", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\n# Assuming there's a way to pick color grey, not explicitly defined\n# e.g., tap($background_color_grey)\nback()"}
{"task": "Set the primary color to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\n# Assuming there's a way to pick color green, not explicitly defined\n# e.g., tap($primary_color_green)\nback()"}
{"task": "Print the note titled 'Recipe for Lasagna'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nnote_to_print = notes.match('Recipe for Lasagna')[0]\ntap(note_to_print)\ntap($more_options_note)\nmore_options = $more_option_note_buttons.match('print note')[0]\ntap(more_options)"}
{"task": "Tap on 'Open Note'", "solution": "tap($open_note)"}
{"task": "Tap on 'More Options'", "solution": "tap($more_options_note)"}
{"task": "Edit the content of the current note to 'Meeting notes at 10 am'", "solution": "set_text($note_content, 'Meeting notes at 10 am')\ntap($save_note)"}
{"task": "Tap on 'Search' within the current note", "solution": "tap($search_within_note)"}
{"task": "Tap the 'More options' button to see additional features for the current note.", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings", "solution": "tap($settings)"}
{"task": "Customize the colors in the settings", "solution": "\nscript = '''\ntap($settings)\ntap($set_colors)\n'''"}
{"task": "Open Settings", "solution": "tap($settings)"}
{"task": "Customize theme colors", "solution": "\nopen_settings_script = '''\ntap($settings)\n'''\n\ncustomize_theme_script = '''\ntap($set_colors)\ntap($set_theme_color)\n'''\n\nscript = open_settings_script + customize_theme_script\n\nprint(script)"}
{"task": "Change theme to dark red", "solution": "\nopen_settings_script = '''\ntap($settings)\n'''\n\ncustomize_theme_script = '''\ntap($set_colors)\ntap($set_theme_color)\n'''\n\nchange_theme_script = '''\nif not get_attributes($theme_color_types.match('Dark red')[0])['selected']:\n    tap($theme_color_types.match('Dark red')[0])\n'''\n\nsave_theme_script = '''\ntap($customize_primary_ok)\n'''\n\nfull_script = open_settings_script + customize_theme_script + change_theme_script + save_theme_script\n\nprint(full_script)"}
{"task": "Change theme to white", "solution": "\nopen_settings_script = '''\ntap($settings)\n'''\n\ncustomize_theme_script = '''\ntap($set_colors)\ntap($set_theme_color)\n'''\n\nchange_theme_script = '''\nif not get_attributes($theme_color_types.match('White')[0])['selected']:\n    tap($theme_color_types.match('White')[0])\n'''\n\nsave_theme_script = '''\ntap($customize_primary_ok)\n'''\n\nfull_script = open_settings_script + customize_theme_script + change_theme_script + save_theme_script\n\nprint(full_script)"}
{"task": "Change theme to black & white", "solution": "\nopen_settings_script = '''\ntap($settings)\n'''\n\ncustomize_theme_script = '''\ntap($set_colors)\ntap($set_theme_color)\n'''\n\nchange_theme_script = '''\nif not get_attributes($theme_color_types.match('Black & White')[0])['selected']:\n    tap($theme_color_types.match('Black & White')[0])\n'''\n\nsave_theme_script = '''\ntap($customize_primary_ok)\n'''\n\nfull_script = open_settings_script + customize_theme_script + change_theme_script + save_theme_script\n\nprint(full_script)"}
{"task": "Set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Set the font size to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nback()"}
{"task": "Set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\nback()"}
{"task": "Set the font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\nback()"}
{"task": "Set the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\nback()"}
{"task": "Set the alignment in the Notes app", "solution": "tap($settings)\ntap($set_alignment)"}
{"task": "Customize the colors in the Notes app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Save the customized colors in the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($save_set_colors)"}
{"task": "Tap the 'More options' button in the current note", "solution": "tap($more_options_note)"}
{"task": "Tap the 'More options' button in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the app settings", "solution": "tap($settings)"}
{"task": "Open color customization settings for the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Save the colors in the color customization settings", "solution": "tap($settings)\ntap($set_colors)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Set the app icon color to red", "solution": "tap($settings); tap($set_colors); tap($set_app_icon_color); set_text($app_icon_color, 'red');"}
{"task": "Save the customized colors of the app", "solution": "tap($settings); tap($set_colors); tap($save_set_colors);"}
{"task": "Enable auto light/dark theme for the app", "solution": "tap($settings); tap($set_colors); tap($set_theme_color); tap($theme_color_auto_light_dark);"}
{"task": "Set the theme color to white mode", "solution": "tap($settings); tap($set_colors); tap($set_theme_color); tap($theme_color_white);"}
{"task": "Create a new note with the title 'Meeting Notes'", "solution": "tap($create_note); set_text($add_note_title, 'Meeting Notes'); tap($text_note_type); tap($add_note_ok);"}
{"task": "Access app settings and change the background color to yellow", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'yellow')\ntap($save_set_colors)"}
{"task": "Set the primary color of the app to green", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'green')\ntap($save_set_colors)"}
{"task": "Change the app icon color to red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\nset_text($set_app_icon_color, 'red')\ntap($save_set_colors)"}
{"task": "Enable Auto light/dark theme mode in theme settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Select the light theme in theme settings", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app to white", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Set the theme color of the app to black and white", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Set a custom theme color for the app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Set the font size of the app to 50%", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_50%)\nback()"}
{"task": "Set the font size of the app to 60%", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_font_size)\ntap($font_size_60%)\nback()"}
{"task": "Set the theme color to Dark Red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Set the theme color to White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Set the theme color to Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Set the theme color to Custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Set the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Input 'budget' in the search box", "solution": "tap($search_within_note)\nset_text($search_text, 'budget')"}
{"task": "Tap on 'Previous' to find the previous occurrence", "solution": "tap($prev_matched_text)"}
{"task": "Tap on 'Next' to find the next occurrence", "solution": "tap($next_matchhed_text)"}
{"task": "Close the search box", "solution": "tap($close_search_box)"}
{"task": "Create a new note with the title 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)"}
{"task": "Open the Settings from the more options in the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the Settings from the more options in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize the colors in the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the text color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)"}
{"task": "Set the background color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)"}
{"task": "Add a new note of type 'text note'", "solution": "tap($create_note)\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Add a new note of type 'checklist'", "solution": "tap($create_note)\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Show the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\nget_text($current_font_size)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the third note in the list", "solution": "tap($open_note)\ntap($open_note_title_list[2])"}
{"task": "Create a new note with the title 'Meeting Notes'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open more options for the current note and access settings", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open more options for the current checklist and access customize colors", "solution": "tap($more_options_checklist)\ntap($set_colors)"}
{"task": "Set a custom theme by accessing customize colors in settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Select dark_red from the theme color types", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Open more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Set the font size of the app to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\n"}
{"task": "Set the font size of the app to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\n"}
{"task": "Set the font size of the app to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\n"}
{"task": "Set the font size of the app to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\n"}
{"task": "Set the font size of the app to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\n"}
{"task": "Open a note titled 'Shopping List'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nidx = None\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Shopping List':\n        idx = i\n        break\ntap(open_note_titles[idx])"}
{"task": "Search for the term 'Q3 Budget' within the note titled 'Finance Plan'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nidx = None\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Finance Plan':\n        idx = i\n        break\ntap(open_note_titles[idx])\ntap($search_within_note)\nset_text($search_text, 'Q3 Budget')"}
{"task": "Create a new checklist with the title 'Groceries'", "solution": "tap($create_note)\nset_text($add_note_title, 'Groceries')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Rename the current note titled 'Work Tasks' to 'Office Tasks'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Office Tasks')\ntap($rename_ok)"}
{"task": "Close the search box after searching within the note 'Holiday Plans'", "solution": "tap($open_note)\nopen_note_titles = $open_note_title_list\nidx = None\nfor i in range(len(open_note_titles)):\n    if get_text(open_note_titles[i]) == 'Holiday Plans':\n        idx = i\n        break\ntap(open_note_titles[idx])\ntap($search_within_note)\n# perform any search operation here\n# and then close the search box\ntap($close_search_box)"}
{"task": "Enable show keyboard on startup", "solution": "tap($settings)\nif not get_attributes($set_show_keyboard_on_startup)['checked']:\n    tap($set_show_keyboard_on_startup)\nback()"}
{"task": "Enable show note picker on startup", "solution": "tap($settings)\nif not get_attributes($set_show_a_note_picker_on_startup)['checked']:\n    tap($set_show_a_note_picker_on_startup)\nback()"}
{"task": "Enable autosave notes", "solution": "tap($settings)\nif not get_attributes($set_autosave_notes)['checked']:\n    tap($set_autosave_notes)\nback()"}
{"task": "Enable display save success messages", "solution": "tap($settings)\nif not get_attributes($set_display_save_success_messages)['checked']:\n    tap($set_display_save_success_messages)\nback()"}
{"task": "Export notes", "solution": "tap($settings)\ntap($export_notes)\nback()"}
{"task": "Set the text color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_text_color)"}
{"task": "Set the background color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)"}
{"task": "Set the primary color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)"}
{"task": "Set the app icon color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)"}
{"task": "Show the theme color types", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Switch to the next item in the notes list", "solution": "tap($switch_to_next_item)"}
{"task": "Switch to the previous item in the notes list", "solution": "tap($switch_to_prev_item)"}
{"task": "Show the title of the current note", "solution": "get_text($item_title)"}
{"task": "View all items in the current checklist", "solution": "len($checklist_item_list)"}
{"task": "Set the font size of the app to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size of the app to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size of the app to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size of the app to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($sort_checklist_items_ok)"}
{"task": "Create a shortcut for the current note titled 'Meeting Minutes'", "solution": "tap($more_options_note)\ntap($create_shortcut)"}
{"task": "Open more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Go to settings from the current note", "solution": "tap($more_options_note); tap($settings)"}
{"task": "Show word count in the app settings", "solution": "tap($settings); tap($set_show_word_count)"}
{"task": "Make links and emails clickable in the app settings", "solution": "tap($settings); tap($set_make_links_and_emails_clickable)"}
{"task": "Use monospaced font in the app settings", "solution": "tap($settings); tap($set_use_monospaced_font)"}
{"task": "Set the primary color of the app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\ntap($save_set_colors)\nback()"}
{"task": "Set the app icon color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_app_icon_color)\ntap($save_set_colors)\nback()"}
{"task": "Change the theme of the app to auto light/dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)\nback()"}
{"task": "Change the theme of the app to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)\nback()"}
{"task": "Change the theme of the app to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)\nback()"}
{"task": "Remove done items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Sort the items in the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Go to Settings", "solution": "tap($settings)"}
{"task": "Interact with more options for the note titled 'Project Ideas'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Project Ideas')[0])\ntap($more_options_note)"}
{"task": "Select the text note type while creating a new note titled 'Daily Journal'", "solution": "tap($create_note)\nset_text($add_note_title, 'Daily Journal')\ntap($text_note_type)"}
{"task": "Select the checklist type while creating a new checklist titled 'Travel Packing'", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Packing')\ntap($checklist_type)"}
{"task": "Confirm the creation of a new note titled 'Reading List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Reading List')\ntap($add_note_ok)"}
{"task": "Set the font size to 125% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)"}
{"task": "Import notes", "solution": "tap($settings)\ntap($import_notes)"}
{"task": "Set the font size to 50% in the Notes App", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Set the font size to 60% in the Notes App", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Set the font size to 75% in the Notes App", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Set the font size to 90% in the Notes App", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)"}
{"task": "Open the second checklist item", "solution": "tap($checklist_item_list[1])"}
{"task": "Scroll through the items until you find the note titled 'Grocery List'", "solution": "while True:\n    note_titles = $open_note_title_list\n    for i, note_title in enumerate(note_titles):\n        if get_text(note_titles[i]) == 'Grocery List':\n            tap(note_titles[i])\n            break\n    break\n    scroll($open_note_title_list, 'down')"}
{"task": "Switch to the note before the current one", "solution": "tap($switch_to_prev_item)"}
{"task": "Switch to the note following the current one", "solution": "tap($switch_to_next_item)"}
{"task": "Display the checklist items for the current checklist", "solution": "items = $checklist_item_list\nfor item in items:\n    print(get_text(item))"}
{"task": "Create a shortcut for the checklist titled 'Grocery List'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Grocery List':\n        tap(note_titles[i])\n        break\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('create shortcut')[0])"}
{"task": "Lock the note titled 'Project Plan'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Project Plan':\n        tap(note_titles[i])\n        break\ntap($more_options_note)\ntap($more_option_note_buttons.match('lock note')[0])\ntap($lock_note_ok)"}
{"task": "Lock the checklist titled 'Holiday Packing'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Holiday Packing':\n        tap(note_titles[i])\n        break\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('lock note')[0])\ntap($lock_note_ok)"}
{"task": "Open the file of the note titled 'Trip Itinerary'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Trip Itinerary':\n        tap(note_titles[i])\n        break\ntap($more_options_note)\ntap($more_option_note_buttons.match('open file')[0])"}
{"task": "Open the file of the checklist titled 'Office Supplies'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Office Supplies':\n        tap(note_titles[i])\n        break\ntap($more_options_checklist)\ntap($more_option_checklist_buttons.match('open file')[0])"}
{"task": "Enable incognito mode of keyboards in the app settings", "solution": "tap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "Enable line wrap in the app settings", "solution": "tap($settings)\ntap($set_enable_line_wrap)\nback()"}
{"task": "Set alignment options in the app settings", "solution": "tap($settings)\ntap($set_alignment)\n#choose your alignment settings here\nback()"}
{"task": "Customize colors in the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Close the customize colors popup window", "solution": "tap($close_set_colors)"}
{"task": "Lock the note titled 'Shopping List'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list.match('Shopping List')\ntap(note_titles[0])\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the note titled 'Meeting Minutes' and export it as a file", "solution": "tap($open_note)\nnote_titles = $open_note_title_list.match('Meeting Minutes')\ntap(note_titles[0])\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Delete the note titled 'Weekly Report'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list.match('Weekly Report')\ntap(note_titles[0])\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Print the note titled 'Travel Itinerary'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list.match('Travel Itinerary')\ntap(note_titles[0])\ntap($more_options_note)\ntap($print_note)"}
{"task": "Rename the checklist titled 'Grocery List' to 'Supermarket List'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list.match('Grocery List')\ntap(note_titles[0])\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Supermarket List')\ntap($rename_ok)"}
{"task": "Set the font size to 150% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\ntap($exit_settings)"}
{"task": "Set the font size to 175% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\ntap($exit_settings)"}
{"task": "Set the font size to 200% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($exit_settings)"}
{"task": "Set the font size to 250% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)\ntap($exit_settings)"}
{"task": "Set the font size to 300% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)\ntap($exit_settings)"}
{"task": "Set the theme color of the app to auto light/dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'checked': False})[0])"}
{"task": "Set the theme color of the app to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'checked': False})[1])"}
{"task": "Set the theme color of the app to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'checked': False})[2])"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set the font size to 60%", "solution": "tap($settings);tap($set_font_size);tap($font_size_60%);"}
{"task": "Set the font size to 75%", "solution": "tap($settings);tap($set_font_size);tap($font_size_75%);"}
{"task": "Set the font size to 90%", "solution": "tap($settings);tap($set_font_size);tap($font_size_90%);"}
{"task": "Set the font size to 100%", "solution": "tap($settings);tap($set_font_size);tap($font_size_100%);"}
{"task": "Set the font size to 125%", "solution": "tap($settings);tap($set_font_size);tap($font_size_125%);"}
{"task": "Set the font size to 100% in the Notes App", "solution": "# Task 0: Set the font size to 100% in the Notes App\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('100%')[0])\ntap($current_font_size)\nback()\n"}
{"task": "Set the font size to 125% in the Notes App", "solution": "# Task 1: Set the font size to 125% in the Notes App\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('125%')[0])\ntap($current_font_size)\nback()\n"}
{"task": "Set the font size to 150% in the Notes App", "solution": "# Task 2: Set the font size to 150% in the Notes App\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('150%')[0])\ntap($current_font_size)\nback()\n"}
{"task": "Set the font size to 175% in the Notes App", "solution": "# Task 3: Set the font size to 175% in the Notes App\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('175%')[0])\ntap($current_font_size)\nback()\n"}
{"task": "Open more options for the current note", "solution": "# Task 4: Open more options for the current note\ntap($more_options_note)\n"}
{"task": "Tap on the fourth checklist item", "solution": "tap($checklist_item_list[3])"}
{"task": "Create a new note titled 'Meeting Notes'", "solution": "tap($create_note)\nset_text($add_note_title, 'Meeting Notes')\ntap($text_note_type)\ntap($add_note_ok)\n"}
{"task": "Edit the content of the current note to 'Discuss project timeline and milestones'", "solution": "set_text($note_content, 'Discuss project timeline and milestones')\ntap($save_note)\n"}
{"task": "Search for the word 'timeline' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'timeline')\n"}
{"task": "Move to the previous match of 'project' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'project')\ntap($prev_matched_text)\n"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Go to Settings from the more options menu of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Go to Settings from the more options menu of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize the colors of the app from the Settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Open the Theme settings to set the theme color", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)\ntap($set_theme_color)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the Notes app settings", "solution": "tap($settings)"}
{"task": "Enable 'place cursor to the end of note' in settings", "solution": "tap($settings)\nif not get_attributes($set_place_cursor_to_the_end_of_note)['checked']:\n    tap($set_place_cursor_to_the_end_of_note)"}
{"task": "Enable 'show keyboard on startup' in settings", "solution": "tap($settings)\nif not get_attributes($set_show_keyboard_on_startup)['checked']:\n    tap($set_show_keyboard_on_startup)"}
{"task": "Export the note titled 'Weekly Report' as a file", "solution": "tap($open_note)\nnotes = $open_note_title_list\nnote = notes.match('Weekly Report')[0]\ntap(note)\ntap($more_options_note)\ntap($export_as_file)"}
{"task": "Export the checklist titled 'Shopping List' as a file", "solution": "tap($open_note)\nchecklists = $open_note_title_list\nchecklist = checklists.match('Shopping List')[0]\ntap(checklist)\ntap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Print the note titled 'Birthday Invitation'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nnote = notes.match('Birthday Invitation')[0]\ntap(note)\ntap($more_options_note)\ntap($print_note)"}
{"task": "Print the checklist titled 'Daily Tasks'", "solution": "tap($open_note)\nchecklists = $open_note_title_list\nchecklist = checklists.match('Daily Tasks')[0]\ntap(checklist)\ntap($more_options_checklist)\ntap($print_note)"}
{"task": "Delete the note titled 'Old Recipes'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nnote = notes.match('Old Recipes')[0]\ntap(note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the settings of the Notes app", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Show the about section of the Notes app", "solution": "tap($more_options_checklist)\ntap($about)"}
{"task": "Move the checklist item 'Buy groceries' to the bottom of the list", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($move_selected_item_to_the_buttom)"}
{"task": "Rename the checklist item 'Buy groceries' to 'Purchase groceries'", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Purchase groceries')\ntap($rename_ok)"}
{"task": "Delete the checklist item 'Buy groceries'", "solution": "long_tap($checklist_item_list.match('Buy groceries')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Move to the next match of 'milestones' within the current note", "solution": "tap($next_matchhed_text)"}
{"task": "Close the search box", "solution": "tap($close_search_box)"}
{"task": "Open the note titled 'Shopping List'", "solution": "tap($open_note)\nopen_notes = $open_note_title_list.match('Shopping List')\ntap(open_notes[0])"}
{"task": "Create a new checklist note titled 'Grocery List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Add a title 'Workout Plan' to the new note", "solution": "tap($create_note)\nset_text($add_note_title, 'Workout Plan')\ntap($add_note_ok)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings in the Notes App", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open settings in the Notes app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Enable the 'Place cursor to the end of note' setting", "solution": "tap($more_options_note)\ntap($settings)\nif not get_attributes($set_place_cursor_to_the_end_of_note)['checked']:\n    tap($set_place_cursor_to_the_end_of_note)"}
{"task": "Enable the 'Show keyboard on startup' setting", "solution": "tap($more_options_note)\ntap($settings)\nif not get_attributes($set_show_keyboard_on_startup)['checked']:\n    tap($set_show_keyboard_on_startup)"}
{"task": "Set the app theme to Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\ntap($save_set_colors)"}
{"task": "Set the app theme to Custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($save_set_colors)"}
{"task": "Open the Font size settings from the Settings", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Show the current font size setting in the app", "solution": "tap($settings)\ntap($current_font_size)\nget_text($current_font_size)"}
{"task": "Set the font size of the app to 50%", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_50%)"}
{"task": "Open the app settings", "solution": "tap($settings)"}
{"task": "Customize the app's colors", "solution": "tap($settings); tap($set_colors)"}
{"task": "Set the theme color of the app to custom", "solution": "tap($settings); tap($set_colors); tap($theme_color_custom)"}
{"task": "Change the app's font size to 50%", "solution": "tap($settings); tap($set_font_size); tap($font_size_50%)"}
{"task": "Change the app's font size to 60%", "solution": "tap($settings); tap($set_font_size); tap($font_size_60%)"}
{"task": "Set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Set the font size to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)"}
{"task": "Set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Check the current font size", "solution": "tap($settings)\ntap($current_font_size)\n"}
{"task": "Sort the checklist items by date", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the note titled 'Meeting Notes'", "solution": "tap($open_note)\nmeetings = $open_note_title_list.match('Meeting Notes')\nif len(meetings) > 0:\n    tap(meetings[0])"}
{"task": "Save the current note after editing", "solution": "tap($save_note)"}
{"task": "Search for the word 'project' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'project')"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Search for the text 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')"}
{"task": "Enable dark red theme color", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Open settings from the more options in the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open settings from the more options in the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Customize colors in the app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Select text type for the new note", "solution": "tap($text_note_type)"}
{"task": "Open the more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the app settings", "solution": "tap($settings)"}
{"task": "Set the font size to 75%", "solution": "tap($set_font_size)\ntap($font_size_75%)"}
{"task": "Delete the checklist titled 'Completed Tasks'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Completed Tasks':\n        tap(notes[i])\n        tap($more_options_checklist)\n        tap($delete_note)\n        tap($delete_note_ok)\n        break"}
{"task": "Open the settings of the Notes App", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Show the information about the Notes App", "solution": "tap($more_options_note)\ntap($about)"}
{"task": "Open the settings page", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_colors)"}
{"task": "Set the font size of the app to 60%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"60%\"))"}
{"task": "Set the font size of the app to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"75%\"))"}
{"task": "Set the font size of the app to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"90%\"))"}
{"task": "Set the font size of the app to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"100%\"))"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Find the next occurrence of 'meeting' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)"}
{"task": "Find the previous occurrence of 'deadline' within the current note", "solution": "tap($search_within_note)\nset_text($search_text, 'deadline')\ntap($prev_matched_text)"}
{"task": "Exit the search mode within the current note", "solution": "tap($close_search_box)"}
{"task": "Create a new note with the title 'Shopping List'", "solution": "tap($create_note)\nset_text($add_note_title, 'Shopping List')\ntap($add_note_ok)"}
{"task": "Create a new text note titled 'Project Ideas'", "solution": "tap($create_note)\nset_text($add_note_title, 'Project Ideas')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the settings", "solution": "tap($settings)"}
{"task": "Change the font size to large", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)\ntap($sort_checklist_items_ok)"}
{"task": "Customize the colors of the app to blue and white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($set_primary_color, 'blue')\nset_text($set_background_color, 'white')\ntap($save_set_colors)"}
{"task": "Customize the widget colors to green and black", "solution": "tap($settings)\ntap($set_widget_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nset_text($set_primary_color, 'green')\nset_text($set_background_color, 'black')\ntap($save_set_colors)"}
{"task": "Turn on the 'Show word count' option", "solution": "tap($settings)\ntap($set_show_word_count)"}
{"task": "Enable the 'Show a note picker on startup' setting", "solution": "tap($settings)\nset_text($set_show_a_note_picker_on_startup, 'Enable')\nback()"}
{"task": "Enable the 'Autosave notes' setting", "solution": "tap($settings)\nset_text($set_autosave_notes, 'Enable')\nback()"}
{"task": "Enable the 'Display save success messages' setting", "solution": "tap($settings)\nset_text($set_display_save_success_messages, 'Enable')\nback()"}
{"task": "Enable automatic backups in the Notes app", "solution": "tap($settings)\nset_text($set_enable_automatic_backups, 'Enable')\nback()"}
{"task": "Export all notes", "solution": "tap($settings)\ntap($export_notes)\nback()"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings in the Notes app", "solution": "tap($settings)"}
{"task": "Set the font size to 175%", "solution": "tap($font_size_175%)"}
{"task": "Set the font size to 200%", "solution": "tap($font_size_200%)"}
{"task": "Set the font size to 250%", "solution": "tap($font_size_250%)"}
{"task": "Change the app's font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '75%'})[0])"}
{"task": "Change the app's font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '90%'})[0])"}
{"task": "Change the app's font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '100%'})[0])"}
{"task": "Change the app's font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '125%'})[0])"}
{"task": "Show the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\ntext = get_text($current_font_size)\ntext"}
{"task": "Change theme color to white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)"}
{"task": "Change theme color to black & white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)"}
{"task": "Change theme color to custom", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)"}
{"task": "Set font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Set font size to 60%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Set the font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Set the font size to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_175%)\nback()"}
{"task": "Set the widget colors", "solution": "tap($settings)\ntap($set_widget_colors)"}
{"task": "Change the font size", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types[5])"}
{"task": "Show the current font size", "solution": "tap($settings)\ntap($current_font_size)\nprint(get_text($font_size_types[5]))"}
{"task": "Enable word count display", "solution": "tap($settings)\ntap($set_show_word_count)"}
{"task": "Make links and emails clickable", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)"}
{"task": "Scroll down in the settings page", "solution": "scroll($scroll_settings_page, 'down')"}
{"task": "Sort the checklist items by name", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Exit the settings page", "solution": "tap($exit_settings)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Set the font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Show the current font size", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_size = get_attributes($font_size_types.match({'selected': true}))[0]['label']\nprint(current_size)"}
{"task": "Enable the setting to place the cursor at the end of the note", "solution": "tap($settings)\nif not get_attributes($set_place_cursor_to_the_end_of_note)['checked']:\n    tap($set_place_cursor_to_the_end_of_note)"}
{"task": "Enable the setting to show the keyboard on startup", "solution": "tap($settings)\nif not get_attributes($set_show_keyboard_on_startup)['checked']:\n    tap($set_show_keyboard_on_startup)"}
{"task": "Enable the setting to show a note picker on startup", "solution": "tap($settings)\nif not get_attributes($set_show_a_note_picker_on_startup)['checked']:\n    tap($set_show_a_note_picker_on_startup)"}
{"task": "Import notes from a backup", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($import_notes)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Tap more options on the current note", "solution": "tap($more_options_note)"}
{"task": "Tap more options on the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Create a new checklist note titled 'Weekend Tasks'", "solution": "tap($create_note)\nset_text($add_note_title, 'Weekend Tasks')\ntap($checklist_type)"}
{"task": "Confirm the new note creation after typing the title 'Daily Journal'", "solution": "set_text($add_note_title, 'Daily Journal')\ntap($add_note_ok)"}
{"task": "Open the note titled 'Travel Plans'", "solution": "tap($open_note)\n$open_note_title_list.match('Travel Plans')[0] if len($open_note_title_list.match('Travel Plans')) > 0 else None"}
{"task": "Set the theme of the app to Dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Change the theme color of the app to Dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Open settings", "solution": "tap($settings)"}
{"task": "Go to customize colors", "solution": "tap($set_colors)"}
{"task": "Set the primary color of the app to blue", "solution": "tap($set_primary_color)\n# Assuming there is a selection interface for colors\n# The color blue is selected\ntap($theme_color_types.match('blue'))"}
{"task": "Set the app icon color to green", "solution": "tap($set_app_icon_color)\n# Assuming there is a selection interface for colors\n# The color green is selected\ntap($theme_color_types.match('green'))"}
{"task": "Set the theme color to auto light/dark mode", "solution": "tap($set_theme_color)\ntap($theme_color_auto_light_dark)"}
{"task": "Set font size to 75%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)"}
{"task": "Open the more options menu in the note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu in the checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)\ntap($sort_checklist_items_ok)"}
{"task": "Enable line wrap in the notes app settings", "solution": "tap($settings)\nset_text($set_enable_line_wrap, 'true')"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the notes app", "solution": "tap($settings)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set alignment in the notes app settings", "solution": "tap($settings)\ntap($set_alignment)"}
{"task": "Use a monospaced font", "solution": "tap($set_use_monospaced_font)"}
{"task": "Show more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Show more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Scroll through the settings page", "solution": "scroll($scroll_settings_page, \"down\")"}
{"task": "Open more options in the current note", "solution": "tap($more_options_note)"}
{"task": "Enable the autosave notes feature", "solution": "tap($settings)\nscroll($scroll_settings_page, 'up')\ntap($set_autosave_notes)\n"}
{"task": "Export the current note as a file", "solution": "tap($more_options_note)\ntap($export_as_file)\n"}
{"task": "Export the current checklist as a file", "solution": "tap($more_options_checklist)\ntap($export_as_file)\n"}
{"task": "Print the current note", "solution": "tap($more_options_note)\ntap($print_note)\n"}
{"task": "Print the current checklist", "solution": "tap($more_options_checklist)\ntap($print_note)\n"}
{"task": "Set the theme color to light", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_light)\ntap($save_set_colors)"}
{"task": "Set the theme color to dark", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark)\ntap($save_set_colors)"}
{"task": "Set the theme color to dark red", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_dark_red)\ntap($save_set_colors)"}
{"task": "Set the theme color to white", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
{"task": "Set the font size to 200%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Set the font size to 250%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Open the more options menu for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings from the more options of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Close the customize colors popup", "solution": "tap($close_set_colors)"}
{"task": "Customize the colors of the notes app", "solution": "tap($set_colors)"}
{"task": "Save the customized colors", "solution": "tap($save_set_colors)"}
{"task": "Set the theme color of the notes app", "solution": "tap($set_theme_color)"}
{"task": "Set the text color of the notes app", "solution": "tap($set_text_color)"}
{"task": "Set the font size of the app to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Set the font size of the app to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Set the font size of the app to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Open the more options menu of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings menu from the more options of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Change the theme of the Notes app to White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\nback()"}
{"task": "Set the Notes app theme to Black & White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_black_white)\nback()"}
{"task": "Customize the theme color to Custom in the Notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\nback()"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings in the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Set the font size of the app to 90%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('90%')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size of the app to 100%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('100%')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size of the app to 125%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('125%')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Set the font size of the app to 150%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match('150%')[0])\ntap($sort_checklist_items_ok)"}
{"task": "Sort the current checklist by custom", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Open the settings page from the more options note menu", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open the settings page from the more options checklist menu", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Scroll through the settings page", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")"}
{"task": "Exit the settings page", "solution": "tap($exit_settings)"}
{"task": "Open the font size settings from the app settings", "solution": "tap($settings)\ntap($set_font_size)"}
{"task": "Set the font size to 200% in the app settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_200%)"}
{"task": "Set the font size to 250% in the app settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Set the font size to 300% in the app settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Enable the setting to place cursor to the end of note", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Navigate to the Settings in the Notes app", "solution": "tap($settings)"}
{"task": "Customize colors in the Notes app", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Change the font size of the Notes app to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_50%)"}
{"task": "Set the font size to 60% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_60%)"}
{"task": "Increase the font size to 300% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Open the settings from the more options of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Scroll through the settings page", "solution": "tap($more_options_checklist)\ntap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Customize the colors of the app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_colors)"}
{"task": "Customize the widget colors", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_widget_colors)"}
{"task": "Set the font size of the app", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('delete note')[0])\ntap($delete_note_ok)"}
{"task": "Delete the current checklist", "solution": "tap($more_options_checklist)\ntap($more_option_checklist_buttons.match('delete note')[0])\ntap($delete_note_ok)"}
{"task": "Open the settings", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('settings')[0])"}
{"task": "Show information about the app", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('about')[0])"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('rename note')[0])\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)"}
{"task": "Set the background color of the notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\n# You will add specific actions to set the color in the popup window opened after the above taps\ntap($close_set_colors)"}
{"task": "Set the primary color of the notes app", "solution": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\n# You will add specific actions to set the color in the popup window opened after the above taps\ntap($close_set_colors)"}
{"task": "Tap on 'More options' in the current note", "solution": "tap($more_options_note)"}
{"task": "Rename the current note to 'Shopping List'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Set the font size of the app to 175%", "solution": "tap($settings)\ntap($set_font_size)\nif not get_attributes($font_size_175%)['checked']:\n    tap($font_size_175%)"}
{"task": "Set the font size of the app to 200%", "solution": "tap($settings)\ntap($set_font_size)\nif not get_attributes($font_size_200%)['checked']:\n    tap($font_size_200%)"}
{"task": "Set the font size of the app to 250%", "solution": "tap($settings)\ntap($set_font_size)\nif not get_attributes($font_size_250%)['checked']:\n    tap($font_size_250%)"}
{"task": "Set the font size of the app to 300%", "solution": "tap($settings)\ntap($set_font_size)\nif not get_attributes($font_size_300%)['checked']:\n    tap($font_size_300%)"}
{"task": "Show the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\ncurrent_size = $font_size_types.match({'checked': True})[0] if len($font_size_types.match({'checked': True})) > 0 else 'Unknown'\nprint(get_text(current_size))"}
{"task": "Open the file of the current note", "solution": "tap($more_options_note)\ntap($open_file)"}
{"task": "Open the file of the current checklist", "solution": "tap($more_options_checklist)\ntap($open_file)"}
{"task": "Export the current note as a file", "solution": "tap($more_options_note)\ntap($export_as_file)"}
{"task": "Export the current checklist as a file", "solution": "tap($more_options_checklist)\ntap($export_as_file)"}
{"task": "Print the current note", "solution": "tap($more_options_note)\ntap($print_note)"}
{"task": "Rename the current checklist to 'Shopping List'", "solution": "tap($more_options_checklist); tap($rename_note); set_text($rename_input, 'Shopping List'); tap($rename_ok)"}
{"task": "Lock the current note", "solution": "tap($more_options_note); tap($lock_note); tap($lock_note_ok)"}
{"task": "Lock the current checklist", "solution": "tap($more_options_checklist); tap($lock_note); tap($lock_note_ok)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist items by title", "solution": "tap($more_options_checklist); tap($sort_checklist_items); tap($title_type); tap($sort_checklist_items_ok)"}
{"task": "Change the font size to 100% in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($sort_checklist_items_ok)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open app settings", "solution": "tap($settings)"}
{"task": "Set the font size to 100%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_100%)\ntap($sort_checklist_items_ok)"}
{"task": "Check the current font size of the app", "solution": "tap($settings)\ntap($current_font_size)\nsize_buttons = $font_size_types\nfor button in size_buttons:\n\tif get_attributes(button)['checked']:\n\t\tcurrent_font_size = get_text(button)\n\t\tbreak\nback()\nprint(current_font_size)"}
{"task": "Enable the 'Show word count' option", "solution": "tap($settings)\nif not get_attributes($set_show_word_count)['selected']:\n\ttap($set_show_word_count)"}
{"task": "Enable the 'Make links and emails clickable' option", "solution": "tap($settings)\nif not get_attributes($set_make_links_and_emails_clickable)['selected']:\n\ttap($set_make_links_and_emails_clickable)"}
{"task": "Exit the settings page", "solution": "tap($settings)\ntap($exit_settings)"}
{"task": "Rename the current note to 'Meeting Minutes - 2023-10-05'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Minutes - 2023-10-05')\ntap($rename_ok)"}
{"task": "Open more options in the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Move the checklist item named 'Buy milk' to the top of the list", "solution": "\n# Long tap on checklist item named 'Buy milk' to select it\nlong_tap($checklist_item_list.match('Buy milk')[0])\n# Tap on Move to the top button to move the item to the top\ntap($move_selected_item_to_the_top)"}
{"task": "Move the checklist item named 'Buy milk' to the bottom of the list", "solution": "\n# Long tap on checklist item named 'Buy milk' to select it\nlong_tap($checklist_item_list.match('Buy milk')[0])\n# Tap on Move to the bottom button to move the item to the bottom\ntap($move_selected_item_to_the_buttom)"}
{"task": "Rename the checklist item named 'Buy milk' to 'Purchase milk'", "solution": "\n# Long tap on checklist item named 'Buy milk' to select it\nlong_tap($checklist_item_list.match('Buy milk')[0])\n# Tap on Rename button\ntap($rename_selected_checklist_item)\n# Set the new name 'Purchase milk'\nset_text($rename_input, 'Purchase milk')\n# Confirm the rename by tapping OK\ntap($rename_ok)"}
{"task": "Delete the checklist item named 'Buy milk'", "solution": "\n# Long tap on checklist item named 'Buy milk' to select it\nlong_tap($checklist_item_list.match('Buy milk')[0])\n# Tap on Delete button to delete the item\ntap($delete_selected_checklist_item)"}
{"task": "Enable the setting to show keyboard on startup", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_show_keyboard_on_startup)"}
{"task": "Enable the setting to show a note picker on startup", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_show_a_note_picker_on_startup)"}
{"task": "Enable the setting to autosave notes", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_autosave_notes)"}
{"task": "Enable the setting to display save success messages", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_display_save_success_messages)"}
{"task": "Open the more options menu of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Print the current checklist", "solution": "if 'checklist' in get_text($item_title).lower():\n    for item in $checklist_item_list:\n        print(get_text(item))"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Delete the current checklist", "solution": "tap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note if 'note' in get_text($item_title).lower() else $more_options_checklist)\ntap($settings)"}
{"task": "Show me the information about the app", "solution": "tap($more_options_note if 'note' in get_text($item_title).lower() else $more_options_checklist)\ntap($about)"}
{"task": "Sort the current checklist items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)"}
{"task": "Sort the current checklist items by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)"}
{"task": "Confirm the sort type for the current checklist", "solution": "tap($sort_checklist_items_ok)"}
{"task": "Open settings from the more options in a note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Open settings from the more options in a checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Create a shortcut for the current note on the home screen", "solution": "tap($more_options_note)\ntap($create_shortcut)"}
{"task": "Lock the current note", "solution": "tap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)"}
{"task": "Open the file of the current checklist", "solution": "tap($more_options_checklist)\ntap($open_file)"}
{"task": "Export the current note as a PDF file", "solution": "tap($more_options_note)\ntap($export_as_file)"}
{"task": "Print the current checklist", "solution": "tap($more_options_checklist)\ntap($print_note)"}
{"task": "Set the font size to 125%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"125%\")[0])"}
{"task": "Set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"150%\")[0])"}
{"task": "Set the font size to 175%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"175%\")[0])"}
{"task": "Set the font size to 200%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"200%\")[0])"}
{"task": "Set the font size to 250%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match(\"250%\")[0])"}
{"task": "Open the note titled 'Grocery List'", "solution": "tap($open_note); tap($open_note_title_list.match('Grocery List')[0])"}
{"task": "Save the current note", "solution": "tap($save_note)"}
{"task": "Search the current note for the term 'urgent'", "solution": "tap($search_within_note); set_text($search_text, 'urgent')"}
{"task": "Open the Notes app.", "solution": "tap($open_note)"}
{"task": "Create a new note titled 'Grocery List'.", "solution": "tap($create_note); set_text($add_note_title, 'Grocery List'); tap($add_note_ok)"}
{"task": "Open the settings menu from the more options of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Change the font size of the app to 250%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_250%)"}
{"task": "Open the more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Set the font size of the app to 300%", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_300%)"}
{"task": "Rename the current note to 'Meeting Notes'", "solution": "tap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')"}
{"task": "Rename the current checklist to 'Grocery List'", "solution": "tap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')"}
{"task": "Confirm the rename operation for the current note", "solution": "tap($rename_ok)"}
{"task": "Confirm the rename operation for the current checklist", "solution": "tap($rename_ok)"}
{"task": "Open the settings of the Notes app", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Set the cursor to automatically go to the end of a note", "solution": "tap($settings)\nset_text($set_place_cursor_to_the_end_of_note, 'true')"}
{"task": "Enable the setting to show the keyboard on startup", "solution": "tap($settings)\nset_text($set_show_keyboard_on_startup, 'true')"}
{"task": "Enable the setting to show a note picker on startup", "solution": "tap($settings)\nset_text($set_show_a_note_picker_on_startup, 'true')"}
{"task": "Enable the autosave notes feature", "solution": "tap($settings)\nset_text($set_autosave_notes, 'true')"}
{"task": "Enable the display save success messages feature", "solution": "tap($settings)\nset_text($set_display_save_success_messages, 'true')"}
{"task": "Check the font size setting in the Notes app", "solution": "tap($settings)\nfont_size = get_attributes($current_font_size)[\"selected\"]\nback()"}
{"task": "Increase the font size in the Notes app", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Enable word count display in the Notes app", "solution": "tap($settings)\ntap($set_show_word_count)\nback()"}
{"task": "Set links and emails to be clickable in the Notes app", "solution": "tap($settings)\ntap($set_make_links_and_emails_clickable)\nback()"}
{"task": "Switch to a monospaced font in the Notes app", "solution": "tap($settings)\ntap($set_use_monospaced_font)\nback()"}
{"task": "Delete the current note", "solution": "tap($more_options_note)\ntap($more_option_note_buttons.match('Delete note')[0])\ntap($delete_note_ok)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Switch to the previous item", "solution": "tap($switch_to_prev_item)"}
{"task": "Switch to the next item", "solution": "tap($switch_to_next_item)"}
{"task": "Scroll through the settings page", "solution": "scroll($scroll_settings_page, 'down')"}
{"task": "Customize the app colors", "solution": "tap($set_colors)\ntap($set_theme_color)\ntap($theme_color_custom)\ntap($set_theme_color)"}
{"task": "Exit the settings page", "solution": "tap($exit_settings)"}
{"task": "Show the word count in the Notes app", "solution": "tap($set_show_word_count)"}
{"task": "Enable making links and emails clickable in the Notes app", "solution": "tap($set_make_links_and_emails_clickable)"}
{"task": "Set the font size to 300%", "solution": "tap($settings)\nscroll($scroll_settings_page, \"down\")\ntap($set_font_size)\ntap($font_size_types.match('300%')[0])"}
{"task": "Remove completed items from the current checklist", "solution": "tap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist items", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)"}
{"task": "Sort the current checklist items by title", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Create a new checklist note titled 'Travel Packing List'.", "solution": "tap($create_note)\nset_text($add_note_title, 'Travel Packing List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Open the note titled 'Meeting Notes'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Meeting Notes')[0])"}
{"task": "Search for the term 'budget' within the note titled 'Financial Plan'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Financial Plan')[0])\ntap($search_within_note)\nset_text($search_text, 'budget')"}
{"task": "Go to the previous instance of 'budget' in the note titled 'Financial Plan'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Financial Plan')[0])\ntap($search_within_note)\nset_text($search_text, 'budget')\ntap($prev_matched_text)"}
{"task": "Find the next instance of 'budget' in the note titled 'Financial Plan'.", "solution": "tap($open_note)\ntap($open_note_title_list.match('Financial Plan')[0])\ntap($search_within_note)\nset_text($search_text, 'budget')\ntap($next_matchhed_text)"}
{"task": "Export all notes", "solution": "tap($settings)\ntap($export_notes)"}
{"task": "Open the more options of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings of the app", "solution": "tap($settings)"}
{"task": "Customize the colors in the settings", "solution": "tap($settings)\ntap($set_colors)"}
{"task": "Set the background color of the app to blue", "solution": "tap($settings)\ntap($set_colors)\ntap($set_background_color)\nset_text($set_background_color, 'blue')\ntap($save_set_colors)"}
{"task": "Enable Incognito mode for keyboards in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Turn on line wrap in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_line_wrap)"}
{"task": "Set the text alignment to center in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_alignment)\ntap($alignment_center)"}
{"task": "Open the more options menu of the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings from the more options menu of the current note", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Use monospaced font in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_monospaced_font)"}
{"task": "Enable Incognito mode for keyboards in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Enable line wrapping in the Notes app", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_enable_line_wrap)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Sort the current checklist items by date created", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($date_created_type)"}
{"task": "Sort the current checklist items by custom order", "solution": "tap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)"}
{"task": "Confirm the sorting type for the current checklist", "solution": "tap($sort_checklist_items_ok)"}
{"task": "Exit the settings page", "solution": "tap($exit_settings)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the more options menu of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open the settings from the more options menu of the current checklist", "solution": "tap($more_options_checklist)\ntap($settings)"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open the settings menu", "solution": "tap($settings)"}
{"task": "Set the font size to 150%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)"}
{"task": "Open the more options of the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Set the primary color of the app to red", "solution": "tap($settings); tap($set_colors); tap($set_primary_color); set_text($set_primary_color, 'red'); tap($save_set_colors)"}
{"task": "Change the app icon color to green", "solution": "tap($settings); tap($set_colors); tap($set_app_icon_color); set_text($set_app_icon_color, 'green'); tap($save_set_colors)"}
{"task": "Set the theme color of the app", "solution": "tap($settings); tap($set_colors); tap($set_theme_color)"}
{"task": "Set the theme color to auto light/dark mode", "solution": "tap($settings); tap($set_colors); tap($set_theme_color); tap($theme_color_auto_light_dark); tap($save_set_colors)"}
{"task": "Set the theme color to light mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'text': 'light'}))\nback()"}
{"task": "Set the theme color to dark mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'text': 'Dark'}))\nback()"}
{"task": "Set the theme color to dark red mode", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match({'text': 'Dark red'}))\nback()"}
{"task": "Open settings and change the font size to 50%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '50%'}))\nback()"}
{"task": "Go to the app's settings and set the font size to 60%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'text': '60%'}))\nback()"}
{"task": "Adjust the font size to 75% from the settings menu", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_75%)\nback()"}
{"task": "Access the settings and set the font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Change the current font size to 100% in the settings", "solution": "tap($settings)\ntap($current_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Update the app's font size to 125% via the settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Set the font size to 150% by accessing the settings", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Tap on more options in the checklist and change the font size to 50%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'checked': false})[0])"}
{"task": "Open more options in the checklist and set the font size to 60%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'checked': false})[1])"}
{"task": "Go to the more options checklist and adjust the font size to 75%", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'checked': false})[2])"}
{"task": "Change the font size to 90% by accessing the more options checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'checked': false})[3])"}
{"task": "Set the font size to 100% through the more options checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'checked': false})[4])"}
{"task": "Update the font size to 125% via more options in the checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\n"}
{"task": "Adjust the font size to 150% from the more options checklist", "solution": "tap($more_options_checklist)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\n"}
{"task": "Open more options in the current note and change the font size to 50% through settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_50%)\n"}
{"task": "Tap on more options in the current note and set the font size to 60% via settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_60%)\n"}
{"task": "Set the font size to 75% in the app settings through more options in the current note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_75%)\n"}
{"task": "Access more options in the note and change the font size to 90% in the settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_90%)\nback()"}
{"task": "Change the font size to 100% in the settings via the more options note button", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_100%)\nback()"}
{"task": "Open more options in the note and set the font size to 125% in the app settings", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_125%)\nback()"}
{"task": "Update the font size to 150% by accessing settings through more options in the note", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\ntap($font_size_150%)\nback()"}
{"task": "Open more options for the current note", "solution": "tap($more_options_note)"}
{"task": "Open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings", "solution": "tap($settings)"}
{"task": "Set font size to 300%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_types.match({'50%': False, '60%': False, '75%': False, '90%': False, '100%': False, '125%': False, '150%': False, '175%': False, '200%': False, '250%': False, '300%': True}))\n"}
{"task": "Show the current font size", "solution": "tap($settings)\ntap($current_font_size)\n"}
{"task": "Set cursor to place at the end of the note", "solution": "tap($settings)\ntap($set_place_cursor_to_the_end_of_note)\n"}
